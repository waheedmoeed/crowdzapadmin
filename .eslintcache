[{"D:\\FYP\\crowdzapadmin\\src\\reportWebVitals.js":"1","D:\\FYP\\crowdzapadmin\\src\\Redux\\index.js":"2","D:\\FYP\\crowdzapadmin\\src\\App\\MainRoute\\PrivateRoute.js":"3","D:\\FYP\\crowdzapadmin\\src\\Redux\\Setting\\index.js":"4","D:\\FYP\\crowdzapadmin\\src\\Redux\\CryptoOrder\\index.js":"5","D:\\FYP\\crowdzapadmin\\src\\Redux\\CryptoTransfer\\index.js":"6","D:\\FYP\\crowdzapadmin\\src\\Redux\\Wallet\\index.js":"7","D:\\FYP\\crowdzapadmin\\src\\Scenes\\SearchPage\\index.js":"8","D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\index.js":"9","D:\\FYP\\crowdzapadmin\\src\\Scenes\\Profiling\\index.js":"10","D:\\FYP\\crowdzapadmin\\src\\Config\\constants.js":"11","D:\\FYP\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\Components\\Polls\\index.js":"12","D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\index.js":"13","D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\RequestForm\\index.js":"14","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\index.js":"15","D:\\FYP\\crowdzapadmin\\src\\Scenes\\Profiling\\Components\\User\\index.js":"16","D:\\FYP\\crowdzapadmin\\src\\Config\\HTTPService.js":"17","D:\\FYP\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\Components\\Polls\\Components\\Poll\\index.js":"18","D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\index.js":"19","D:\\FYP\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\LeftSide\\index.js":"20","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\MenuBar\\index.js":"21","D:\\FYP\\crowdzapadmin\\src\\Components\\Common\\PlaceHolder\\index.js":"22","D:\\FYP\\crowdzapadmin\\src\\Services\\CryptoOrder\\index.js":"23","D:\\FYP\\crowdzapadmin\\src\\Components\\Common\\CustomInput\\index.js":"24","D:\\FYP\\crowdzapadmin\\src\\Services\\Wallet\\index.js":"25","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\ListComp\\index.js":"26","D:\\FYP\\crowdzapadmin\\src\\Scenes\\SearchPage\\Components\\SearchMap\\Components\\MiniHouse\\index.js":"27","D:\\FYP\\crowdzapadmin\\src\\Services\\CryptoOrder\\CryptoOrderService.js":"28","D:\\FYP\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\Map.js":"29","D:\\FYP\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\Overview.js":"30","D:\\FYP\\crowdzapadmin\\src\\Services\\InvestmentPortfolio\\InvestmentPortfolioService.js":"31","D:\\FYP\\crowdzapadmin\\src\\Components\\UserMenu\\index.js":"32","D:\\FYP\\crowdzapadmin\\src\\Services\\Geo\\index.js":"33","D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\Key\\index.js":"34","D:\\FYP\\crowdzapadmin\\src\\Components\\RegisterLoginForm\\Components\\LoginForm\\index.js":"35","D:\\FYP\\crowdzapadmin\\src\\Scenes\\SearchPage\\Components\\SearchForm\\index.js":"36","D:\\FYP\\crowdzapadmin\\src\\Components\\SelectComponent\\index.js":"37","D:\\FYP\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\Header\\index.js":"38","D:\\FYP\\crowdzapadmin\\src\\index.js":"39","D:\\FYP\\crowdzapadmin\\src\\Redux\\User\\index.js":"40","D:\\FYP\\crowdzapadmin\\src\\Config\\localStore.js":"41","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\index.js":"42","D:\\FYP\\crowdzapadmin\\src\\Scenes\\TokenizingPropertyPage\\index.js":"43","D:\\FYP\\crowdzapadmin\\src\\Scenes\\TokenizingPropertyPage\\Components\\MapLocation.js":"44","D:\\FYP\\crowdzapadmin\\src\\Components\\DashboardLayout\\index.js":"45","D:\\FYP\\crowdzapadmin\\src\\Scenes\\Profiling\\Components\\Kyc\\index.js":"46","D:\\FYP\\crowdzapadmin\\src\\Config\\envConfig.js":"47","D:\\FYP\\crowdzapadmin\\src\\Services_chain\\AuthorithyContract\\index.js":"48","D:\\FYP\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\Gallery.js":"49","D:\\FYP\\crowdzapadmin\\src\\Services\\Wallet\\SerializedHDWallet.js":"50","D:\\FYP\\crowdzapadmin\\src\\Services\\Wallet\\Wallet.js":"51","D:\\FYP\\crowdzapadmin\\src\\Scenes\\SearchPage\\Components\\SearchMap\\index.js":"52","D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\BalanceHeader\\index.js":"53","D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\index.js":"54","D:\\FYP\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\Header\\Components\\NotifyMenu\\index.js":"55","D:\\FYP\\crowdzapadmin\\src\\Components\\LanguageSelector\\index.js":"56","D:\\FYP\\crowdzapadmin\\src\\Components\\RegisterLoginForm\\Components\\RegisterForm\\index.js":"57","D:\\FYP\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\Header\\Components\\SearchForm\\index.js":"58","D:\\FYP\\crowdzapadmin\\src\\Services\\ListProperty\\index.js":"59","D:\\FYP\\crowdzapadmin\\src\\Redux\\ListedProps\\index.js":"60","D:\\FYP\\crowdzapadmin\\src\\App\\MainRoute\\index.js":"61","D:\\FYP\\crowdzapadmin\\src\\Services\\User\\index.js":"62","D:\\FYP\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\index.js":"63","D:\\FYP\\crowdzapadmin\\src\\Components\\Common\\Alert\\index.js":"64","D:\\FYP\\crowdzapadmin\\src\\Services\\Setting\\index.js":"65","D:\\FYP\\crowdzapadmin\\src\\Services\\Setting\\SettingService.js":"66","D:\\FYP\\crowdzapadmin\\src\\Services\\Wallet\\HDWallet.js":"67","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\SlideShow\\index.js":"68","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\Subscribe\\index.js":"69","D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\AddKey\\index.js":"70","D:\\FYP\\crowdzapadmin\\src\\Services\\ListProperty\\ListedPropService.js":"71","D:\\FYP\\crowdzapadmin\\src\\Services_chain\\Contracts\\index.js":"72","D:\\FYP\\crowdzapadmin\\src\\Services\\InvestmentPortfolio\\index.js":"73","D:\\FYP\\crowdzapadmin\\src\\Redux\\AuthorithyContract\\index.js":"74","D:\\FYP\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\Components\\CreatePoll\\index.js":"75","D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\SendForm\\index.js":"76","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\Caption\\index.js":"77","D:\\FYP\\crowdzapadmin\\src\\Services_chain\\TransferCrypto\\index.js":"78","D:\\FYP\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\SendAndBuy.js":"79","D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\CryptoOrders\\index.js":"80","D:\\FYP\\crowdzapadmin\\src\\Services\\Wallet\\WalletService.js":"81","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\index.js":"82","D:\\FYP\\crowdzapadmin\\src\\Redux\\TO\\errorReducer.js":"83","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\ListProperty\\index.js":"84","D:\\FYP\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\index.js":"85","D:\\FYP\\crowdzapadmin\\src\\Config\\LCDClient.js":"86","D:\\FYP\\crowdzapadmin\\src\\Components\\RegisterLoginForm\\index.js":"87","D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\NewWallet\\index.js":"88","D:\\FYP\\crowdzapadmin\\src\\Scenes\\MyhousePage\\index.js":"89","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\index.js":"90","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\SearchBar\\index.js":"91","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\GetInTouch\\index.js":"92","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\reportWebVitals.js":"93","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\App\\MainRoute\\index.js":"94","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\App\\MainRoute\\PrivateRoute.js":"95","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\ListedProps\\index.js":"96","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\Wallet\\index.js":"97","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\MyhousePage\\index.js":"98","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\index.js":"99","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\User\\index.js":"100","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\index.js":"101","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\Components\\Polls\\index.js":"102","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\RequestForm\\index.js":"103","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\DashboardLayout\\index.js":"104","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\ListProperty\\index.js":"105","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services_chain\\Contracts\\index.js":"106","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\index.js":"107","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\Components\\Polls\\Components\\Poll\\index.js":"108","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\MenuBar\\index.js":"109","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\index.js":"110","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\index.js":"111","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Setting\\index.js":"112","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\ListProperty\\ListedPropService.js":"113","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\Header\\Components\\SearchForm\\index.js":"114","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\CryptoOrder\\CryptoOrderService.js":"115","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\SendAndBuy.js":"116","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\Header\\Components\\NotifyMenu\\index.js":"117","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Wallet\\SerializedHDWallet.js":"118","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Config\\LCDClient.js":"119","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Geo\\index.js":"120","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Wallet\\Wallet.js":"121","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\AddKey\\index.js":"122","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\RegisterLoginForm\\Components\\RegisterForm\\index.js":"123","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\ListComp\\index.js":"124","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services_chain\\AuthorithyContract\\index.js":"125","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\Components\\CreatePoll\\index.js":"126","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\AuthorithyContract\\index.js":"127","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\index.js":"128","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\Setting\\index.js":"129","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Config\\localStore.js":"130","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\SearchPage\\index.js":"131","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Profiling\\Components\\Kyc\\index.js":"132","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\ListProperty\\index.js":"133","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\index.js":"134","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\Common\\Alert\\index.js":"135","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\CryptoOrder\\index.js":"136","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\Common\\PlaceHolder\\index.js":"137","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Wallet\\index.js":"138","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\InvestmentPortfolio\\InvestmentPortfolioService.js":"139","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\AdminDetail\\index.js":"140","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\Gallery.js":"141","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\SearchPage\\Components\\SearchMap\\Components\\MiniHouse\\index.js":"142","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Wallet\\WalletService.js":"143","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services_chain\\Wallet\\index.js":"144","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\NewWallet\\index.js":"145","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\Caption\\index.js":"146","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\SlideShow\\index.js":"147","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\LeftSide\\index.js":"148","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\UserMenu\\index.js":"149","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\RegisterLoginForm\\Components\\LoginForm\\index.js":"150","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SingleHouse\\index.js":"151","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\AdminDetail\\Components\\description.js":"152","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\AdminDetail\\Components\\investments.js":"153","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\TO\\errorReducer.js":"154","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\index.js":"155","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Profiling\\index.js":"156","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\index.js":"157","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Profiling\\Components\\User\\index.js":"158","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Config\\HTTPService.js":"159","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Config\\envConfig.js":"160","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\GetInTouch\\index.js":"161","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\BalanceHeader\\index.js":"162","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services_chain\\TransferCrypto\\index.js":"163","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\CryptoOrders\\index.js":"164","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\Key\\index.js":"165","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\Overview.js":"166","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Config\\constants.js":"167","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\CryptoOrder\\index.js":"168","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\SearchPage\\Components\\SearchForm\\index.js":"169","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\Common\\CustomInput\\index.js":"170","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\Map.js":"171","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\index.js":"172","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\SearchPage\\Components\\SearchMap\\index.js":"173","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\RegisterLoginForm\\index.js":"174","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\CryptoTransfer\\index.js":"175","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\TokenizingPropertyPage\\index.js":"176","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\index.js":"177","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\Header\\index.js":"178","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\InvestmentPortfolio\\index.js":"179","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Setting\\SettingService.js":"180","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Wallet\\HDWallet.js":"181","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Investments\\index.js":"182","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Investments\\Components\\index.js":"183","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Profiling\\Components\\Contacts\\index.js":"184","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\User\\UserService.js":"185","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\AdminKYC\\index.js":"186","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\AdminKYC\\Components\\index.js":"187","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\index.js":"188","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Profiling\\Components\\Contacts\\Components\\index.js":"189","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\User\\index.js":"190","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\SendForm\\index.js":"191","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\Subscribe\\index.js":"192","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\LanguageSelector\\index.js":"193","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\InputMap\\Components\\Marker\\index.js":"194","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Complain\\index.js":"195"},{"size":362,"mtime":1609257823527,"results":"196","hashOfConfig":"197"},{"size":1134,"mtime":1615619702111,"results":"198","hashOfConfig":"197"},{"size":666,"mtime":1615619702082,"results":"199","hashOfConfig":"197"},{"size":859,"mtime":1609365512689,"results":"200","hashOfConfig":"197"},{"size":3660,"mtime":1610121277826,"results":"201","hashOfConfig":"197"},{"size":1575,"mtime":1611485636270,"results":"202","hashOfConfig":"197"},{"size":4717,"mtime":1615619702110,"results":"203","hashOfConfig":"197"},{"size":550,"mtime":1609334418294,"results":"204","hashOfConfig":"197"},{"size":1129,"mtime":1610346662513,"results":"205","hashOfConfig":"197"},{"size":1066,"mtime":1615619702134,"results":"206","hashOfConfig":"197"},{"size":2936,"mtime":1620399890322,"results":"207","hashOfConfig":"197"},{"size":1895,"mtime":1620407419285,"results":"208","hashOfConfig":"197"},{"size":485,"mtime":1609349279732,"results":"209","hashOfConfig":"197"},{"size":3896,"mtime":1615619702141,"results":"210","hashOfConfig":"197"},{"size":593,"mtime":1615619702125,"results":"211","hashOfConfig":"197"},{"size":239,"mtime":1615619702133,"results":"212","hashOfConfig":"197"},{"size":707,"mtime":1607698581234,"results":"213","hashOfConfig":"197"},{"size":3200,"mtime":1620416305955,"results":"214","hashOfConfig":"197"},{"size":849,"mtime":1610331914218,"results":"215","hashOfConfig":"197"},{"size":3509,"mtime":1615619702087,"results":"216","hashOfConfig":"197"},{"size":3311,"mtime":1615619702118,"results":"217","hashOfConfig":"197"},{"size":354,"mtime":1609456600127,"results":"218","hashOfConfig":"197"},{"size":1670,"mtime":1615619702146,"results":"219","hashOfConfig":"197"},{"size":917,"mtime":1615619702086,"results":"220","hashOfConfig":"197"},{"size":2741,"mtime":1611057718013,"results":"221","hashOfConfig":"197"},{"size":616,"mtime":1609339292258,"results":"222","hashOfConfig":"197"},{"size":250,"mtime":1609335886502,"results":"223","hashOfConfig":"197"},{"size":914,"mtime":1615619702145,"results":"224","hashOfConfig":"197"},{"size":429,"mtime":1615619702095,"results":"225","hashOfConfig":"197"},{"size":2847,"mtime":1619889418530,"results":"226","hashOfConfig":"197"},{"size":396,"mtime":1615619702147,"results":"227","hashOfConfig":"197"},{"size":3276,"mtime":1615619702106,"results":"228","hashOfConfig":"197"},{"size":732,"mtime":1609341120430,"results":"229","hashOfConfig":"197"},{"size":1685,"mtime":1611057717657,"results":"230","hashOfConfig":"197"},{"size":5846,"mtime":1615619702090,"results":"231","hashOfConfig":"197"},{"size":4587,"mtime":1619990197240,"results":"232","hashOfConfig":"197"},{"size":1701,"mtime":1620415503728,"results":"233","hashOfConfig":"197"},{"size":996,"mtime":1619973800484,"results":"234","hashOfConfig":"197"},{"size":612,"mtime":1611057717367,"results":"235","hashOfConfig":"197"},{"size":3470,"mtime":1609781637504,"results":"236","hashOfConfig":"197"},{"size":1368,"mtime":1610371372870,"results":"237","hashOfConfig":"197"},{"size":600,"mtime":1615619702128,"results":"238","hashOfConfig":"197"},{"size":11956,"mtime":1620238336791,"results":"239","hashOfConfig":"197"},{"size":1127,"mtime":1615619702137,"results":"240","hashOfConfig":"197"},{"size":1054,"mtime":1609335993406,"results":"241","hashOfConfig":"197"},{"size":9477,"mtime":1615619702130,"results":"242","hashOfConfig":"197"},{"size":1250,"mtime":1610343188012,"results":"243","hashOfConfig":"197"},{"size":3645,"mtime":1620416107393,"results":"244","hashOfConfig":"197"},{"size":1085,"mtime":1615619702093,"results":"245","hashOfConfig":"197"},{"size":597,"mtime":1610372027765,"results":"246","hashOfConfig":"197"},{"size":2232,"mtime":1610354833461,"results":"247","hashOfConfig":"197"},{"size":897,"mtime":1609335812008,"results":"248","hashOfConfig":"197"},{"size":3156,"mtime":1611057718457,"results":"249","hashOfConfig":"197"},{"size":8068,"mtime":1612778904818,"results":"250","hashOfConfig":"197"},{"size":4165,"mtime":1609337447986,"results":"251","hashOfConfig":"197"},{"size":1321,"mtime":1611057717708,"results":"252","hashOfConfig":"197"},{"size":5650,"mtime":1611057716955,"results":"253","hashOfConfig":"197"},{"size":492,"mtime":1619976169580,"results":"254","hashOfConfig":"197"},{"size":2999,"mtime":1620467945849,"results":"255","hashOfConfig":"197"},{"size":1398,"mtime":1619990339109,"results":"256","hashOfConfig":"197"},{"size":2286,"mtime":1615619702084,"results":"257","hashOfConfig":"197"},{"size":2135,"mtime":1615619702152,"results":"258","hashOfConfig":"197"},{"size":1926,"mtime":1611074030744,"results":"259","hashOfConfig":"197"},{"size":794,"mtime":1610092859118,"results":"260","hashOfConfig":"197"},{"size":1221,"mtime":1620231988675,"results":"261","hashOfConfig":"197"},{"size":583,"mtime":1615619702150,"results":"262","hashOfConfig":"197"},{"size":1149,"mtime":1610372028245,"results":"263","hashOfConfig":"197"},{"size":425,"mtime":1609339543969,"results":"264","hashOfConfig":"197"},{"size":655,"mtime":1571310419000,"results":"265","hashOfConfig":"197"},{"size":2445,"mtime":1611057717545,"results":"266","hashOfConfig":"197"},{"size":571,"mtime":1620230387281,"results":"267","hashOfConfig":"197"},{"size":2340,"mtime":1620478383303,"results":"268","hashOfConfig":"197"},{"size":694,"mtime":1620475857067,"results":"269","hashOfConfig":"197"},{"size":6870,"mtime":1620416086536,"results":"270","hashOfConfig":"197"},{"size":2916,"mtime":1620417484587,"results":"271","hashOfConfig":"197"},{"size":3117,"mtime":1615619702142,"results":"272","hashOfConfig":"197"},{"size":851,"mtime":1615619702115,"results":"273","hashOfConfig":"197"},{"size":1613,"mtime":1620408122221,"results":"274","hashOfConfig":"197"},{"size":4166,"mtime":1620475848735,"results":"275","hashOfConfig":"197"},{"size":6230,"mtime":1615619702140,"results":"276","hashOfConfig":"197"},{"size":772,"mtime":1609360107416,"results":"277","hashOfConfig":"197"},{"size":854,"mtime":1615619702114,"results":"278","hashOfConfig":"197"},{"size":267,"mtime":1609360107037,"results":"279","hashOfConfig":"197"},{"size":1899,"mtime":1609457640425,"results":"280","hashOfConfig":"197"},{"size":3232,"mtime":1615619702099,"results":"281","hashOfConfig":"197"},{"size":154,"mtime":1610886568244,"results":"282","hashOfConfig":"197"},{"size":852,"mtime":1609341120310,"results":"283","hashOfConfig":"197"},{"size":2855,"mtime":1611057717197,"results":"284","hashOfConfig":"197"},{"size":813,"mtime":1609351396468,"results":"285","hashOfConfig":"197"},{"size":228,"mtime":1609339292234,"results":"286","hashOfConfig":"197"},{"size":3819,"mtime":1609366725658,"results":"287","hashOfConfig":"197"},{"size":1275,"mtime":1615619702113,"results":"288","hashOfConfig":"197"},{"size":362,"mtime":1609257823527,"results":"289","hashOfConfig":"290"},{"size":2726,"mtime":1622382541103,"results":"291","hashOfConfig":"290"},{"size":666,"mtime":1615619702082,"results":"292","hashOfConfig":"290"},{"size":1398,"mtime":1619990339109,"results":"293","hashOfConfig":"290"},{"size":4717,"mtime":1615619702110,"results":"294","hashOfConfig":"290"},{"size":1010,"mtime":1621020162817,"results":"295","hashOfConfig":"290"},{"size":1129,"mtime":1610346662513,"results":"296","hashOfConfig":"290"},{"size":2824,"mtime":1621673629033,"results":"297","hashOfConfig":"290"},{"size":228,"mtime":1609339292234,"results":"298","hashOfConfig":"290"},{"size":2600,"mtime":1621008079844,"results":"299","hashOfConfig":"290"},{"size":4145,"mtime":1622291225405,"results":"300","hashOfConfig":"290"},{"size":1054,"mtime":1609335993406,"results":"301","hashOfConfig":"290"},{"size":3552,"mtime":1622813432656,"results":"302","hashOfConfig":"290"},{"size":3450,"mtime":1621695633921,"results":"303","hashOfConfig":"290"},{"size":854,"mtime":1615619702114,"results":"304","hashOfConfig":"290"},{"size":4463,"mtime":1621009031221,"results":"305","hashOfConfig":"290"},{"size":3311,"mtime":1615619702118,"results":"306","hashOfConfig":"290"},{"size":849,"mtime":1610331914218,"results":"307","hashOfConfig":"290"},{"size":3232,"mtime":1615619702099,"results":"308","hashOfConfig":"290"},{"size":1958,"mtime":1621888390385,"results":"309","hashOfConfig":"290"},{"size":791,"mtime":1621111381559,"results":"310","hashOfConfig":"290"},{"size":492,"mtime":1619976169580,"results":"311","hashOfConfig":"290"},{"size":1179,"mtime":1622291512323,"results":"312","hashOfConfig":"290"},{"size":4166,"mtime":1620475848735,"results":"313","hashOfConfig":"290"},{"size":4165,"mtime":1609337447986,"results":"314","hashOfConfig":"290"},{"size":597,"mtime":1610372027765,"results":"315","hashOfConfig":"290"},{"size":154,"mtime":1610886568244,"results":"316","hashOfConfig":"290"},{"size":732,"mtime":1609341120430,"results":"317","hashOfConfig":"290"},{"size":2232,"mtime":1610354833461,"results":"318","hashOfConfig":"290"},{"size":2445,"mtime":1611057717545,"results":"319","hashOfConfig":"290"},{"size":5650,"mtime":1611057716955,"results":"320","hashOfConfig":"290"},{"size":616,"mtime":1609339292258,"results":"321","hashOfConfig":"290"},{"size":3523,"mtime":1621008946894,"results":"322","hashOfConfig":"290"},{"size":3187,"mtime":1621684214885,"results":"323","hashOfConfig":"290"},{"size":6858,"mtime":1621009615024,"results":"324","hashOfConfig":"290"},{"size":1134,"mtime":1615619702111,"results":"325","hashOfConfig":"290"},{"size":859,"mtime":1609365512689,"results":"326","hashOfConfig":"290"},{"size":1368,"mtime":1610371372870,"results":"327","hashOfConfig":"290"},{"size":550,"mtime":1609334418294,"results":"328","hashOfConfig":"290"},{"size":9526,"mtime":1621888498533,"results":"329","hashOfConfig":"290"},{"size":1912,"mtime":1621020244633,"results":"330","hashOfConfig":"290"},{"size":1732,"mtime":1621684276312,"results":"331","hashOfConfig":"290"},{"size":794,"mtime":1610092859118,"results":"332","hashOfConfig":"290"},{"size":2747,"mtime":1622294476287,"results":"333","hashOfConfig":"290"},{"size":354,"mtime":1609456600127,"results":"334","hashOfConfig":"290"},{"size":2741,"mtime":1611057718013,"results":"335","hashOfConfig":"290"},{"size":805,"mtime":1621694163415,"results":"336","hashOfConfig":"290"},{"size":2874,"mtime":1621089841607,"results":"337","hashOfConfig":"290"},{"size":922,"mtime":1622375332940,"results":"338","hashOfConfig":"290"},{"size":250,"mtime":1609335886502,"results":"339","hashOfConfig":"290"},{"size":772,"mtime":1609360107416,"results":"340","hashOfConfig":"290"},{"size":1168,"mtime":1611068286806,"results":"341","hashOfConfig":"290"},{"size":2855,"mtime":1611057717197,"results":"342","hashOfConfig":"290"},{"size":851,"mtime":1615619702115,"results":"343","hashOfConfig":"290"},{"size":425,"mtime":1609339543969,"results":"344","hashOfConfig":"290"},{"size":1922,"mtime":1622382209952,"results":"345","hashOfConfig":"290"},{"size":3532,"mtime":1621662524605,"results":"346","hashOfConfig":"290"},{"size":5846,"mtime":1615619702090,"results":"347","hashOfConfig":"290"},{"size":1906,"mtime":1621022022359,"results":"348","hashOfConfig":"290"},{"size":2315,"mtime":1621090106537,"results":"349","hashOfConfig":"290"},{"size":5107,"mtime":1621538300240,"results":"350","hashOfConfig":"290"},{"size":267,"mtime":1609360107037,"results":"351","hashOfConfig":"290"},{"size":1847,"mtime":1621786417644,"results":"352","hashOfConfig":"290"},{"size":1243,"mtime":1621662310884,"results":"353","hashOfConfig":"290"},{"size":593,"mtime":1615619702125,"results":"354","hashOfConfig":"290"},{"size":7014,"mtime":1621792684334,"results":"355","hashOfConfig":"290"},{"size":707,"mtime":1607698581234,"results":"356","hashOfConfig":"290"},{"size":1250,"mtime":1610343188012,"results":"357","hashOfConfig":"290"},{"size":1275,"mtime":1615619702113,"results":"358","hashOfConfig":"290"},{"size":3156,"mtime":1611057718457,"results":"359","hashOfConfig":"290"},{"size":1613,"mtime":1620408122221,"results":"360","hashOfConfig":"290"},{"size":6230,"mtime":1615619702140,"results":"361","hashOfConfig":"290"},{"size":1685,"mtime":1611057717657,"results":"362","hashOfConfig":"290"},{"size":2847,"mtime":1621089903277,"results":"363","hashOfConfig":"290"},{"size":3454,"mtime":1622291402407,"results":"364","hashOfConfig":"290"},{"size":3899,"mtime":1622291105049,"results":"365","hashOfConfig":"290"},{"size":4613,"mtime":1621020241052,"results":"366","hashOfConfig":"290"},{"size":917,"mtime":1615619702086,"results":"367","hashOfConfig":"290"},{"size":1341,"mtime":1622379495900,"results":"368","hashOfConfig":"290"},{"size":8023,"mtime":1621887073517,"results":"369","hashOfConfig":"290"},{"size":896,"mtime":1622377904170,"results":"370","hashOfConfig":"290"},{"size":852,"mtime":1609341120310,"results":"371","hashOfConfig":"290"},{"size":1575,"mtime":1611485636270,"results":"372","hashOfConfig":"290"},{"size":12218,"mtime":1622812586809,"results":"373","hashOfConfig":"290"},{"size":485,"mtime":1609349279732,"results":"374","hashOfConfig":"290"},{"size":996,"mtime":1619973800484,"results":"375","hashOfConfig":"290"},{"size":1549,"mtime":1621694204851,"results":"376","hashOfConfig":"290"},{"size":989,"mtime":1621887389676,"results":"377","hashOfConfig":"290"},{"size":1149,"mtime":1610372028245,"results":"378","hashOfConfig":"290"},{"size":3795,"mtime":1621687698324,"results":"379","hashOfConfig":"290"},{"size":4956,"mtime":1621786550497,"results":"380","hashOfConfig":"290"},{"size":4627,"mtime":1621673870173,"results":"381","hashOfConfig":"290"},{"size":1015,"mtime":1621672864887,"results":"382","hashOfConfig":"290"},{"size":555,"mtime":1621883100420,"results":"383","hashOfConfig":"290"},{"size":7924,"mtime":1621888357253,"results":"384","hashOfConfig":"290"},{"size":600,"mtime":1615619702128,"results":"385","hashOfConfig":"290"},{"size":865,"mtime":1621671944271,"results":"386","hashOfConfig":"290"},{"size":3470,"mtime":1609781637504,"results":"387","hashOfConfig":"290"},{"size":3117,"mtime":1615619702142,"results":"388","hashOfConfig":"290"},{"size":655,"mtime":1571310419000,"results":"389","hashOfConfig":"290"},{"size":1321,"mtime":1611057717708,"results":"390","hashOfConfig":"290"},{"size":332,"mtime":1609341382068,"results":"391","hashOfConfig":"290"},{"size":4627,"mtime":1622382521239,"results":"392","hashOfConfig":"290"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},"1v7lvfg",{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"401"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"395"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"408"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"395"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"401"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"395"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"429"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"429"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"395"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"401"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"408"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"429"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"395"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"401"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"401"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"487","messages":"488","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"395"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"401"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"395"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"395"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"395"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"429"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"569","messages":"570","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"571","messages":"572","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"395"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"395"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"395"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},"c7emhq",{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"615"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"615"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"621"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"615"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"615"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"632"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"635"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"632"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"642","messages":"643","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644","usedDeprecatedRules":"615"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"615"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"621"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"615"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"632"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"615"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"671"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"635"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"632"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"610"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"615"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"610"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"621"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"635"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"621"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"610"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"615"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"635"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"621"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"610"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"745","usedDeprecatedRules":"615"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"610"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751","usedDeprecatedRules":"615"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"610"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"610"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"759","messages":"760","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"615"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"610"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"635"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"615"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"635"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"615"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"615"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"785","messages":"786","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787","usedDeprecatedRules":"635"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"635"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"615"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"635"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"635"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"610"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"635"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"815","messages":"816","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"817","usedDeprecatedRules":"610"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"820","usedDeprecatedRules":"615"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"635"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825","usedDeprecatedRules":"615"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828","usedDeprecatedRules":"615"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"831","messages":"832","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"833","usedDeprecatedRules":"635"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"615"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"838","messages":"839","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"615"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"844","messages":"845","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\FYP\\crowdzapadmin\\src\\reportWebVitals.js",[],["846","847"],"D:\\FYP\\crowdzapadmin\\src\\Redux\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\App\\MainRoute\\PrivateRoute.js",["848"],"import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.isAuthenticated ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/\" />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);",["849","850"],"D:\\FYP\\crowdzapadmin\\src\\Redux\\Setting\\index.js",["851"],"import CONSTANTS from \"Config/constants\";\r\n\r\nconst initialState = {\r\n    kycPassed : false,\r\n    lang : 'en'\r\n};\r\n/***************/\r\n/***Actions****/\r\n/*************/\r\nexport const changeKYCStatus = () => {\r\n  return {\r\n      type: CONSTANTS.SETTING.KYC_STATUS,\r\n      payload: null\r\n  };\r\n};\r\n\r\nexport const changeLanguage = (payload) => {\r\n    return {\r\n        type: CONSTANTS.SETTING.KYC_STATUS,\r\n        payload: payload\r\n    };\r\n};\r\n\r\n/***************/\r\n/***Reducers***/\r\n/*************/\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CONSTANTS.SETTING.KYC_STATUS:\r\n      return {\r\n        ...state,\r\n        kycPassed : true\r\n      };\r\n    case CONSTANTS.SETTING.CHANGE_LANGUAGE:\r\n       return {\r\n           ...state,\r\n           lang : action.payload\r\n       };\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\FYP\\crowdzapadmin\\src\\Redux\\CryptoOrder\\index.js",["852"],"import CONSTANTS from \"Config/constants\";\r\n\r\nconst initialState = {\r\n    cryptoOrders : [],\r\n    loadingOrders : false,\r\n    tried: false,\r\n    processingOrder: false,\r\n    error : null,\r\n    processingError : null\r\n};\r\n/***************/\r\n/***Actions****/\r\n/*************/\r\nexport const loadingCryptoOrders = () => {\r\n    return {\r\n        type: CONSTANTS.CRYPTO_ORDERS.LOADING_ORDERS,\r\n        payload: null\r\n    };\r\n};\r\n\r\nexport const setCryptoOrders = (payload) => {\r\n    return {\r\n        type: CONSTANTS.CRYPTO_ORDERS.SET_ORDER,\r\n        payload: payload\r\n    };\r\n};\r\n\r\nexport const processCrypto = () => {\r\n    return {\r\n        type: CONSTANTS.CRYPTO_ORDERS.PROCESS_ORDER_CRYPTO,\r\n        payload: null\r\n    };\r\n};\r\n\r\nexport const addCryptoOrder = (payload) => {\r\n    return {\r\n        type: CONSTANTS.CRYPTO_ORDERS.ADD_CRYPTO_ORDER,\r\n        payload: payload\r\n    };\r\n};\r\n\r\nexport const getCryptoOrderError = (payload) => {\r\n    return {\r\n        type: CONSTANTS.COMMON.GET_ERRORS,\r\n        payload: payload\r\n    };\r\n};\r\n\r\nexport const addCryptoOrderError = (payload) => {\r\n    return {\r\n        type: CONSTANTS.CRYPTO_ORDERS.ORDER_ERROR,\r\n        payload: payload\r\n    };\r\n};\r\n\r\nexport const clearCryptoOrderError = () => {\r\n    return {\r\n        type: CONSTANTS.COMMON.CLEAR_ERROR,\r\n        payload: null\r\n    };\r\n};\r\n\r\n/***************/\r\n/***Reducers***/\r\n/*************/\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CONSTANTS.CRYPTO_ORDERS.SET_ORDER:\r\n            return {\r\n                cryptoOrders: action.payload,\r\n                loadingOrders : false,\r\n                processingOrder: false,\r\n                error: null,\r\n                processingError: null,\r\n                tried: true\r\n            };\r\n        case CONSTANTS.CRYPTO_ORDERS.LOADING_ORDERS:\r\n            return {\r\n                ...state,\r\n                loadingOrders : true,\r\n                processingOrder: false,\r\n                error: null,\r\n                processingError: null,\r\n                tried: false\r\n            };\r\n        case CONSTANTS.CRYPTO_ORDERS.PROCESS_ORDER_CRYPTO:\r\n            return {\r\n                ...state,\r\n                loadingOrders : false,\r\n                processingOrder: true,\r\n                error: null,\r\n                processingError: null,\r\n            };\r\n        case CONSTANTS.CRYPTO_ORDERS.ADD_CRYPTO_ORDER:\r\n            return {\r\n                ...state,\r\n                loadingOrders : false,\r\n                processingOrder: false,\r\n                error: null,\r\n                processingError: null,\r\n                cryptoOrders: state.cryptoOrders.concat(action.payload)\r\n            };\r\n        case CONSTANTS.COMMON.GET_ERRORS:\r\n            return {\r\n                cryptoOrders: [],\r\n                loadingOrders : true,\r\n                processingOrder: false,\r\n                error: action.payload,\r\n                processingError: null,\r\n                tried: true,\r\n            };\r\n        case CONSTANTS.CRYPTO_ORDERS.ORDER_ERROR:\r\n            return {\r\n                ...state,\r\n                loadingOrders : false,\r\n                processingOrder: false,\r\n                error: null,\r\n                processingError: action.payload,\r\n                tried: false,\r\n            };\r\n        case CONSTANTS.COMMON.CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                loadingOrders : false,\r\n                processingOrder: false,\r\n                error: null,\r\n                processingError: null,\r\n                tried: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}",["853","854"],"D:\\FYP\\crowdzapadmin\\src\\Redux\\CryptoTransfer\\index.js",["855"],"import CONSTANTS from \"Config/constants\";\r\n\r\nconst initialState = {\r\n    processing : false,\r\n    processingError : null,\r\n    processedTransaction : null\r\n}\r\n\r\n/***************/\r\n/***Actions****/\r\n/*************/\r\n\r\nexport const processingCryptoOrder = () => {\r\n    return{\r\n        type : CONSTANTS.CRYPTO_TRANSFER.PROCESSING_ORDER,\r\n        payload : null\r\n    }\r\n}\r\n\r\nexport const cryptoOrderProcessed = (payload) => {\r\n    return{\r\n        type : CONSTANTS.CRYPTO_TRANSFER.PROCESSING_ORDER_SUCCEED,\r\n        payload : payload\r\n    }\r\n}\r\n\r\nexport const cryptoOrderError = (error) => {\r\n    return{\r\n        type : CONSTANTS.CRYPTO_TRANSFER.PROCESSING_ORDER_ERROR,\r\n        payload : error\r\n    }\r\n}\r\n\r\n/***************/\r\n/***Reducers***/\r\n/*************/\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CONSTANTS.CRYPTO_TRANSFER.PROCESSING_ORDER:\r\n            return {\r\n                processing: true,\r\n                processingError: null,\r\n                processedTransaction: null\r\n            }\r\n        case CONSTANTS.CRYPTO_TRANSFER.PROCESSING_ORDER_SUCCEED:\r\n            return {\r\n                processing: false,\r\n                processingError: null,\r\n                processedTransaction: action.payload\r\n            }\r\n        case CONSTANTS.CRYPTO_TRANSFER.PROCESSING_ORDER_ERROR:\r\n            return {\r\n                processing: false,\r\n                processingError: action.payload,\r\n                processedTransaction: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\FYP\\crowdzapadmin\\src\\Redux\\Wallet\\index.js",["856"],"import CONSTANTS from \"Config/constants\";\r\n\r\nconst initialState = {\r\n    addresses : [],\r\n    loading : false,\r\n    walletLocked : true,\r\n    processAddingKey : false,\r\n    tried : false,\r\n    error : null,\r\n    walletObj: null,\r\n    walletError : null,\r\n    ///////////////////////\r\n    //chain operations state\r\n    ///////////////////////\r\n    triedAccountData : null,\r\n    accountsData : {\r\n        balance : 0,\r\n        data : []\r\n    },\r\n    loadAccountData : false,\r\n    accountDataError : null\r\n};\r\n\r\nconst ACTIONS = {\r\n    CLEAR_WALLET_ERROR : \"[wallet] CLEAR_WALLET_ERROR\"\r\n}\r\n/***************/\r\n/***Actions****/\r\n/*************/\r\nexport const loadingAddresses = () => {\r\n    return {\r\n        type: CONSTANTS.WALLET.LOADING_ADDRESSES,\r\n        payload: null\r\n    };\r\n};\r\n\r\nexport const setAddresses = (payload) => {\r\n  return {\r\n      type: CONSTANTS.WALLET.SET_KEYS,\r\n      payload: payload\r\n  };\r\n};\r\n\r\nexport const addNewAddress = (payload) => {\r\n    return {\r\n        type: CONSTANTS.WALLET.ADD_NEW_KEY,\r\n        payload: payload\r\n    };\r\n};\r\n\r\nexport const processAddNewAddress = () => {\r\n    return {\r\n        type: CONSTANTS.WALLET.PROCESS_ADD_NEW_KEY,\r\n        payload: null\r\n    };\r\n};\r\n\r\nexport const changeLockStatus = () => {\r\n    return {\r\n        type: CONSTANTS.WALLET.WALLET_LOCKED,\r\n        payload: null\r\n    };\r\n};\r\n\r\nexport const setWallet = (payload)=>{\r\n    return{\r\n        type: CONSTANTS.WALLET.SET_WALLET,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const errorOccur = (error) => {\r\n    return {\r\n        type: CONSTANTS.COMMON.ERROR_OCCURS,\r\n        payload: error\r\n    };\r\n};\r\n\r\nexport const walletErrorOccur = (error) => {\r\n    return {\r\n        type: CONSTANTS.WALLET.WALLET_ERROR,\r\n        payload: error\r\n    };\r\n};\r\n\r\n//////////////////\r\n//Chain Operations\r\n/////////////////\r\nexport const loadingAccountsData = ()=>{\r\n    return{\r\n        type: CONSTANTS.WALLET.LOADING_ACCOUNTS_DATA,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const setAccountsData = (payload)=>{\r\n    return{\r\n        type: CONSTANTS.WALLET.SET_ACCOUNTS_DATA,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const accountsDataError = (payload)=>{\r\n    return{\r\n        type: CONSTANTS.WALLET.ACCOUNTS_DATA_ERROR,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const clearError = () => {\r\n    return {\r\n        type: ACTIONS.CLEAR_WALLET_ERROR,\r\n        payload: null\r\n    };\r\n};\r\n\r\n/***************/\r\n/***Reducers***/\r\n/*************/\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CONSTANTS.WALLET.SET_KEYS:\r\n      return {\r\n          ...state,\r\n          addresses  : action.payload,\r\n          tried : true,\r\n    };\r\n    case CONSTANTS.WALLET.SET_WALLET:\r\n      return {\r\n          ...state,\r\n          loading: false,\r\n          walletError: null,\r\n          walletObj: action.payload\r\n      };\r\n    case CONSTANTS.WALLET.WALLET_ERROR:\r\n      return {\r\n          ...state,\r\n          loading: false,\r\n          walletError: action.payload,\r\n          tried: true\r\n      };\r\n    case CONSTANTS.WALLET.LOADING_ADDRESSES:\r\n      return {\r\n          ...state,\r\n          tried : false,\r\n          loading: true,\r\n      };\r\n    case CONSTANTS.WALLET.WALLET_LOCKED:\r\n          return {\r\n              ...state,\r\n              walletLocked: !state.walletLocked\r\n          }\r\n    case CONSTANTS.WALLET.PROCESS_ADD_NEW_KEY:\r\n          return {\r\n              ...state,\r\n              processAddingKey: true\r\n          };\r\n    case CONSTANTS.WALLET.ADD_NEW_KEY:\r\n        return {\r\n            ...state,\r\n            processAddingKey: false,\r\n            addresses : state.addresses.concat(action.payload.addresses),\r\n            error: null\r\n        };\r\n    case CONSTANTS.COMMON.ERROR_OCCURS:\r\n      return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.payload,\r\n          tried: true\r\n      };\r\n      ///////////////////\r\n      //chain Operations\r\n      //////////////////\r\n    case CONSTANTS.WALLET.LOADING_ACCOUNTS_DATA:\r\n      return {\r\n          ...state,\r\n          loadAccountData: true,\r\n      };\r\n    case CONSTANTS.WALLET.SET_ACCOUNTS_DATA:\r\n      return {\r\n          ...state,\r\n          loadAccountData: false,\r\n          triedAccountData: true,\r\n          accountsData: action.payload\r\n      };\r\n    case CONSTANTS.WALLET.ACCOUNTS_DATA_ERROR:\r\n      return {\r\n          ...state,\r\n          loadAccountData: false,\r\n          triedAccountData: true,\r\n          accountDataError: action.payload\r\n      };\r\n\r\n    case ACTIONS.CLEAR_WALLET_ERROR :\r\n      return {\r\n          ...state,\r\n          error: null,\r\n          walletError: null,\r\n          accountDataError: null\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\FYP\\crowdzapadmin\\src\\Scenes\\SearchPage\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\Profiling\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Config\\constants.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\Components\\Polls\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\RequestForm\\index.js",[],["857","858"],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\index.js",["859"],"import * as React from 'react';\r\nimport './style.css';\r\nimport MenuBar from './Components/MenuBar';\r\nimport SlideShow from './Components/SlideShow';\r\nimport SearchBar from './Components/SearchBar';\r\nimport Caption from './Components/Caption';\r\n\r\nclass Header extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"slideShowBarWrapper\">\r\n          <SlideShow />\r\n        </div>\r\n        <div className=\"menuBarWrapper\"> \r\n          <MenuBar />\r\n        </div>\r\n        <Caption />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","D:\\FYP\\crowdzapadmin\\src\\Scenes\\Profiling\\Components\\User\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Config\\HTTPService.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\Components\\Polls\\Components\\Poll\\index.js",["860"],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\index.js",["861","862"],"import * as React from 'react';\nimport './style.css';\nimport { Icon } from 'react-fa';\nimport HDWallet from './Components'\nimport {useState} from \"react\";\nimport CryptoOrders from \"./Components/CryptoOrders\";\n\nfunction Details () {\n    const [display, setDisplay] = useState(1)\n\n    return (\n      <div className=\"details\">\n        <div className=\"detailTab\">\n          <ul>\n            <li className={(display===1)?\"active\":\"\"} onClick={()=>setDisplay(1)}><a ><Icon name=\"key\" /> Keys</a></li>\n            <li className={(display===2)?\"active\":\"\"} onClick={()=>setDisplay(2)}><a ><Icon name=\"bar-chart\" /> Crypto Orders</a></li>\n          </ul>\n        </div>\n        <div className=\"detailBody\">\n            {\n                (display === 1)?<HDWallet/> : <CryptoOrders/>\n            }\n        </div>\n      </div>\n    );\n}\n\nexport default Details;","D:\\FYP\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\LeftSide\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\MenuBar\\index.js",["863","864","865","866","867"],"import * as React from 'react';\r\nimport './style.css';\r\nimport { Icon } from 'react-fa';\r\nimport { connect } from 'react-redux';\r\nimport RLForm from 'Components/RegisterLoginForm';\r\nimport UserMenu from 'Components/UserMenu';\r\nimport { Link } from 'react-router-dom';\r\nimport { getTranslation, SupportedLanguage } from 'Services/Geo';\r\nimport LanguageSelector from 'Components/LanguageSelector';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lang: state.setting.lang,\r\n  isLogin: state.auth.isAuthenticated\r\n});\r\n\r\n\r\nclass MenuBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isHandlerActive: false,\r\n      isLogin: props.isLogin\r\n    };\r\n  }\r\n  toggleHandler = () => {\r\n    this.setState({\r\n      isHandlerActive: !this.state.isHandlerActive\r\n    });\r\n  }\r\n  updateFormStatus = (status) => {\r\n    this.setState({\r\n      rlFormStatus: status\r\n    });\r\n  }\r\n  loginField = () => {\r\n    if (this.state.isLogin) {\r\n      return (\r\n        <li className=\"userMenuLi\">\r\n          <div className=\"userMenuWrapper\">\r\n            <UserMenu />\r\n          </div>\r\n        </li>\r\n      );\r\n    }\r\n    return [\r\n      (\r\n        <li key=\"0\"><a href=\"#\" onClick={() => this.updateFormStatus('register')}>\r\n          {getTranslation(this.props.lang, 'Sign Up')}\r\n        </a></li>\r\n      ),\r\n      (\r\n        <li key=\"1\"><a href=\"#\" onClick={() => this.updateFormStatus('login')}>\r\n          {getTranslation(this.props.lang, 'Sign In')}\r\n        </a></li>\r\n      )\r\n    ];\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"menuBar\">\r\n        <a href=\"/\">\r\n          <div className=\"homeLogo osLight\">\r\n            <Icon name=\"home\" size=\"2x\" /> \r\n            <span>CrowdZap</span>\r\n          </div>\r\n        </a>\r\n        <a \r\n          href=\"#\" \r\n          className={'homeNavHandler visible-xs' + (this.state.isHandlerActive ? ' active' : '')} \r\n          onClick={this.toggleHandler}\r\n        >\r\n          <Icon name=\"bars\" />\r\n        </a>\r\n        <div className={'homeNav' + (this.state.isHandlerActive ? ' active' : '')} >\r\n          <ul>\r\n            <li className=\"moreOption\">\r\n              <Link to=\"/search?type=sale\">{getTranslation(this.props.lang, 'MarketPlace')}</Link>\r\n            </li>\r\n            <li className=\"moreOption\">\r\n              <Link to=\"wallet\">{getTranslation(this.props.lang, 'Wallet')}</Link>\r\n            </li>\r\n            <li className=\"moreOption\">\r\n              <Link to=\"/agent/search\">{getTranslation(this.props.lang, 'Commercial')}</Link>\r\n            </li>\r\n            <li className=\"moreOption\">\r\n              <Link to=\"/projects\">{getTranslation(this.props.lang, 'About')}</Link>\r\n            </li>\r\n            {this.loginField()}\r\n            <li>\r\n              <Link to=\"/search?type=sale\"><div className=\"btn btn-green\">\r\n                {getTranslation(this.props.lang, 'View All Projects')}\r\n              </div></Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <RLForm \r\n          type={this.state.rlFormStatus} \r\n          openRegisterForm={() => this.updateFormStatus('register')} \r\n          openLoginForm={() => this.updateFormStatus('login')}\r\n          close={() => this.updateFormStatus()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MenuBar);","D:\\FYP\\crowdzapadmin\\src\\Components\\Common\\PlaceHolder\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services\\CryptoOrder\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Components\\Common\\CustomInput\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services\\Wallet\\index.js",["868"],"import { setAddresses, addNewAddress, loadingAddresses, errorOccur, clearError } from \"Redux/Wallet\";\r\nimport {WalletService} from \"./WalletService\"\r\nimport HDWallet from \"./HDWallet\";\r\nimport SerializedHDWallet from './SerializedHDWallet'\r\n\r\nlet walletService = new WalletService()\r\n//Singleton pattern is impl, wallet must be initialized at first\r\nexport const Wallet = (function () {\r\n    let instance;\r\n    async function createInstance(serialized, mnemonics,password ,tag, addressIndex) {\r\n        let object\r\n        if(serialized){\r\n            console.log(\"deserializing\")\r\n            object = await SerializedHDWallet.build(serialized, password ,tag, addressIndex);\r\n        }else{\r\n            object = await HDWallet.build(mnemonics, password, tag, addressIndex);\r\n        }\r\n        return object;\r\n    }\r\n\r\n    return {\r\n        //default parameters if new wallet is to be initialized\r\n        init: async function (serialized , mnemonics, password, tag , addressIndex ) {\r\n            if (!instance) {\r\n                instance = await createInstance(serialized, mnemonics ,password,tag, addressIndex);\r\n                instance.constructor = null\r\n                return instance\r\n            }\r\n            return instance;\r\n        },\r\n        getInstance: function () {\r\n            return instance;\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nexport const getAddresses = () => dispatch => {\r\n    dispatch(loadingAddresses())\r\n    walletService.getAddresses().then(res => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n            dispatch(setAddresses(res.data.data))\r\n        } else {\r\n            dispatch(errorOccur(res.data))\r\n            console.log(\"No addresses found\")\r\n        }\r\n    })\r\n        .catch(err =>{\r\n            console.log(err)\r\n            dispatch(errorOccur(err))\r\n        });\r\n};\r\n\r\n\r\nexport const storeNewAddress = (newAddress)=> (dispatch)=>{\r\n    walletService.addNewAddress(newAddress).then(res => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n            let payload = {\r\n                addresses : newAddress\r\n            }\r\n            dispatch(addNewAddress(payload))\r\n        } else {\r\n            console.log(\"Addresses not saved\")\r\n        }\r\n    })\r\n    .catch(err =>{\r\n        console.log(err)\r\n        console.log(\"Addresses not saved\")\r\n    });\r\n}\r\n\r\n\r\nexport const placeCryptoOrder = (order) => dispatch => {\r\n    walletService.placeCryptoOrder(order).then(res => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n            alert(\"Successfully placed your order\")\r\n        } else {\r\n            alert(res.data.status)\r\n        }\r\n    })\r\n    .catch(err =>{\r\n        console.log(err)\r\n        alert(\"Failed to place your order\")\r\n    });\r\n};","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\ListComp\\index.js",["869"],"import * as React from 'react';\nimport './style.css';\n\n\nclass ListComp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n  render() {\n    return (\n      <div className=\"listComp col-xs-6 col-sm-6 col-md-3 col-lg-3\">\n        <div className=\"listCompTitle osLight\">\n          {this.props.children}\n        </div>\n        <ul className=\"listMain\">\n          {this.props.list.map((item, index) => {\n            return (\n              <li key={index}><a href=\"#\">{item}</a></li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ListComp;","D:\\FYP\\crowdzapadmin\\src\\Scenes\\SearchPage\\Components\\SearchMap\\Components\\MiniHouse\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services\\CryptoOrder\\CryptoOrderService.js",[],["870","871"],"D:\\FYP\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\Map.js",[],"D:\\FYP\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\Overview.js",["872"],"import React, {Component} from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCoins} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Paper} from \"@material-ui/core\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nclass Description extends Component{\r\n    render(){\r\n        return(\r\n            <div\r\n                role=\"tabpanel\"\r\n                hidden={this.props.value !== 0}\r\n                id={'simple-tabpanel-0'}\r\n                aria-labelledby={`simple-tab-0`}\r\n                className=\"listedPropDetail\"\r\n            >\r\n                    <Grid container spacing={1} direction={\"row\"}>\r\n                        <Grid item xs={12} sm={12} md={5} lg={5}>\r\n                            <Paper elevation={10}>\r\n                            <div>\r\n                                <img src={this.props.data.mainImg} style={{width:450, height:400}} className=\"img\"/>\r\n                            </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={1} sm={1} md={1} lg={1}></Grid>\r\n                        <Grid item xs={12} sm={12} md={5} lg={5}>\r\n                            <div className=\"desc\">\r\n                                <Typography gutterBottom variant=\"h4\" className=\"totalInvest\">\r\n                                    {this.props.data.title}\r\n                                </Typography>\r\n                                <Typography gutterBottom variant=\"body1\" >\r\n                                    TOTAL INVESTMENT :<FontAwesomeIcon size=\"small\" color='primary' icon={faCoins}/> 1222234\r\n                                </Typography>\r\n                                <Typography gutterBottom variant=\"body1\">\r\n                                    TOKEN PRICE :<FontAwesomeIcon size=\"small\" color='primary' icon={faCoins}/> 1222234 rel\r\n                                </Typography>\r\n                                <Divider variant='middle'/>\r\n                                <Typography variant=\"body2\">\r\n                                    START DATE : {new Date(this.props.data.createdAt).toDateString()}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\">\r\n                                    END AT : {new Date(this.props.data.endDate).toDateString()}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\">\r\n                                    CREATOR : {this.props.data.nodeName}\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Description","D:\\FYP\\crowdzapadmin\\src\\Services\\InvestmentPortfolio\\InvestmentPortfolioService.js",[],"D:\\FYP\\crowdzapadmin\\src\\Components\\UserMenu\\index.js",["873","874","875","876","877"],"import * as React from 'react';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from 'react-fa';\r\nimport LocalStore from \"../../Config/localStore\";\r\nimport {connect} from \"react-redux\";\r\nimport {processKyc} from \"../../Services/Setting\";\r\n\r\nclass UserMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: false\r\n    };\r\n    this.wrapperRef = null\r\n  }\r\n  showToggle = () => {\r\n    if (this.state.showMenu) {\r\n      document.removeEventListener('click', this.handleClickOutside);\r\n    } else {\r\n      document.addEventListener('click', this.handleClickOutside);\r\n    }\r\n    this.setState({\r\n      showMenu: !this.state.showMenu\r\n    });\r\n    \r\n  }\r\n  handleClickOutside = (e) => {\r\n    if (\r\n      this.wrapperRef &&\r\n      !this.wrapperRef.contains(e.target) &&\r\n      this.state.showMenu\r\n    ) {\r\n      this.showToggle();\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  }\r\n  logout = () => {\r\n    /* Index code */\r\n    let localStore = new LocalStore()\r\n    localStore.clearToken()\r\n    localStore.clearClientId()\r\n    window.location.href = '/';\r\n    /* End test code */\r\n  }\r\n  render() {\r\n    return (\r\n      <div \r\n        className={`userMenuContainer${this.state.showMenu ? ' open' : ''}`} \r\n        onClick={this.showToggle}\r\n        ref={(div) => {this.wrapperRef = div; }}\r\n      >\r\n        <a href=\"#\" className=\"userHandler dropdown-toggle\" data-toggle=\"dropdown\">\r\n          <Icon name=\"user-o\" /><span className=\"counter\">5</span></a>\r\n        <a href=\"#\" className=\"headerUser dropdown-toggle\" data-toggle=\"dropdown\">\r\n          <img className=\"avatar headerAvatar pull-left\" src=\"http://mariusn.com/themes/reales/images/avatar-1.png\" />\r\n          <div className=\"userTop pull-left\">\r\n            <span className=\"headerUserName\">{(this.props.user)?this.props.user.name:\"Welcome\"}</span>\r\n            <Icon name=\"angle-down\" />\r\n          </div>\r\n          <div className=\"clearfix\" />\r\n        </a>\r\n        <div className=\"dropdown-menu pull-right userMenu\" role=\"menu\">\r\n          <div className=\"mobAvatar\">\r\n            <img\r\n              className=\"avatar mobAvatarImg\"\r\n              src=\"http://mariusn.com/themes/reales/images/avatar-1.png\"\r\n              alt=\"avatar\"\r\n            />\r\n            <div className=\"mobAvatarName\">{(this.props.user)?this.props.user.name:\"Welcome\"}</div>\r\n          </div>\r\n          <ul>\r\n            <li><Link to=\"/wallet\"><span className=\"walletIcon fa\" />Wallet</Link></li>\r\n            <li><Link to=\"/profiling/kyc\"><Icon name=\"cog\" />Kyc</Link></li>\r\n            <li><Link to=\"/profiling\"><Icon name=\"user\" />Profile</Link></li>\r\n            <li><a href=\"#\">\r\n              <Icon name=\"bell-o\" />\r\n              Notifications\r\n              <span className=\"badge pull-right bg-red\">5</span>\r\n            </a></li>\r\n            <li className=\"divider\" />\r\n            <li><a href=\"#\" onClick={this.logout}><Icon name=\"power-off\" />Logout</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { processKyc}\r\n)(UserMenu)","D:\\FYP\\crowdzapadmin\\src\\Services\\Geo\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\Key\\index.js",["878"],"import * as React from 'react';\nimport './style.css';\nimport {Icon} from \"react-fa\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setWallet} from \"Redux/Wallet\";\nimport {Wallet} from \"Services/Wallet\";\n\nexport default function Key (props){\n    const walletInstance = useSelector((state)=> state.wallet.walletObj)\n    const dispatch = useDispatch()\n\n    const checkSelected = (index) =>{\n        if(walletInstance){\n            if(walletInstance.index === index) return true\n        }\n        return false\n    }\n\n    const selectAccount = async () =>{\n        if(walletInstance){\n            await walletInstance.selectAddAccount(props.tag, props.index)\n            dispatch(setWallet(Wallet.getInstance()))\n        }\n    }\n\n    return (\n      <div className={(checkSelected(props.index))?\"agentInfoContainer selected\":\"agentInfoContainer\"}  id={props.index}>\n        <div className=\"avatar headerAvatar\">\n            <Icon name=\"key\" />\n        </div>\n        <div className=\"info\">\n          <div className=\"name\">{props.tag}</div>\n          <div className=\"title\">{props.address}</div>\n            {\n                (checkSelected(props.index))?\n                    <div className=\"address\">*Main selected account, all transaction will be performed with this account.</div>\n                    :\n                    <></>\n            }\n        </div>\n        <div className=\"ops\">\n          <a href=\"#\" title=\"Select Account\" disabled={checkSelected(props.index)} onClick={selectAccount} className=\"btn btn-icon btn-round btn-o btn-red btn-sm\">\n            <span  title=\"Select Account\" className=\"fa fa-heart-o\"/>\n          </a>\n        </div>\n      </div>\n    );\n}","D:\\FYP\\crowdzapadmin\\src\\Components\\RegisterLoginForm\\Components\\LoginForm\\index.js",["879","880","881"],"import * as React from 'react';\r\nimport './style.css';\r\nimport { Icon } from 'react-fa';\r\nimport Loader from 'react-loader-spinner'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport { loginUser, loggedUser} from 'Services/User';\r\nimport {clearError} from \"Redux/User\";\r\nimport Alert from 'Components/Common/Alert'\r\nimport {connect} from \"react-redux\"\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      remember: false,\r\n      email: '',\r\n      password: '',\r\n      errors: this.props.error//Used if there exist any error on LoginProcess\r\n    };\r\n    this.informParent = this.informParent.bind(this)\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if(this.props.isAuthenticated){\r\n      this.props.history.push(\"/search\")\r\n    }\r\n  }\r\n\r\n  signIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    this.props.loginUser(userData);\r\n  }\r\n\r\n  toggleRemember = (e) => {\r\n    this.setState({\r\n      remember: e.currentTarget.checked\r\n    });\r\n  }\r\n  changeTextData = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  informParent = response => {\r\n    //this.props.history.push('/dashboard');\r\n    console.log(response)\r\n    this.props.loggedUser(response.data)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={'loginForm modal slimScroll fade' + (this.props.active ? ' in' : '')}>\r\n        <div className=\"modal-dialog modal-sm\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Sign In</h4>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <Alert show={this.props.registered} class='success' clearer={this.props.clearError}  message='Account created successfully,now sign in!.'/>\r\n              <Alert show={this.props.error} class='danger' clearer={this.props.clearError} message='Email or Password wrong.'/>\r\n              <div style={{marginLeft: '40%'}}>\r\n                <Loader type=\"Bars\" color=\"#00A9A4\" height={40} width={60} visible={this.props.processing}/>\r\n              </div>\r\n              <form role=\"loginForm form\" onSubmit={this.signIn}>\r\n                <div className=\"form-group\">\r\n                  <div className=\"btn-group-justified\">\r\n                    <div className=\"btn btn-lg btn-facebook\">\r\n                      <Icon name=\"facebook\" className=\"pull-left\" />\r\n                      <span>Sign In with Facebook</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"btn-group-justified\">\r\n                    <div className=\"btn btn-lg btn-google\">\r\n                      <Icon name=\"google\" className=\"pull-left\" />\r\n                      <span>Sign In with Google</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"signOr\">OR</div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    className=\"form-control\"\r\n                    onChange={this.changeTextData}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    className=\"form-control\"\r\n                    onChange={this.changeTextData}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-xs-6\">\r\n                      <div className=\"checkbox custom-checkbox\">\r\n                        <label>\r\n                          <input type=\"checkbox\" checked={this.state.remember} onChange={this.toggleRemember} />\r\n                          <Icon name=\"check\" />\r\n                          Remember me\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-xs-6 align-right\">\r\n                      <p className=\"help-block\">\r\n                        <a href=\"#\" className=\"text-green isThemeText text-red\">\r\n                          Forgot password?\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"btn-group-justified\">\r\n                    <button type=\"submit\" disabled={(this.props.processing)?true: false} className=\"btn btn-lg btn-green isThemeBtn btn-red\">\r\n                      Sign In\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <p className=\"help-block\">\r\n                  <span>Don't have an account? </span>\r\n                  <a\r\n                    className=\"modal-su text-green isThemeText text-red\"\r\n                    onClick={this.props.openRegisterForm}\r\n                  >\r\n                    Sign Up\r\n                  </a>\r\n                </p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  registered : state.auth.registered,\r\n  processing: state.auth.processing,\r\n  error: state.auth.error,\r\n});\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loginUser, loggedUser, clearError}\r\n)( withRouter(LoginForm));\r\n","D:\\FYP\\crowdzapadmin\\src\\Scenes\\SearchPage\\Components\\SearchForm\\index.js",["882","883","884"],"import * as React from 'react';\r\nimport SelectComponent from 'Components/SelectComponent';\r\nimport SingleHouse from 'Components/SingleHouse';\r\nimport SearchMap from '../SearchMap';\r\nimport './style.css'\r\nimport { Icon } from 'react-fa';\r\nimport Loader from 'react-loader-spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {getListedProps, getQueryListedProps} from \"Services/ListProperty\";\r\nimport SearchBar from \"Components/DashboardLayout/Components/Header/Components/SearchForm\"\r\nimport PlaceHolder from \"Components/Common/PlaceHolder\";\r\n\r\n\r\nclass SearchForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resultTab: 'list',\r\n      searching: false,\r\n      searchData: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //if there is no data and tried is false\r\n    if(!this.props.tried && !this.props.listedProps){\r\n      this.props.getListedProps()\r\n    }\r\n  }\r\n\r\n  changeResultTab = (tab) => {\r\n    if (tab !== this.state.resultTab) {\r\n      this.setState({\r\n        resultTab: tab\r\n      });\r\n    }\r\n  }\r\n  resultList = () => {\r\n    return (\r\n      <div className=\"resultsList\">\r\n        <div className=\"row\">\r\n          {this.props.listedProps.map((data, index) => {\r\n            return (\r\n              <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\" key={index}>\r\n                <SingleHouse data={data} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  resultMap = () => {\r\n    return (\r\n      <div className=\"resultsMap\">\r\n        <SearchMap />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  searchResultList = () => {\r\n    return (\r\n      <div className=\"resultsList\">\r\n        <div className=\"row\">\r\n          {this.state.searchData.map((data, index) => {\r\n            return (\r\n              <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\" key={index}>\r\n                <SingleHouse data={data} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  searchData = (queryValue)=>{\r\n    if(queryValue !== \"\"){\r\n      this.setState({\r\n        searching:true,\r\n        searchData:null\r\n      })\r\n      this.props.getQueryListedProps(queryValue, this.searchDataCB)\r\n    }else{\r\n      this.setState({\r\n        searching : false\r\n      })\r\n    }\r\n  }\r\n\r\n  searchDataCB = (data)=>{\r\n    if(data.length>0){\r\n        this.setState({\r\n          searchData: data\r\n      })\r\n    }    \r\n  }\r\n\r\n  render() {\r\n    let resultBody=null\r\n    if(this.state.searching){\r\n      //if user is searching and founded some data\r\n      if(this.state.searchData){\r\n        resultBody = this.searchResultList()\r\n      }\r\n    }else{\r\n      if(this.props.listedProps){\r\n        resultBody = this.state.resultTab === 'list' ? this.resultList() : this.resultMap()\r\n      }\r\n        //if listedProps null and also not in loading state\r\n      if(!this.props.listedProps && !this.props.loading){\r\n        resultBody = <PlaceHolder type=\"listedProperties\"/>\r\n      }\r\n    }\r\n    \r\n    \r\n    return (\r\n      <div className=\"searchForm\">\r\n        <div className=\"filterBox\">\r\n          <div className=\"row form-group\">\r\n            <div className=\"col-xs-12 col-sm-8 col-md-6 yearOfBirth\">\r\n              <h4>Ongoing Projects</h4>\r\n              <SearchBar search={this.searchData}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"resultTable\">\r\n          <div className=\"resultTab\">\r\n            <ul>\r\n              <li \r\n                className={this.state.resultTab === 'list' ? 'active' : ''}\r\n                onClick={(e) => this.changeResultTab('list')}\r\n              >\r\n                <a><Icon name=\"th-list\" /> Listing view</a>\r\n              </li>\r\n              <li\r\n                className={this.state.resultTab === 'map' ? 'active' : ''}\r\n                onClick={(e) => this.changeResultTab('map')}\r\n              >\r\n                <a><Icon name=\"map-o\" /> Map view</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"resultBody\">\r\n            <Loader\r\n                type=\"Grid\" color=\"#00A9A4\" height={80} width={80} visible={this.props.loading}\r\n            />\r\n            {resultBody}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.listedProps.loading,\r\n  listedProps: state.listedProps.listedProperties,\r\n  tried: state.listedProps.tried,\r\n  filterBy: state.listedProps.filterBy\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getListedProps, getQueryListedProps}\r\n)(SearchForm);","D:\\FYP\\crowdzapadmin\\src\\Components\\SelectComponent\\index.js",["885"],"D:\\FYP\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\Header\\index.js",["886","887"],"import * as React from 'react';\r\nimport './style.css';\r\n\r\nimport { Icon } from 'react-fa';\r\n\r\nimport UserMenu from 'Components/UserMenu';\r\nimport NotifyMenu from './Components/NotifyMenu';\r\nimport SearchForm from './Components/SearchForm';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Header extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"dashboardHeader\">\r\n        <div className=\"logo\">\r\n          <Link to=\"/\">\r\n            <Icon className=\"fa fa-home marker\" name=\"home\" />\r\n            <span className=\"logoText\">reales</span>\r\n          </Link>\r\n        </div>\r\n        <a href=\"#\" className=\"navHandler\" onClick={(e) => this.props.clickToggle()}><Icon  name=\"bars\" /></a>\r\n        <div className=\"userMenuWrapper\">\r\n          <UserMenu />\r\n        </div>\r\n        <NotifyMenu />\r\n        <div className=\"clearfix\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","D:\\FYP\\crowdzapadmin\\src\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Redux\\User\\index.js",["888"],"import CONSTANTS from \"Config/constants\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  processing: false,\r\n  error: null,\r\n  //Register comp state\r\n  registered : null,\r\n  regProcessing: false,\r\n  regError: null,\r\n};\r\n\r\n/***************/\r\n/***Actions****/\r\n/*************/\r\n\r\n//User login request is being processed\r\nexport const userBeingLogged = () => {\r\n  return {\r\n    type: CONSTANTS.COMMON.PROCESSING,\r\n    payload: null\r\n  };\r\n};\r\n\r\n//Set the logged user data in store\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: CONSTANTS.AUTH.SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n//Error handler, if request failed\r\nexport const errorOccur = data =>{\r\n  return{\r\n    type: CONSTANTS.COMMON.ERROR_OCCURS,\r\n    payload: data\r\n  }\r\n}\r\n\r\n\r\n//////REGISTER\r\n\r\nexport const regProcessing = () =>{\r\n  return{\r\n    type: CONSTANTS.AUTH.REG_PROCESSING,\r\n    payload : null\r\n  }\r\n}\r\n//when user register successfully\r\nexport const userRegistered = () =>{\r\n  return{\r\n    type: CONSTANTS.AUTH.USER_REGISTERED,\r\n    payload : null\r\n  }\r\n}\r\n\r\n//when user register successfully\r\nexport const regErrorOccur = (payload) =>{\r\n  return{\r\n    type: CONSTANTS.AUTH.REG_ERROR,\r\n    payload : payload\r\n  }\r\n}\r\n\r\n///COMMON FOR BOTH REG & LOGIN\r\n//to remove error message from store\r\nexport const clearError = () =>{\r\n  return{\r\n    type: CONSTANTS.COMMON.CLEAR_ERROR,\r\n    payload : null\r\n  }\r\n}\r\n\r\n\r\n/***************/\r\n/***Reducers***/\r\n/*************/\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CONSTANTS.AUTH.SET_CURRENT_USER:\r\n      return {\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload,\r\n        processing: false,\r\n        regProcessing: false,\r\n        registered: false,\r\n        error: null,\r\n        regError: null\r\n      };\r\n    case CONSTANTS.COMMON.PROCESSING:\r\n      return {\r\n        isAuthenticated: false,\r\n        user: null,\r\n        processing: true,\r\n        regProcessing: false,\r\n        registered: false,\r\n        error: null,\r\n        regError: null\r\n      };\r\n    case CONSTANTS.COMMON.ERROR_OCCURS:\r\n      return {\r\n        isAuthenticated: false,\r\n        user: null,\r\n        regProcessing: false,\r\n        regError: null,\r\n        processing: false,\r\n        error: action.payload,\r\n        registered: false,\r\n      }\r\n    case CONSTANTS.AUTH.REG_PROCESSING:\r\n      return {\r\n        isAuthenticated: false,\r\n        user: null,\r\n        regProcessing: true,\r\n        regError: null,\r\n        processing: false,\r\n        error: null,\r\n        registered: false,\r\n      }\r\n    case CONSTANTS.AUTH.USER_REGISTERED:\r\n      return {\r\n        isAuthenticated: false,\r\n        user: null,\r\n        processing: false,\r\n        error: null,\r\n        regError: null,\r\n        registered: true,\r\n        regProcessing: false\r\n      };\r\n    case CONSTANTS.AUTH.REG_ERROR:\r\n      return {\r\n        isAuthenticated: false,\r\n        user: null,\r\n        processing: false,\r\n        error: null,\r\n        regError: action.payload,\r\n        registered: false,\r\n        regProcessing: false\r\n      };\r\n    case CONSTANTS.COMMON.CLEAR_ERROR:\r\n      return {\r\n        isAuthenticated: false,\r\n        user: null,\r\n        processing: false,\r\n        error: null,\r\n        regError: null,\r\n        registered: false,\r\n        regProcessing: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\FYP\\crowdzapadmin\\src\\Config\\localStore.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\TokenizingPropertyPage\\index.js",["889","890","891","892","893","894","895","896"],"import React, {useState} from \"react\";\r\nimport Dashboard from \"Components/DashboardLayout\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFileImage} from \"@fortawesome/free-solid-svg-icons\";\r\nimport SelectComponent from \"Components/SelectComponent\";\r\nimport MapLocation from \"./Components/MapLocation\";\r\nimport {createBasicContract} from \"Services_chain/Contracts\";\r\nimport Alert from \"Components/Common/Alert\";\r\nimport {addNewListedProp} from \"Services/ListProperty\"\r\n\r\n\r\nconst nodes = [\r\n    'ABDUL NODE',\r\n    'HAROON NODE',\r\n    'NADEEM NODE'\r\n];\r\n\r\n\r\n\r\nfunction CreateTokenizedAsset(){\r\n    const fileArray = [];\r\n    const [contractType, setContractType] = useState(\"basic\")\r\n    const [title, setTitle] = useState(\"\")\r\n    const [totalSupply, setTotalSupply] = useState(0)\r\n    const [tokenPrice, setTokenPrice] = useState(0)\r\n    const [description, setDescription] = useState(\"\")\r\n    const [country, setCountry] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [location, setLocation] = useState(\"\")\r\n    const [endDate, setEndDate] = useState(\"\")\r\n    const [images, setImages] = useState(null)\r\n\r\n    const [requestStatus, setRequestStatus] = useState(\"NO_REQUEST\")\r\n    const contractTypeButtonStyle = {background:\"#0EAAA6\", color:\"#2f3339\"}\r\n\r\n    const handleContractCreation = async ()=>{\r\n        let data ={\r\n            title: title,\r\n            description: description,\r\n            location:{\r\n                city: city,\r\n                country: country\r\n            },\r\n            geolocation:{\r\n                lat: 89.00,\r\n                long: 74.09\r\n            },\r\n            contractType:contractType,\r\n            endDate: new Date().toISOString(),\r\n            startDate: new Date().toISOString(),\r\n            contractAddress:\"\",\r\n            officialDocs : \"\",\r\n            nodeName: \"Abdul Waheed\",\r\n            galleryImages : images,\r\n            nodeId : \"\",\r\n            tokenPrice: tokenPrice,\r\n            totalSupply: totalSupply\r\n        }\r\n\r\n        //\r\n        addNewListedProp(data)\r\n    }\r\n\r\n    return(\r\n        <div className=\"walletPage\">\r\n            <Dashboard>\r\n                <div className=\"walletWrapper\">\r\n                    <>\r\n                        <div className=\"dashboardTitle\">\r\n                            <h2>CREATE TOKENIZING CONTRACT</h2>\r\n                        </div>\r\n                        <div style={{marginLeft:'2%'}}>\r\n                            <Alert\r\n                                class={(requestStatus === \"SUCCESS\")?\"success\":\"danger\"}\r\n                                show={(requestStatus !== \"NO_REQUEST\")?true:false}\r\n                                message=\"Failed to create new project\"\r\n                                clearer={()=>(setRequestStatus(\"NO_REQUEST\"))}\r\n                            />\r\n                            <Grid container spacing={1} direction={\"row\"}>\r\n                                <Grid item xs={12} sm={6} md={6} style={{marginTop:\"2%\"}}>\r\n                                    <div class=\"docTypes\">\r\n                                        <h4>Required documents</h4>\r\n                                        <p className=\"subHeading\">TYPE OF CONTRACT</p>\r\n                                        <Grid container spacing={0} direction={\"row\"}>\r\n                                            <Grid item xs={4} sm={3} md={3}>\r\n                                                <Button className=\"docTypeBtn\" onClick={()=>setContractType(\"basic\")} style={(contractType === \"basic\")?contractTypeButtonStyle:{}}>Basic Contract</Button>\r\n                                            </Grid>\r\n                                            <Grid item xs={4} sm={3} md={3}>\r\n                                                <Button className=\"docTypeBtn\" size=\"medium\" onClick={()=>setContractType(\"yield\")} style={(contractType === \"yield\")?contractTypeButtonStyle:{}}>Yield Contract</Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <div className=\"numFields\">\r\n                                            <Grid container spacing={1} direction={\"row\"}>\r\n                                                <Grid item xs={11} sm={12} md={5}>\r\n                                                    <div className=\"input-group form-group\">\r\n                                                        <span className=\"input-group-addon\">Title</span>\r\n                                                        <input type=\"text\" onChange={(e)=> setTitle(e.target.value)} className=\"form-control\" />\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item xs={11} sm={12} md={5}>\r\n                                                    <div className=\"input-group form-group\">\r\n                                                        <span className=\"input-group-addon\">End Date</span>\r\n                                                        <input type=\"datetime-local\" onChange={(e)=> setEndDate(e.target.value)} className=\"form-control\" />\r\n                                                    </div>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container spacing={1} direction={\"row\"}>\r\n                                                <Grid item xs={11} sm={12} md={5}>\r\n                                                    <div className=\"input-group form-group\">\r\n                                                        <span className=\"input-group-addon\">Total Supply</span>\r\n                                                        <input type=\"number\" onChange={(e)=> setTotalSupply(e.target.value)} className=\"form-control\" />\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item xs={11} sm={12} md={5}>\r\n                                                    <div className=\"input-group form-group\">\r\n                                                        <span className=\"input-group-addon\">Token Price(REL)</span>\r\n                                                        <input type=\"number\" onChange={(e)=> setTokenPrice(e.target.value)} className=\"form-control\" />\r\n                                                    </div>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container spacing={1} direction={\"row\"}>\r\n                                                <Grid item xs={11} sm={12} md={5}>\r\n                                                    <div className=\"input-group form-group\">\r\n                                                        <span className=\"input-group-addon\">City</span>\r\n                                                        <input type=\"text\" onChange={(e)=> setCity(e.target.value)} className=\"form-control\" />\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item xs={11} sm={12} md={5}>\r\n                                                    <div className=\"input-group form-group\">\r\n                                                        <span className=\"input-group-addon\">Country</span>\r\n                                                        <input type=\"text\" onChange={(e)=> setCountry(e.target.value)} className=\"form-control\" />\r\n                                                    </div>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <br/>\r\n                                            <Grid container spacing={1} direction={\"row\"}>\r\n                                                <Grid item xs={10} sm={10} md={10} lg={10}>\r\n                                                    <div className=\"input-group form-group\">\r\n                                                        <span className=\"input-group-addon\">Description</span>\r\n                                                        <textarea type=\"text\" rows=\"5\" onChange={(e)=> setDescription(e.target.value)} className=\"form-control\" placeholder=\"Describe your project in 50 words\" />\r\n                                                    </div>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container spacing={1} direction={\"row\"}>\r\n                                                <MapLocation/>\r\n                                            </Grid>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"uploadDoc\">\r\n                                        <h4>Upload Gallery Pics</h4>\r\n                                        <p className=\"subHeading\">Images will help to get more visual understanding of project</p>\r\n                                        <p className=\"subHeading\">Select 3 - 10 pics<a href=\"\" style={{color:'#f46b48'}}>More</a></p>\r\n                                        <Grid container spacing={1} direction={\"row\"}>\r\n                                            <Grid item xs={8} sm={10} md={10}>\r\n                                                <div className=\"uploadDocBtn\">\r\n                                                    <input\r\n                                                        accept=\"image/*\"\r\n                                                        className=\"inputDoc\"\r\n                                                        id=\"contained-address-file\"\r\n                                                        multiple\r\n                                                        style={{display:'none'}}\r\n                                                        type=\"file\"\r\n                                                        onChange={e => setImages(e.target.files)}\r\n                                                    />\r\n                                                    <label htmlFor=\"contained-address-file\">\r\n                                                        <Fab component=\"span\" className=\"buttonDoc\">\r\n                                                            <FontAwesomeIcon icon={faFileImage} size=\"lg\"  color=\"#0EAAA6\" />\r\n                                                        </Fab>\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"submit\">\r\n                                                    <Button\r\n                                                        className=\"submit_btn\"\r\n                                                        style={{fontSize:14}}\r\n                                                        onClick={handleContractCreation}\r\n                                                    >Create Contract</Button>\r\n                                                </div>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </>\r\n                </div>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateTokenizedAsset","D:\\FYP\\crowdzapadmin\\src\\Scenes\\TokenizingPropertyPage\\Components\\MapLocation.js",[],"D:\\FYP\\crowdzapadmin\\src\\Components\\DashboardLayout\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\Profiling\\Components\\Kyc\\index.js",["897"],"import { Grid, Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport React, {Component} from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faFileImage} from '@fortawesome/free-solid-svg-icons'\r\nimport {CssTextField} from \"Components/Common/CustomInput\"\r\nimport './style.css'\r\nimport {processKyc} from 'Services/Setting'\r\n\r\nclass KYC extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            docType:\"ID\",\r\n            docDesc:\"Upload ID Card\",\r\n            number:\"\",\r\n            expiry:\"\",\r\n            identityProof: null,\r\n            addressPoof: null\r\n        }\r\n        this.docButtonStyle = {background:\"#0EAAA6\", color:\"#2f3339\"}\r\n        //binding func\r\n        this.changeDocType = this.changeDocType.bind(this)\r\n        this.handleFormChange = this.handleFormChange.bind(this)\r\n        this.handleUploadClick = this.handleUploadClick.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    changeDocType(event){\r\n        if(event === \"ID\"){\r\n            this.setState({\r\n                docType:\"ID\",\r\n                docDesc:\"Upload ID Card\"\r\n            })\r\n        }else if(event === \"Pass\"){\r\n            this.setState({\r\n                docType:\"Pass\",\r\n                docDesc:\"Upload Passport\"\r\n            })\r\n        }else{\r\n            this.setState({\r\n                docType:\"DrvL\",\r\n                docDesc:\"Upload Driving License\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFormChange(event){\r\n        this.setState({\r\n            [event.target.id] : event.target.value\r\n        })\r\n    }\r\n    handleUploadClick(event){\r\n        if(event.target.id === \"contained-doc-file\"){\r\n            this.setState({ identityProof: event.target.files[0] });\r\n        }else{\r\n            this.setState({ addressProof: event.target.files[0] });\r\n        }\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault()\r\n        if(true/*this.validateinput()*/){\r\n            let data = {\r\n                ...this.state\r\n            }\r\n            this.props.processKyc(data)\r\n        }\r\n    }\r\n\r\n    validateinput(){\r\n        if(this.state.number === \"\"){\r\n            console.log(\"Number must not be empty\")\r\n            return false\r\n        }else if(this.state.expiry === \"\"){\r\n            console.log(\"Expiry must not be empty\")\r\n            return false\r\n        }else if(this.state.identityProof === null){\r\n            console.log(\"Identity Image must not be empty\")\r\n            return false\r\n        }else if(this.state.addressPoof === null){\r\n            console.log(\"Address proof must not be empty\")\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <div className=\"dashboardTitle\">\r\n                <h2>KYC</h2>\r\n            </div>\r\n            <div style={{marginLeft:'2%'}}>\r\n                <Grid container spacing={1} direction={\"row\"}>\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <div class=\"docTypes\">\r\n                            <h2>Required documents</h2>\r\n                            {(this.props.user.kycStatus !== \"\") ?<h4 style={{color:'#f46b48'}}><br/> KYC STATUS : {this.props.user.kycStatus.toUpperCase() }</h4> : \"\"}\r\n                            <p className=\"subHeading\">KIND OF DOCUMENT</p>\r\n                            <Grid container spacing={0} direction={\"row\"}>\r\n                                <Grid item xs={4} sm={3} md={3}>\r\n                                    <Button className=\"docTypeBtn\" onClick={()=>this.changeDocType(\"ID\")} style={(this.state.docType === \"ID\")?this.docButtonStyle:{}}>Id Card</Button>\r\n                                </Grid>\r\n                                <Grid item xs={4} sm={3} md={3}>\r\n                                    <Button className=\"docTypeBtn\" size=\"medium\" onClick={()=>this.changeDocType(\"Pass\")} style={(this.state.docType === \"Pass\")?this.docButtonStyle:{}}>Passport</Button>\r\n                                </Grid>\r\n                                <Grid item xs={4} sm={3} md={3}>\r\n                                    <Button className=\"docTypeBtn\" size=\"medium\" onClick={()=>this.changeDocType(\"DrvL\")} style={(this.state.docType === \"DrvL\")?this.docButtonStyle:{}}>Driving License</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <div className=\"numFields\">\r\n                                <Grid container spacing={1} direction={\"row\"}>\r\n                                    <Grid item xs={8} sm={5} md={5}>\r\n                                        <CssTextField  id=\"number\" onChange={this.handleFormChange}   variant=\"outlined\" placeholder=\"34202-8850535-1\" autoFocus='true' label=\"Number\" />\r\n                                    </Grid>\r\n                                    <Grid item xs={8} sm={5} md={5}>\r\n                                        <CssTextField id=\"expiry\" onChange={this.handleFormChange}  variant=\"outlined\" placeholder=\"MM/YY\" label=\"Expiry Date\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                            <div className=\"hrDivder\"></div>\r\n                            <div className=\"uploadDoc\">\r\n                                <h3>{this.state.docDesc}</h3>\r\n                                <p className=\"subHeading\">We require both side of document</p>\r\n                                <Grid container spacing={1} direction={\"row\"}>\r\n                                    <Grid item xs={8} sm={10} md={10}>\r\n                                        <div className=\"uploadDocBtn\">\r\n                                            <input\r\n                                                accept=\"image/*\"\r\n                                                className=\"inputDoc\"\r\n                                                id=\"contained-doc-file\"\r\n                                                multiple\r\n                                                style={{display:'none'}}\r\n                                                type=\"file\"\r\n                                                onChange={this.handleUploadClick}\r\n                                            />\r\n                                            <label htmlFor=\"contained-doc-file\">\r\n                                                <Fab component=\"span\" className=\"buttonDoc\">\r\n                                                    <FontAwesomeIcon icon={faFileImage} size=\"lg\"  color=\"#0EAAA6\" />\r\n                                                </Fab>\r\n                                            </label>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <div className=\"uploadDoc\">\r\n                            <h2>Proof of address</h2>\r\n                            <h4>Upload documents</h4>\r\n                            <p className=\"subHeading\">Proof of address can be one of the following:</p>\r\n                            <p className=\"subHeading\">bank/credit card statement or utitlity bill.<a href=\"\" style={{color:'#f46b48'}}>More</a></p>\r\n                            <Grid container spacing={1} direction={\"row\"}>\r\n                                <Grid item xs={8} sm={10} md={10}>\r\n                                    <div className=\"uploadDocBtn\">\r\n                                        <input\r\n                                            accept=\"image/*\"\r\n                                            className=\"inputDoc\"\r\n                                            id=\"contained-address-file\"\r\n                                            multiple\r\n                                            style={{display:'none'}}\r\n                                            type=\"file\"\r\n                                            onChange={this.handleUploadClick}\r\n                                        />\r\n                                        <label htmlFor=\"contained-address-file\">\r\n                                            <Fab component=\"span\" className=\"buttonDoc\">\r\n                                                <FontAwesomeIcon icon={faFileImage} size=\"lg\"  color=\"#0EAAA6\" />\r\n                                            </Fab>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"submit\">\r\n                                        <Button\r\n                                            className=\"submit_btn\"\r\n                                            onClick={this.handleSubmit}\r\n                                            disabled={(this.props.user.kycStatus !== \"\")?true:false}\r\n                                        >Submit</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { processKyc}\r\n)(KYC)","D:\\FYP\\crowdzapadmin\\src\\Config\\envConfig.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services_chain\\AuthorithyContract\\index.js",["898","899","900","901","902","903"],"import {Wallet} from \"Services/Wallet\";\r\nimport {\r\n    processingCreatePoll, createPollSucceed,  createPollError,\r\n    processingVotePoll, votePollSucceed, votePollError,\r\n    processingPollProcess, pollProcessSucceed,pollProcessError,\r\n    loadingPolls, setPolls, pollsError\r\n} from \"Redux/AuthorithyContract\";\r\nimport {LCDClient} from \"Config/LCDClient\";\r\nimport CONSTANTS from \"Config/constants\";\r\n\r\nexport const createNewPoll = (pollType, amount) => (dispatch) => {\r\n    ++pollType\r\n    let client  = Wallet.getInstance().account\r\n    let msgTran =[\r\n        {\r\n            \"type\": \"relcontractors/create_vote_poll\",\r\n            \"value\": {\r\n                \"poll_type\": pollType.toString(),\r\n                \"amount\": amount.toString(),\r\n                \"owner_voter_poll\": client.address,\r\n            }\r\n        }\r\n    ]\r\n    let fee=  {\r\n        \"amount\": [],\r\n        \"gas\": \"200000\"\r\n    }\r\n\r\n    dispatch((processingCreatePoll()))\r\n    console.log(msgTran)\r\n    client.signerCosmosClient.signAndBroadcast(msgTran,fee).then((res)=>{\r\n        dispatch(createPollSucceed(res.data.rawlog))\r\n        console.log(res)\r\n    }).catch((err)=>{\r\n        dispatch(createPollError(err))\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const votePoll = (pollId, vote) => (dispatch) => {\r\n    let client  = Wallet.getInstance().account\r\n    let msgTran =[\r\n        {\r\n            \"type\": \"relcontractors/vote_poll\",\r\n            \"value\": {\r\n                \"poll_id\": pollId.toString(),\r\n                \"vote\": vote.toString() || '0',\r\n                \"voter\": client.address.toString()\r\n            }\r\n        }]\r\n    let fee=  {\r\n        \"amount\": [],\r\n        \"gas\": \"200000\"\r\n    }\r\n\r\n    //dispatch((processingVotePoll()))\r\n    client.signerCosmosClient.signAndBroadcast(msgTran,fee).then((res)=>{\r\n        //dispatch(votePollSucceed())\r\n        console.log(res)\r\n    }).catch((err)=>{\r\n        //dispatch(votePollError(err))\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const processPoll = (pollId) => (dispatch) => {\r\n    let client  = Wallet.getInstance().account\r\n    let msgTran =[\r\n        {\r\n            \"type\": \"relcontractors/process_poll\",\r\n            \"value\": {\r\n                \"poll_id\": pollId.toString(),\r\n                \"transactor\": client.address\r\n            }\r\n        }]\r\n    let fee=  {\r\n        \"amount\": [],\r\n        \"gas\": \"200000\"\r\n    }\r\n\r\n    client.signerCosmosClient.signAndBroadcast(msgTran,fee).then((res)=>{\r\n        console.log(res)\r\n    }).catch((err)=>{\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const getPolls = () => (dispatch) =>{\r\n    dispatch(loadingPolls())\r\n    LCDClient.get(CONSTANTS.CHAIN_API_URLS.GET_POLLS).then((res)=>{\r\n        //Todo : extract data from res and send it to store\r\n        console.log(res)\r\n        dispatch(setPolls(res.result))\r\n    }).catch((err)=>{\r\n        console.log(err)\r\n        dispatch(pollsError(err))\r\n    })\r\n}\r\n\r\nexport const updateRelContractAddress = () => (dispatch) => {\r\n    let client  = Wallet.getInstance().account\r\n    let msgTran =[\r\n        {\r\n            \"type\": \"relcontractors/update_relcontractor_address\",\r\n            \"value\": {\r\n                \"rel_contractor_address\": client.address,\r\n                \"new_rel_contractor_address\": client.address\r\n            }\r\n        }]\r\n    let fee=  {\r\n        \"amount\": [],\r\n        \"gas\": \"200000\"\r\n    }\r\n\r\n    //dispatch((processingCreatePoll()))\r\n    client.signerCosmosClient.signAndBroadcast(msgTran,fee).then((res)=>{\r\n        console.log(res)\r\n        //dispatch(createPollSucceed())\r\n    }).catch((err)=>{\r\n        //dispatch(createPollError(err))\r\n        console.log(err)\r\n    })\r\n}","D:\\FYP\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\Gallery.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services\\Wallet\\SerializedHDWallet.js",["904","905"],"import {makeCosmoshubPath, Secp256k1HdWallet} from \"@cosmjs/launchpad\";\r\nimport Wallet from \"./Wallet\";\r\n\r\nclass SerializedHDWallet extends Wallet{\r\n    constructor(mnemonic, accounts, index) {\r\n        super(mnemonic, accounts, index);\r\n    }\r\n\r\n    static async build(serialized ,password, tag, addressIndex) {\r\n        let mnemonic = (await Secp256k1HdWallet.deserialize(serialized, password)).mnemonic\r\n        let account = await Wallet.init(mnemonic, tag, addressIndex )\r\n        return new SerializedHDWallet(mnemonic, account, addressIndex)\r\n    }\r\n\r\n}\r\n\r\nexport default SerializedHDWallet","D:\\FYP\\crowdzapadmin\\src\\Services\\Wallet\\Wallet.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\SearchPage\\Components\\SearchMap\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\BalanceHeader\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\Header\\Components\\NotifyMenu\\index.js",["906","907","908","909","910","911","912","913"],"D:\\FYP\\crowdzapadmin\\src\\Components\\LanguageSelector\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Components\\RegisterLoginForm\\Components\\RegisterForm\\index.js",["914","915","916"],"import * as React from 'react';\nimport './style.css';\nimport { Icon } from 'react-fa';\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport {connect} from 'react-redux'\nimport {registerUser} from 'Services/User'\nimport {clearError} from \"Redux/User\";\nimport {withRouter} from \"react-router-dom\";\nimport Alert from 'Components/Common/Alert'\n\n\nclass RegisterForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      verifyCode: '',\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      isActiveForm: false,\n      isLoading: false\n    }\n    this.handleChangeForm = this.handleChangeForm.bind(this)\n  }\n  submitRegister = (e) => {\n    e.preventDefault();\n    const registerData = {\n      name: this.state.name,\n      password: this.state.password,\n      email: this.state.email,\n    };\n    this.props.registerUser(registerData)\n  }\n\n  handleChangeForm = (e) => {\n    e.preventDefault()\n    this.setState({\n      [e.target.id] : e.target.value\n    })\n  }\n  registerForm() {\n    return (\n      <form role=\"form\" onSubmit={this.submitRegister}>\n        <div className=\"form-group\">\n          <div className=\"btn-group-justified\">\n            <a href=\"explore.html\" className=\"btn btn-lg btn-facebook\">\n              <Icon name=\"facebook\" className=\"pull-left\" />\n              <span>Sign In with Facebook</span>\n            </a>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"btn-group-justified\">\n            <a href=\"explore.html\" className=\"btn btn-lg btn-google\">\n              <Icon name=\"google\" className=\"pull-left\" />\n              <span>Sign In with Google</span>\n            </a>\n          </div>\n        </div>\n        <div className=\"signOr\">OR</div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            id=\"name\"\n            className=\"form-control\"\n            value={this.state.name}\n            onChange={this.handleChangeForm}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"Email Address\"\n            className=\"form-control\"\n            value={this.state.email}\n            onChange={this.handleChangeForm}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            className=\"form-control\"\n            value={this.state.password}\n            onChange={this.handleChangeForm}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            className=\"form-control\"\n            value={this.state.confirmPassword}\n            onChange={this.handleChangeForm}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"btn-group-justified\">\n            <button type=\"submit\" disabled={(this.props.processing)?true: false} className=\"btn btn-lg btn-green isThemeBtn\">Sign Up</button>\n          </div>\n        </div>\n        <p className=\"help-block\">\n          <span>Already a member? </span>\n          <a\n            href=\"#\"\n            className=\"modal-su text-green isThemeText text-red\"\n            onClick={this.props.openLoginForm}\n          >\n            Sign In\n          </a>\n        </p>\n      </form>\n    );\n  }\n  activeForm() {\n    return (\n      <form role=\"form\" onSubmit={this.submitActive}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Verify Code\"\n            className=\"form-control\"\n            value={this.state.verifyCode}\n            onChange={(e) => { this.changeFormData('verifyCode', e.currentTarget.value); }}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"btn-group-justified\">\n            <button type=\"submit\" className=\"btn btn-lg btn-green isThemeBtn\">Verify</button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n  render() {\n    return (\n      <div\n        className={'registerForm slimScroll modal fade' + (this.props.active ? ' in' : '')}\n      >\n        <div className=\"modal-dialog modal-sm\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">\n                {this.state.isActiveForm ? 'Verify your account' : 'Sign up'}\n              </h4>\n            </div>\n            <div className=\"modal-body\">\n              <Alert show={this.props.registered} class='success' clearer={this.props.clearError}  message='Account created successfully,now sign in!.'/>\n              <Alert show={this.props.error} class='danger' clearer={this.props.clearError} message='Failed to create account.'/>\n              <div style={{marginLeft: '40%'}}>\n                <Loader\n                    type=\"Bars\"\n                    color=\"#00A9A4\"\n                    height={40}\n                    width={60}\n                    visible={this.props.processing}\n                />\n              </div>\n              {this.state.isActiveForm ? this.activeForm() : this.registerForm()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  registered: state.auth.registered,\n  processing: state.auth.regProcessing,\n  error: state.auth.regError,\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser, clearError}\n)( withRouter(RegisterForm));","D:\\FYP\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\Header\\Components\\SearchForm\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services\\ListProperty\\index.js",["917"],"D:\\FYP\\crowdzapadmin\\src\\Redux\\ListedProps\\index.js",["918"],"D:\\FYP\\crowdzapadmin\\src\\App\\MainRoute\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services\\User\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\index.js",["919","920"],"D:\\FYP\\crowdzapadmin\\src\\Components\\Common\\Alert\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services\\Setting\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services\\Setting\\SettingService.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services\\Wallet\\HDWallet.js",["921","922"],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\SlideShow\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\Subscribe\\index.js",["923","924"],"import * as React from 'react';\nimport './style.css';\n\nclass Subscribe extends React.Component<{}, {}> {\n\n  render() {\n    return (\n      <div className=\"subComp col-xs-12 col-sm-6 col-md-3 col-lg-3\">\n        <div className=\"subCompTitle osLight\">{this.props.children}</div>\n        <form role=\"form\">\n          <div className=\"form-group\">\n            <input type=\"email\" className=\"form-control\" placeholder=\"Email Address\" />\n          </div>\n          <div className=\"form-group\">\n            <a href=\"#\" className=\"btn btn-green btn-block isThemeBtn\">Subscribe</a>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Subscribe;","D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\AddKey\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services\\ListProperty\\ListedPropService.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services_chain\\Contracts\\index.js",["925"],"D:\\FYP\\crowdzapadmin\\src\\Services\\InvestmentPortfolio\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Redux\\AuthorithyContract\\index.js",["926"],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\Components\\CreatePoll\\index.js",["927","928"],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\SendForm\\index.js",["929"],"import * as React from 'react';\r\nimport './style.css';\r\nimport {useHistory}  from 'react-router-dom';\r\nimport Loader from \"react-loader-spinner\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useState} from \"react\";\r\nimport Alert from \"Components/Common/Alert\";\r\nimport {sendRelCoin} from \"Services_chain/TransferCrypto\";\r\n\r\nfunction SendForm() {\r\n  const history = useHistory()\r\n  const walletObj = useSelector((state)=> state.wallet.walletObj)\r\n  const locked = useSelector((state)=> state.wallet.walletLocked)\r\n  const [processingState, setProcessingState] = useState(\"NO_PROCESSING\")\r\n  const [txHash, setTxHash] = useState(\"\")\r\n\r\n  const [amount, setAmount] = useState(0)\r\n  const [recipientAddress, setRecipientAddress] = useState(\"\")\r\n\r\n  const sendCrypto = (e)=>{\r\n    e.preventDefault()\r\n    if(recipientAddress.length === 45 && amount > 0){\r\n      setProcessingState(\"PROCESSING\")\r\n      sendRelCoin(recipientAddress, amount, handleResponse)\r\n    }\r\n  }\r\n\r\n  const handleResponse = (status, txHash)=>{\r\n    setTxHash(txHash)\r\n    setProcessingState(status)\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <div className=\"dashboardTitle\">\r\n          <h3>Withdraw Form</h3>\r\n        </div>\r\n        <div className=\"depositForm panel panel-default\">\r\n          <Loader type=\"Dots\" color=\"#00A9A4\" height={60} width={60} visible={(processingState === \"PROCESSING\")?true:false}/>\r\n          {\r\n            (!locked)?\r\n                <div className=\"selectedAccount\">\r\n                  <h3>Selected Account</h3>\r\n                  <h5>{walletObj.account.tag}</h5>\r\n                  <h5>{walletObj.account.walletObj.address}</h5>\r\n                </div>\r\n                :\r\n                <></>\r\n          }\r\n          <form>\r\n            <Alert class=\"danger\" show={locked} message=\"Wallet must be unlocked, before any operation!!\" clearButton={true}/>\r\n            <Alert class=\"danger\" show={(processingState === \"PROCESSING_FAILED\")?true: false} message=\"Failed to transfer rel coin\" clearButton={true}/>\r\n            <Alert class=\"success\" show={(processingState === \"PROCESSING_SUCCEED\")?true: false} message={\"Transaction Hash \"+txHash} clearButton={true}/>\r\n            <div className=\"input-group form-group\">\r\n              <span className=\"input-group-addon\">Amount</span>\r\n              <input type=\"number\" className=\"form-control\" onChange={(e)=> setAmount(e.target.value)} placeholder=\"Amount\" />\r\n            </div>\r\n            <div className=\"input-group form-group\">\r\n              <span className=\"input-group-addon\">Recipient Address</span>\r\n              <input type=\"text\" className=\"form-control\" onChange={(e)=> setRecipientAddress(e.target.value)} placeholder=\"cosmos1at8lxwf5fngzs3g20n84qt5x5nq2t2uymf6mtn\" />\r\n            </div>\r\n            <div className=\"button-group form-group\">\r\n              <div className=\"btn btn-white\" onClick={(e) => history.goBack()}>{'<< Back'}</div>\r\n              <button className=\"btn btn-green\" onClick={sendCrypto}>Send</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default SendForm;","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\Caption\\index.js",["930"],"D:\\FYP\\crowdzapadmin\\src\\Services_chain\\TransferCrypto\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\SendAndBuy.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\CryptoOrders\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Services\\Wallet\\WalletService.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Redux\\TO\\errorReducer.js",["931"],"import CONSTANTS from \"Config/constants\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case CONSTANTS.ERROR.GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\ListProperty\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Config\\LCDClient.js",[],"D:\\FYP\\crowdzapadmin\\src\\Components\\RegisterLoginForm\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\NewWallet\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\MyhousePage\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\index.js",[],"D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\SearchBar\\index.js",["932","933","934"],"import * as React from 'react';\nimport './style.css';\nimport { Icon } from 'react-fa';\nimport SelectComponent from 'Components/SelectComponent';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getTranslation, SupportedLanguage } from 'Services/Geo';\n\nconst mapStateToProps = (state) => ({\n  lang: state.setting.lang,\n});\n\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAdvance: false\n    };\n    this.listBed= null\n    this.listBath = null;\n  }\n\n  toggleAdvSearch = () => {\n    this.setState({\n      isAdvance: !this.state.isAdvance\n    });\n  }\n  render() {\n    const listBed = [\n      getTranslation(this.props.lang, 'Bedrooms'),\n      '1',\n      '2',\n      '3',\n      '4'\n    ];\n    const listBath = [\n      getTranslation(this.props.lang, 'Bathrooms'),\n      '1',\n      '2',\n      '3',\n      '4'\n    ];\n    return (\n      <div className=\"search-panel\">\n        <form className=\"form-inline\" role=\"form\">\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"city\"\n              placeholder={getTranslation(this.props.lang, 'City')}\n            />\n          </div>\n          <div className={`form-group${this.state.isAdvance ? ' adv' : ' hidden-xs'}`}>\n            <SelectComponent switchTop={true} listItem={listBed}>\n              {getTranslation(this.props.lang, 'Bedrooms')}\n            </SelectComponent>\n          </div>\n          <div className={`form-group${this.state.isAdvance ? ' adv' : ' hidden-xs'}`}>\n            <SelectComponent switchTop={true} listItem={listBath}>\n              {getTranslation(this.props.lang, 'Bathrooms')}\n            </SelectComponent>\n          </div>\n          <div className={`form-group${this.state.isAdvance ? ' adv' : ' hidden-xs'}`}>\n            <div className=\"input-group\">\n              <div className=\"input-group-addon\">$</div>\n              <input\n                className=\"form-control price\"\n                type=\"number\"\n                placeholder={getTranslation(this.props.lang, 'From')}\n              />\n            </div>\n          </div>\n          <div className={`form-group${this.state.isAdvance ? ' adv' : ' hidden-xs'}`}>\n            <div className=\"input-group\">\n              <div className=\"input-group-addon\">$</div>\n              <input className=\"form-control price\" type=\"number\" placeholder={getTranslation(this.props.lang, 'To')} />\n            </div>\n          </div>\n          <div className={`form-group${this.state.isAdvance ? ' adv' : ' hidden-xs'}`}>\n            <div className=\"checkbox custom-checkbox\">\n              <label>\n                <input type=\"checkbox\" />\n                <Icon name=\"check\" /> {getTranslation(this.props.lang, 'For rent')}</label>\n            </div>\n          </div>\n          <div className={`form-group${!this.state.isAdvance ? ' hidden-xs' : ''}`}>\n            <div className=\"checkbox custom-checkbox\"><label>\n              <input type=\"checkbox\" /><Icon name=\"check\" /> {getTranslation(this.props.lang, 'For sale')} </label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <Link to=\"/search\" className=\"btn btn-green isThemeBtn\">{getTranslation(this.props.lang, 'Search')}</Link>\n            <a\n              href=\"#\"\n              className={`btn btn-o btn-white pull-right visible-xs${this.state.isAdvance ? ' advBtnActive' : ''}`}\n              onClick={this.toggleAdvSearch}\n            >\n              {getTranslation(this.props.lang, 'Advance Search')}\n              <Icon name={`${this.state.isAdvance ? 'angle-down' : 'angle-up'}`} />\n            </a>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(SearchBar);","D:\\FYP\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\GetInTouch\\index.js",["935","936","937","938"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\reportWebVitals.js",[],["939","940"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\App\\MainRoute\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\App\\MainRoute\\PrivateRoute.js",["941"],["942","943"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\ListedProps\\index.js",["944"],"import CONSTANTS from \"Config/constants\";\r\n\r\nconst initialState = {\r\n    listedProperties : null,\r\n    tried : false,\r\n    loading : false,\r\n    filterBy : null\r\n};\r\n/***************/\r\n/***Actions****/\r\n/*************/\r\nexport const loadingListedProps = (payload) => {\r\n    return {\r\n        type: CONSTANTS.LISTED_PROPS.LOADING_PROPS,\r\n        payload: payload\r\n    };\r\n};\r\n\r\nexport const setListedProps = (payload) => {\r\n  return {\r\n      type: CONSTANTS.LISTED_PROPS.SET_LISTED_PROPS,\r\n      payload: payload\r\n  };\r\n};\r\n\r\nexport const fetchListedPropsFailed = () => {\r\n    return {\r\n        type: CONSTANTS.LISTED_PROPS.FAILED_TO_GET,\r\n        payload: null\r\n    };\r\n};\r\n\r\n/***************/\r\n/***Reducers***/\r\n/*************/\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n     case CONSTANTS.LISTED_PROPS.LOADING_PROPS:\r\n         return {\r\n             ...state,\r\n             loading: action.payload,\r\n         };\r\n     case CONSTANTS.LISTED_PROPS.SET_LISTED_PROPS:\r\n          return {\r\n              loading: false,\r\n              listedProperties  : action.payload.listedProps,\r\n              tried : true,\r\n              filterBy: action.payload.filterBy\r\n         };\r\n     case CONSTANTS.LISTED_PROPS.FAILED_TO_GET:\r\n          return {\r\n              loading: false,\r\n              tried : true,\r\n          };\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\Wallet\\index.js",["945"],["946","947"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\MyhousePage\\index.js",["948"],"import * as React from 'react';\nimport './style.css';\nimport Dashboard from 'Components/DashboardLayout';\nimport SingleHouse from 'Components/SingleHouse';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {getListedProps} from \"Services/ListProperty\";\n\n\nfunction MyHousePage(props) {\n  const dispatch = useDispatch()\n  const listedProps = useSelector(state => state.listedProps.listedProperties)\n\n  React.useEffect(()=>{\n    dispatch(getListedProps())\n  }, []\n  )\n    return (\n        <Dashboard>\n          <div className=\"dashboardTitle\">\n            <h3>Listed Property</h3>\n          </div>\n          <div className=\"main\">\n            {listedProps && listedProps.map((data, index) => {\n              return (\n                  <div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\" key={index}>\n                    <SingleHouse data={data} adminPage={true}/>\n                  </div>\n              );\n            })}\n          </div>\n        </Dashboard>\n    );\n}\n\nexport default MyHousePage;","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\User\\index.js",["949"],"import jwt_decode from \"jwt-decode\";\r\n\r\nimport { regProcessing, userRegistered ,regErrorOccur, errorOccur , setCurrentUser, userBeingLogged } from \"Redux/User\"\r\nimport {setAddresses} from 'Redux/Wallet'\r\nimport UserService from \"./UserService\";\r\nimport LocalStore from \"Config/localStore\";\r\n\r\nconst auth = new UserService()\r\nconst localStore = new LocalStore()\r\n\r\n// Register UserService - return ok response on success\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  dispatch(regProcessing())\r\n  auth.signUp(userData).then(res => {\r\n    if(res.status === 200){\r\n      dispatch(userRegistered())\r\n    }else{\r\n      dispatch(regErrorOccur(res.data.error))\r\n    }\r\n  }).catch(err =>\r\n      dispatch(regErrorOccur(err))\r\n    );\r\n};\r\n\r\n// Login - get user token & user data\r\nexport const loginUser = userData => dispatch => {\r\n  //User Request is being processed\r\n  dispatch(userBeingLogged())\r\n  //Do the actual request\r\n    auth.logIn(userData).then(res => {\r\n      // Save to localStorage\r\n      if (res.status === 200) {\r\n        setUser(res.data, dispatch)\r\n      } else {\r\n        dispatch(errorOccur(res.data))\r\n      }\r\n    }).catch(err =>\r\n        dispatch(errorOccur(err.response))\r\n    )\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStore.removeToken();\r\n  // Remove auth header for future requests\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n}\r\n\r\n// If Logged by using third party service\r\nexport const loggedUser = data => dispatch => {\r\n  setUser(data, dispatch)\r\n}\r\n\r\n\r\n//set received data to storage and also set in store\r\nfunction setUser(data, dispatch) {\r\n  const { token, user} = data;\r\n  localStore.setToken(token);\r\n  localStore.setClientId(user._id)\r\n  // Decode token to get user data\r\n  const decoded = jwt_decode(token);\r\n  // Set current user\r\n  dispatch(setCurrentUser(decoded));\r\n  userKeys(user.keys, dispatch)\r\n}\r\n\r\nfunction userKeys(data, dispatch){\r\n  if(data.length > 0){\r\n    console.log(data)\r\n    dispatch(setAddresses(data))\r\n  }\r\n}\r\n\r\n\r\nexport const getUserContacts = ( callBack) => {\r\n  auth.getUserContacts().then(res => {\r\n      if (res.status === 200 && res.data) {\r\n          callBack(\"\", res.data.data)\r\n      }else{\r\n          callBack(\"Failed to get contacts\")\r\n      }\r\n  }).catch(err => {\r\n      console.log(err)\r\n      callBack(\"Failed to get contacts\")\r\n  });\r\n};\r\n\r\nexport const addNewUserContacts = (data, callBack) => {\r\n  auth.addUserContact(data).then(res => {\r\n      if (res.status === 200 && res.data.status== \"ok\") {\r\n          callBack(\"\")\r\n      }else{\r\n          callBack(\"Failed to add contact\")\r\n      }\r\n  }).catch(err => {\r\n      console.log(err)\r\n      callBack(\"Failed to add contact\")\r\n  });\r\n};","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\index.js",[],["950","951"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\Components\\Polls\\index.js",[],["952","953"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\RequestForm\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\DashboardLayout\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\ListProperty\\index.js",["954"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services_chain\\Contracts\\index.js",["955"],"import {Wallet} from \"Services/Wallet\";\r\nimport {Secp256k1HdWallet} from \"@cosmjs/launchpad\";\r\nimport {newInvestment, transferInvestment} from \"Services/InvestmentPortfolio\";\r\n\r\nexport const createBasicContract = async (data, callback) => {\r\n    try{\r\n        let chainResponse = await createBasicContractInChain(data)\r\n        console.log(chainResponse)\r\n        if(chainResponse){\r\n\r\n        }\r\n    }catch (e) {\r\n        callback(\"ERROR\")\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const buyBasicTokens =  (data, callBack) => {\r\n    buyBasicTokensInChain(data).then((res)=>{\r\n        if(res.transactionHash){            \r\n            newInvestment(res.transactionHash, data, callBack)\r\n        }else{\r\n            console.log(res)\r\n            callBack(\"PROCESSING_FAILED\", \"\")\r\n        }\r\n    }).catch((err)=>{\r\n        callBack(\"PROCESSING_FAILED\",\"\")\r\n        console.log(err)\r\n    })\r\n}\r\n\r\n\r\nexport const transferBasicTokens =  (data, callBack) => {\r\n    transferBasicTokensInChain(data).then((res)=>{\r\n        if(res.transactionHash){    \r\n            console.log(res)        \r\n            transferInvestment(res.transactionHash, data, callBack)\r\n        }else{\r\n            console.log(res)\r\n            callBack(\"PROCESSING_FAILED\", \"\")\r\n        }\r\n    }).catch((err)=>{\r\n        callBack(\"PROCESSING_FAILED\",\"\")\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const createBasicContractInChain = async (data) => {\r\n\r\n    let client  = Wallet.getInstance().account\r\n    let msgTran =[\r\n        {\r\n            \"type\": \"smartcontracts/create_basic_contract\",\r\n            \"value\": {\r\n                \"contract_address\": data.contractAddress,\r\n                \"creator\": client.address.toString(),\r\n                \"title\": data.title.toString(),\r\n                \"total_supply\" : data.totalSupply.toString(),\r\n                \"token_price\": data.tokenPrice.toString(),\r\n                \"start_date\": new Date().toISOString(),\r\n                \"end_date\": data.endDate\r\n                //\"2021-01-26T16:04:27.4609868Z\"\r\n            }\r\n        }]\r\n    console.log(msgTran)    \r\n    let fee=  {\r\n        \"amount\": [],\r\n        \"gas\": \"200000\"\r\n    }\r\n    return client.signerCosmosClient.signAndBroadcast(msgTran,fee)\r\n}\r\n\r\n\r\nexport const buyBasicTokensInChain =  (data) => {\r\n    let client  = Wallet.getInstance().account\r\n    let msgTran =[\r\n        {\r\n            \"type\": \"smartcontracts/invest_basic_contract\",\r\n            \"value\": {\r\n                \"contract_address\": data.contractAddress,\r\n                \"amount\": data.amount.toString(),\r\n                \"investor\": client.address.toString()\r\n            }\r\n        }]\r\n    console.log(msgTran)    \r\n    let fee=  {\r\n        \"amount\": [],\r\n        \"gas\": \"200000\"\r\n    }\r\n\r\n   return client.signerCosmosClient.signAndBroadcast(msgTran,fee)\r\n}\r\n\r\n\r\nexport const transferBasicTokensInChain =  (data) => {\r\n    let client  = Wallet.getInstance().account\r\n    let msgTran =[\r\n        {\r\n            \"type\": \"smartcontracts/transfer_basic_contract\",\r\n            \"value\": {\r\n                \"contract_address\": data.contractAddress.toString(),\r\n                \"to\": data.to.toString(),\r\n                \"from\": client.address.toString(),\r\n                \"amount\":data.amount.toString()\r\n            }\r\n        }]\r\n    console.log(msgTran)    \r\n    let fee=  {\r\n        \"amount\": [],\r\n        \"gas\": \"200000\"\r\n    }\r\n\r\n    return client.signerCosmosClient.signAndBroadcast(msgTran,fee)\r\n}","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\Components\\Polls\\Components\\Poll\\index.js",["956"],"import React, {useState} from 'react';\r\nimport './style.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faVoteYea, faPoll} from '@fortawesome/free-solid-svg-icons'\r\nimport { votePoll,processPoll } from 'Services_chain/AuthorithyContract';\r\nimport {useSelector} from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Alert from \"Components/Common/Alert\";\r\n\r\nfunction PollInfo(props){\r\n    const locked = useSelector((state)=> state.wallet.walletLocked)\r\n    const [processing, setProcessing] = useState(false)\r\n    const [responseHash, setResponseHash] = useState(\"\")\r\n    const [resErrorMsg, setResErrorMsg] = useState(\"\")\r\n\r\n    const getVotesAddress = (votes)=>{\r\n        var addresses =\"\\n\"\r\n        if(votes){\r\n            votes.forEach(element => {\r\n                addresses = addresses+element+\"\\n\"\r\n            });\r\n        }\r\n        \r\n        return addresses\r\n    }\r\n\r\n    const totalCastedVotes = ()=>{\r\n        return parseInt(props.data.positive_votes)+parseInt(props.data.negative_votes)    \r\n    }\r\n\r\n    const vote = (vote)=>{\r\n        if(!locked){\r\n            setProcessing(true)\r\n            votePoll(props.data.poll_id, vote, voteResponseHandler)\r\n        }        \r\n    }\r\n\r\n    const proPoll = ()=>{\r\n        if(!locked){\r\n            processPoll(props.data.poll_id)\r\n        }        \r\n    }\r\n\r\n    const voteResponseHandler = (res)=>{\r\n        setProcessing(false)\r\n        if(res.transactionHash){            \r\n            setResponseHash(res.transactionHash)\r\n        }else{\r\n            setResErrorMsg(\"Failed to process\")\r\n        }\r\n    }\r\n        return (\r\n            <div className=\"agentInfoContainer\">            \r\n                <div className=\"avatar\">\r\n                    <FontAwesomeIcon icon={faPoll} size={\"4x\"}  color=\"#0eaaa6\"/>  \r\n                </div>\r\n                <div className=\"info\">\r\n                <Loader type=\"ThreeDots\" color=\"#00A9A4\" height={40} width={50} visible={processing}/>\r\n                <Alert class=\"success\" show={responseHash !== \"\"? true: false} message={responseHash} clearer={()=>setResponseHash(\"\")}/>\r\n                <Alert class=\"danger\" show={resErrorMsg !== \"\"? true: false} message={responseHash} clearer={()=>setResErrorMsg(\"\")}/>\r\n                    <div className=\"name\">Status: {(!props.data.processed)?\"Pending\":\"Processed\"}</div>\r\n                    <div className=\"title\">Poll Type: {(props.data.type == 1)?\"Mintint\":\"Distribution\"}</div>\r\n                    <div className=\"title\">Total Casted Votes: {totalCastedVotes()}</div>\r\n                    <div className=\"title\">Poll Amount: {props.data.coins_amount.amount}</div>\r\n                    <div className=\"address\">Owner: {props.data.owner_voter_poll}</div>  \r\n                    <div className=\"address\">Positive Votes: {getVotesAddress(props.data.positive_votes_address)}</div>\r\n                    <div className=\"address\">Negative Votes: {getVotesAddress(props.data.negative_votes_address)}</div>\r\n                </div>\r\n                <div className=\"ops\">\r\n                    <Button variant=\"contained\" color=\"#0eaaa6\"\r\n                         href=\"#contained-buttons\"\r\n                         disabled={(!props.data.processed)?false:true}\r\n                         onClick={()=>vote(1)}\r\n                    >\r\n                        Vote\r\n                        <FontAwesomeIcon icon={faVoteYea}  color=\"#0eaaa6\"/>                   \r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"#0eaaa6\"\r\n                        href=\"#contained-buttons\"\r\n                        disabled={(!props.data.processed)?false:true}\r\n                        onClick={()=>vote(0)}\r\n                    >\r\n                        Cancel\r\n                        <FontAwesomeIcon icon={faVoteYea}  color=\"#0eaaa6\"/>                   \r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"#0eaaa6\"\r\n                        href=\"#contained-buttons\"\r\n                        disabled={(!props.data.processed)?false:true}\r\n                        onClick={()=>proPoll()}\r\n                    >\r\n                        Process Poll\r\n                        <FontAwesomeIcon icon={faVoteYea}  color=\"#0eaaa6\"/>                   \r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default PollInfo;","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\MenuBar\\index.js",["957","958","959","960","961"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\index.js",["962","963"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Setting\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\ListProperty\\ListedPropService.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\Header\\Components\\SearchForm\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\CryptoOrder\\CryptoOrderService.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\SendAndBuy.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\Header\\Components\\NotifyMenu\\index.js",["964","965","966","967","968","969","970","971"],"import * as React from 'react';\nimport './style.css';\n\nimport { Icon } from 'react-fa';\n\n\nclass NotifyMenu extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMenu: false,\n      infoHover: false,\n      mailHover: false\n    };\n  }\n\n  showMenu = () => {\n    this.setState({\n      showMenu: !this.state.showMenu\n    });\n    document.addEventListener('click', this.hideMenu);\n  }\n\n  hideMenu = () => {\n    this.setState({\n      showMenu: false\n    });\n    document.removeEventListener('click', this.hideMenu);\n  }\n\n  infoHover = () => {\n    this.setState({\n      infoHover: true\n    });\n    document.addEventListener('mouseout', this.endInfoHover);\n  }\n\n  mailHover = () => {\n    this.setState({\n      mailHover: true\n    });\n    document.addEventListener('mouseout', this.endMailHover);\n  }\n\n  endInfoHover = () => {\n    this.setState({\n      infoHover: false\n    });\n    document.removeEventListener('mouseout', this.endInfoHover);\n  }\n\n  endMailHover = () => {\n    this.setState({\n      mailHover: false\n    });\n    document.removeEventListener('mouseout', this.endMailHover);\n  }\n\n  render() {\n    return (\n        <div className={`headerNotifyWraper ${this.state.showMenu ? 'open' : ''}`} onClick={this.showMenu}>\n          <a href=\"#\" className=\"headerNotify dropdown-toggle\" data-toggle=\"dropdown\">\n            <Icon name=\"bell-o\" />\n            <span className=\"counter\">5</span>\n          </a>\n          <div className=\"dropdown-menu pull-right notifyMenu\" role=\"menu\">\n            <div className=\"notifyHeader\">\n              <span>Notifications</span>\n              <a href=\"#\" className=\"notifySettings\"><Icon name=\"cog\" /></a>\n              <div className=\"clearfix\" />\n            </div>\n            <ul className=\"notifyList\">\n              <li onMouseOver={this.infoHover}>\n                <a href=\"#\">\n                  <img className=\"avatar pull-left\" src=\"http://mariusn.com/themes/reales/images/avatar-1.png\" />\n                  <div className={`pulse border-grey ${this.state.infoHover ? 'pulsate' : ''}`} />\n                  <div className=\"notify pull-left\">\n                    <div className=\"notifyName\">Sed ut perspiciatis unde</div>\n                    <div className=\"notifyTime\">5 minutes ago</div>\n                  </div>\n                  <div className=\"clearfix\" />\n                </a>\n              </li>\n              <li onMouseOver={this.mailHover}>\n                <a href=\"#\">\n                  <div className=\"notifyRound notifyRound-red\">\n                    <Icon name=\"envelope-o\" />\n                  </div>\n                  <div className={`pulse border-red ${this.state.mailHover ? 'pulsate' : ''}`} />\n                  <div className=\"notify pull-left\">\n                    <div className=\"notifyName\">Lorem Ipsum is simply dummy text</div>\n                    <div className=\"notifyTime\">20 minutes ago</div>\n                  </div>\n                  <div className=\"clearfix\" />\n                </a>\n              </li>\n              <li>\n                <a href=\"#\">\n                  <div className=\"notifyRound notifyRound-yellow heart-o\" />\n                  <div className=\"pulse border-yellow\" />\n                  <div className=\"notify pull-left\">\n                    <div className=\"notifyName\">It is a long established fact</div>\n                    <div className=\"notifyTime\">2 hours ago</div>\n                  </div>\n                  <div className=\"clearfix\" />\n                </a>\n              </li>\n              <li>\n                <a href=\"#\">\n                  <div className=\"notifyRound notifyRound-magenta paper-plane-o\" />\n                  <div className=\"pulse border-magenta\" />\n                  <div className=\"notify pull-left\">\n                    <div className=\"notifyName\">There are many variations</div>\n                    <div className=\"notifyTime\">1 day ago</div>\n                  </div>\n                  <div className=\"clearfix\" />\n                </a>\n              </li>\n            </ul>\n            <a href=\"#\" className=\"notifyAll\">See All</a>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default NotifyMenu;","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Wallet\\SerializedHDWallet.js",["972","973"],["974","975"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Config\\LCDClient.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Geo\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Wallet\\Wallet.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\AddKey\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\RegisterLoginForm\\Components\\RegisterForm\\index.js",["976","977","978"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\ListComp\\index.js",["979"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services_chain\\AuthorithyContract\\index.js",["980","981","982","983","984","985"],"import {Wallet} from \"Services/Wallet\";\r\nimport {\r\n    processingCreatePoll, createPollSucceed,  createPollError,\r\n    processingVotePoll, votePollSucceed, votePollError,\r\n    processingPollProcess, pollProcessSucceed,pollProcessError,\r\n    loadingPolls, setPolls, pollsError\r\n} from \"Redux/AuthorithyContract\";\r\nimport {LCDClient} from \"Config/LCDClient\";\r\nimport CONSTANTS from \"Config/constants\";\r\n\r\nexport const createNewPoll = (pollType, amount) => (dispatch) => {\r\n    ++pollType\r\n    let client  = Wallet.getInstance().account\r\n    let msgTran =[\r\n        {\r\n            \"type\": \"relcontractors/create_vote_poll\",\r\n            \"value\": {\r\n                \"poll_type\": pollType.toString(),\r\n                \"amount\": amount.toString(),\r\n                \"owner_voter_poll\": client.address,\r\n            }\r\n        }\r\n    ]\r\n    let fee=  {\r\n        \"amount\": [],\r\n        \"gas\": \"200000\"\r\n    }\r\n\r\n    dispatch((processingCreatePoll()))\r\n    console.log(msgTran)\r\n    client.signerCosmosClient.signAndBroadcast(msgTran,fee).then((res)=>{\r\n        dispatch(createPollSucceed(res.transactionHash))\r\n        console.log(res)\r\n    }).catch((err)=>{\r\n        dispatch(createPollError(err))\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const votePoll = (pollId, vote, responseCB) => {\r\n    let client  = Wallet.getInstance().account\r\n    let msgTran =[\r\n        {\r\n            \"type\": \"relcontractors/vote_poll\",\r\n            \"value\": {\r\n                \"poll_id\": pollId.toString(),\r\n                \"vote\": vote.toString() || '0',\r\n                \"voter\": client.address.toString()\r\n            }\r\n        }]\r\n    let fee=  {\r\n        \"amount\": [],\r\n        \"gas\": \"200000\"\r\n    }\r\n\r\n    client.signerCosmosClient.signAndBroadcast(msgTran,fee).then((res)=>{\r\n        responseCB(res)\r\n    }).catch((err)=>{\r\n        responseCB(err)\r\n    })\r\n}\r\n\r\nexport const processPoll = (pollId) => {\r\n    let client  = Wallet.getInstance().account\r\n    let msgTran =[\r\n        {\r\n            \"type\": \"relcontractors/process_poll\",\r\n            \"value\": {\r\n                \"poll_id\": pollId.toString(),\r\n                \"transactor\": client.address.toString()\r\n            }\r\n        }]\r\n    let fee=  {\r\n        \"amount\": [],\r\n        \"gas\": \"200000\"\r\n    }\r\n\r\n    client.signerCosmosClient.signAndBroadcast(msgTran,fee).then((res)=>{\r\n        console.log(res)\r\n    }).catch((err)=>{\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const getPolls = () => (dispatch) =>{\r\n    dispatch(loadingPolls())\r\n    LCDClient.get(CONSTANTS.CHAIN_API_URLS.GET_POLLS).then((res)=>{\r\n        //Todo : extract data from res and send it to store\r\n        console.log(res)\r\n        dispatch(setPolls(res.result))\r\n    }).catch((err)=>{\r\n        console.log(err)\r\n        dispatch(pollsError(err))\r\n    })\r\n}\r\n\r\nexport const updateRelContractAddress = () => (dispatch) => {\r\n    let client  = Wallet.getInstance().account\r\n    let msgTran =[\r\n        {\r\n            \"type\": \"relcontractors/update_relcontractor_address\",\r\n            \"value\": {\r\n                \"rel_contractor_address\": client.address,\r\n                \"new_rel_contractor_address\": client.address\r\n            }\r\n        }]\r\n    let fee=  {\r\n        \"amount\": [],\r\n        \"gas\": \"200000\"\r\n    }\r\n\r\n    //dispatch((processingCreatePoll()))\r\n    client.signerCosmosClient.signAndBroadcast(msgTran,fee).then((res)=>{\r\n        console.log(res)\r\n        //dispatch(createPollSucceed())\r\n    }).catch((err)=>{\r\n        //dispatch(createPollError(err))\r\n        console.log(err)\r\n    })\r\n}","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\Components\\CreatePoll\\index.js",["986","987","988"],"import * as React from 'react';\nimport './style.css';\nimport Loader from \"react-loader-spinner\";\nimport Alert from \"Components/Common/Alert\";\nimport SelectComponent from \"Components/SelectComponent\";\nimport {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createNewPoll, updateRelContractAddress} from \"Services_chain/AuthorithyContract\";\nimport {createBasicContract} from \"Services_chain/Contracts\";\n\nfunction CreateNewPoll (){\n    const processingCreatePoll = useSelector((state)=> state.authorityContract.processingCreatePoll)\n    const createPollTransactionHash = useSelector((state)=> state.authorityContract.msg)\n    const createPollError = useSelector((state)=> state.authorityContract.createPollError)\n    const walletObj = useSelector((state)=> state.wallet.walletObj)\n    const locked = useSelector((state)=> state.wallet.walletLocked)\n    const dispatch = useDispatch()\n    const [amount, setAmount] = useState(0)\n    const [pollType, setPollType] = useState(0)\n    const pollTypes = [\n        'MINT REL COIN',\n        'REQUEST COIN',\n    ];\n\n    const createPoll = (e)=>{\n        e.preventDefault()\n        if(!locked){\n            dispatch(createNewPoll(pollType,amount))\n        }\n                \n    }\n\n    return (\n        <div>\n            <div className=\"depositForm panel panel-default\">\n                <Loader type=\"Dots\" color=\"#00A9A4\" height={60} width={60} visible={processingCreatePoll}/>\n                {\n                    (!locked)?\n                        <div className=\"selectedAccount\">\n                            <h3>Selected Account</h3>\n                            <h5>{walletObj.account.tag}</h5>\n                            <h5>{walletObj.account.walletObj.address}</h5>\n                        </div>\n                        :\n                        <></>\n                }\n                <form>\n                    <Alert class=\"danger\" show={locked} message=\"Wallet must be unlocked, before any operation!!\" clearButton={true}/>\n                    <Alert class=\"danger\" show={(createPollError)?true: false} message=\"Failed to create new poll\" clearButton={true}/>\n                    <Alert class=\"success\" show={(createPollTransactionHash != \"\" && createPollTransactionHash)?true: false} message={createPollTransactionHash} clearButton={true}/>\n                    <div className=\"input-group form-group\">\n                        <span className=\"input-group-addon\">Amount</span>\n                        <input type=\"number\" onChange={(e)=>setAmount(e.target.value)} className=\"form-control\" placeholder=\"Amount\" />\n                    </div>\n                    <div className=\"input-group form-group\">\n                        <span className=\"input-group-addon\">Poll Type</span>\n                        <SelectComponent listItem={pollTypes} setValue={setPollType}/>\n                    </div>\n                    <div className=\"button-group form-group\">\n                        <button className=\"btn btn-green\" onClick={createPoll} disabled={locked} >Create Poll</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default CreateNewPoll;","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\AuthorithyContract\\index.js",["989"],"const initialState = {\r\n    polls :[],\r\n    loadingPolls: false,\r\n    tried: false,\r\n    loadingPollsError: null,\r\n    //////////////////////////\r\n    processingCreatePoll: false,\r\n    msg:\"\",\r\n    createPollError : null,\r\n    /////////////////////////\r\n    processingVotePoll: false,\r\n    votingPollError : null,\r\n    /////////////////////////\r\n    processingPollingProcess: false,\r\n    pollingProcessError : null,\r\n};\r\n\r\nconst ACTION_TYPE  = {\r\n    LOADING_POLLS : 'LOADING_POLLS',\r\n    SET_POLLS : 'SET_POLLS',\r\n    POLL_ERROR : 'POLL_ERROR',\r\n    /////////////////////////////////////////////\r\n    PROCESSING_CREATE_POLL:'PROCESSING_CREATE_POLL',\r\n    CRETE_POLL_SUCCEED : 'CRETE_POLL_SUCCEED',\r\n    CREATE_POLL_ERROR : 'CREATE_POLL_ERROR',\r\n    ////////////////////////////////////////////\r\n    PROCESSING_VOTE_POLL:'PROCESSING_CREATE_POLL',\r\n    VOTE_POLL_SUCCEED : 'VOTE_POLL_SUCCEED',\r\n    VOTE_POLL_ERROR : 'VOTE_POLL_ERROR',\r\n    ////////////////////////////////////////////\r\n    PROCESSING_POLL_PROCESS:'PROCESSING_POLL_PROCESS',\r\n    POLL_PROCESS_SUCCEED : 'POLL_PROCESS_SUCCEED',\r\n    POLL_PROCESS_ERROR : 'POLL_PROCESS_ERROR',\r\n    ////////////////////////////////////////////\r\n    CLEAR_ERROR :'CLEAR_ERROR'\r\n}\r\n\r\n/***********************************/\r\n/************* Actions *************/\r\n/***********************************/\r\nexport const loadingPolls = () => {\r\n    return {\r\n        type: ACTION_TYPE.LOADING_POLLS,\r\n        payload: null\r\n    };\r\n};\r\n\r\nexport const setPolls = (polls) => {\r\n    return {\r\n        type: ACTION_TYPE.SET_POLLS,\r\n        payload: polls\r\n    };\r\n};\r\n\r\nexport const pollsError = (error) => {\r\n    return {\r\n        type: ACTION_TYPE.POLL_ERROR,\r\n        payload: error\r\n    };\r\n};\r\n\r\n////////////////////////////////////////\r\nexport const processingCreatePoll = () => {\r\n    return {\r\n        type: ACTION_TYPE.PROCESSING_CREATE_POLL,\r\n        payload: null\r\n    };\r\n};\r\n\r\nexport const createPollSucceed = (msg) => {\r\n    return {\r\n        type: ACTION_TYPE.CRETE_POLL_SUCCEED,\r\n        payload: msg\r\n    };\r\n};\r\n\r\nexport const createPollError = (error) => {\r\n    return {\r\n        type: ACTION_TYPE.CREATE_POLL_ERROR,\r\n        payload: error\r\n    };\r\n};\r\n\r\n////////////////////////////////////////\r\nexport const processingVotePoll = () => {\r\n    return {\r\n        type: ACTION_TYPE.PROCESSING_VOTE_POLL,\r\n        payload: null\r\n    };\r\n};\r\n\r\nexport const votePollSucceed = () => {\r\n    return {\r\n        type: ACTION_TYPE.VOTE_POLL_SUCCEED,\r\n        payload: null\r\n    };\r\n};\r\n\r\nexport const votePollError = (error) => {\r\n    return {\r\n        type: ACTION_TYPE.VOTE_POLL_ERROR,\r\n        payload: error\r\n    };\r\n}\r\n\r\n////////////////////////////////////////\r\nexport const processingPollProcess = () => {\r\n    return {\r\n        type: ACTION_TYPE.PROCESSING_POLL_PROCESS,\r\n        payload: null\r\n    };\r\n};\r\n\r\nexport const pollProcessSucceed = () => {\r\n    return {\r\n        type: ACTION_TYPE.POLL_PROCESS_SUCCEED,\r\n        payload: null\r\n    };\r\n};\r\n\r\nexport const pollProcessError = (error) => {\r\n    return {\r\n        type: ACTION_TYPE.POLL_PROCESS_ERROR,\r\n        payload: error\r\n    };\r\n}\r\n\r\n////////////////////////////////////////\r\nexport const clearError = () => {\r\n    return {\r\n        type: ACTION_TYPE.CLEAR_ERROR,\r\n        payload: null\r\n    };\r\n}\r\n\r\n/***********************************/\r\n/************* Reducers *************/\r\n/***********************************/\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.LOADING_POLLS:\r\n            return {\r\n                ...state,\r\n                loadingPolls: true,\r\n                tried: false,\r\n            };\r\n        case ACTION_TYPE.SET_POLLS:\r\n            return {\r\n                polls :action.payload,\r\n                loadingPolls: false,\r\n                loadingPollsError: null,\r\n                tried: true,\r\n                //////////////////////////\r\n                processingCreatePoll: false,\r\n                createPollError : null,\r\n                /////////////////////////\r\n                processingVotePoll: false,\r\n                votingPollError : null,\r\n            };\r\n        case ACTION_TYPE.POLL_ERROR:\r\n            return {\r\n                ...state,\r\n                tried: true,\r\n                loadingPolls: false,\r\n                votingPollError: action.payload\r\n            };\r\n        /////////////////////////////\r\n        case ACTION_TYPE.PROCESSING_CREATE_POLL:\r\n            return {\r\n                ...state,\r\n                //////////////////////////\r\n                msg:\"\",\r\n                processingCreatePoll: true,\r\n                createPollError : null,\r\n            };\r\n        case ACTION_TYPE.CRETE_POLL_SUCCEED:\r\n            return {\r\n                ...state,\r\n                msg:action.payload,\r\n                processingCreatePoll: false,\r\n                createPollError : null,\r\n            };\r\n        case ACTION_TYPE.CREATE_POLL_ERROR:\r\n            return {\r\n                ...state,\r\n                msg:\"\",\r\n                processingCreatePoll: false,\r\n                createPollError : action.payload,\r\n            };\r\n        /////////////////////////////\r\n        case ACTION_TYPE.PROCESSING_VOTE_POLL:\r\n            return {\r\n                ...state,\r\n                processingVotePoll: true,\r\n                votingPollError : null,\r\n            };\r\n        case ACTION_TYPE.VOTE_POLL_SUCCEED:\r\n            return {\r\n                ...state,\r\n                processingVotePoll: false,\r\n                votingPollError : null,\r\n            };\r\n        case ACTION_TYPE.VOTE_POLL_ERROR:\r\n            return {\r\n                ...state,\r\n                processingVotePoll: false,\r\n                votingPollError : action.payload,\r\n            };\r\n        /////////////////////////////\r\n        case ACTION_TYPE.PROCESSING_POLL_PROCESS:\r\n            return {\r\n                ...state,\r\n                processingPollingProcess: true,\r\n                votingPollError : null,\r\n            };\r\n        case ACTION_TYPE.POLL_PROCESS_SUCCEED:\r\n            return {\r\n                ...state,\r\n                processingPollingProcess: false,\r\n                votingPollError : null,\r\n            };\r\n        case ACTION_TYPE.POLL_PROCESS_ERROR:\r\n            return {\r\n                ...state,\r\n                msg:action.payload,\r\n                processingVotePoll: false,\r\n                votingPollError : action.payload,\r\n            };\r\n        /////////////////////////////\r\n        case ACTION_TYPE.CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                createPollError: null,\r\n                loadingPollsError: null,\r\n                votingPollError :null,\r\n                pollingProcessError: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\Setting\\index.js",["990"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Config\\localStore.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\SearchPage\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Profiling\\Components\\Kyc\\index.js",["991"],"import { Grid, Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport React, {Component} from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faFileImage} from '@fortawesome/free-solid-svg-icons'\r\nimport {CssTextField} from \"Components/Common/CustomInput\"\r\nimport './style.css'\r\nimport {processKyc} from 'Services/Setting'\r\n\r\nclass KYC extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            docType:\"ID\",\r\n            docDesc:\"Upload ID Card\",\r\n            number:\"\",\r\n            expiry:\"\",\r\n            identityProof: null,\r\n            addressPoof: null\r\n        }\r\n        this.docButtonStyle = {background:\"#0EAAA6\", color:\"#2f3339\"}\r\n        //binding func\r\n        this.changeDocType = this.changeDocType.bind(this)\r\n        this.handleFormChange = this.handleFormChange.bind(this)\r\n        this.handleUploadClick = this.handleUploadClick.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    changeDocType(event){\r\n        if(event === \"ID\"){\r\n            this.setState({\r\n                docType:\"ID\",\r\n                docDesc:\"Upload ID Card\"\r\n            })\r\n        }else if(event === \"Pass\"){\r\n            this.setState({\r\n                docType:\"Pass\",\r\n                docDesc:\"Upload Passport\"\r\n            })\r\n        }else{\r\n            this.setState({\r\n                docType:\"DrvL\",\r\n                docDesc:\"Upload Driving License\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFormChange(event){\r\n        this.setState({\r\n            [event.target.id] : event.target.value\r\n        })\r\n    }\r\n    handleUploadClick(event){\r\n        if(event.target.id === \"contained-doc-file\"){\r\n            this.setState({ identityProof: event.target.files[0] });\r\n        }else{\r\n            this.setState({ addressProof: event.target.files[0] });\r\n        }\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault()\r\n        if(true/*this.validateinput()*/){\r\n            let data = {\r\n                ...this.state\r\n            }\r\n            data['name'] = this.props.user.name\r\n            this.props.processKyc(data)\r\n        }\r\n    }\r\n\r\n    validateinput(){\r\n        if(this.state.number === \"\"){\r\n            console.log(\"Number must not be empty\")\r\n            return false\r\n        }else if(this.state.expiry === \"\"){\r\n            console.log(\"Expiry must not be empty\")\r\n            return false\r\n        }else if(this.state.identityProof === null){\r\n            console.log(\"Identity Image must not be empty\")\r\n            return false\r\n        }else if(this.state.addressPoof === null){\r\n            console.log(\"Address proof must not be empty\")\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <div className=\"dashboardTitle\">\r\n                <h2>KYC</h2>\r\n            </div>\r\n            <div style={{marginLeft:'2%'}}>\r\n                <Grid container spacing={1} direction={\"row\"}>\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <div class=\"docTypes\">\r\n                            <h2>Required documents</h2>\r\n                            {(this.props.user.kycStatus !== \"\") ?<h4 style={{color:'#f46b48'}}><br/> KYC STATUS : {this.props.user.kycStatus.toUpperCase() }</h4> : \"\"}\r\n                            <p className=\"subHeading\">KIND OF DOCUMENT</p>\r\n                            <Grid container spacing={0} direction={\"row\"}>\r\n                                <Grid item xs={4} sm={3} md={3}>\r\n                                    <Button className=\"docTypeBtn\" onClick={()=>this.changeDocType(\"ID\")} style={(this.state.docType === \"ID\")?this.docButtonStyle:{}}>Id Card</Button>\r\n                                </Grid>\r\n                                <Grid item xs={4} sm={3} md={3}>\r\n                                    <Button className=\"docTypeBtn\" size=\"medium\" onClick={()=>this.changeDocType(\"Pass\")} style={(this.state.docType === \"Pass\")?this.docButtonStyle:{}}>Passport</Button>\r\n                                </Grid>\r\n                                <Grid item xs={4} sm={3} md={3}>\r\n                                    <Button className=\"docTypeBtn\" size=\"medium\" onClick={()=>this.changeDocType(\"DrvL\")} style={(this.state.docType === \"DrvL\")?this.docButtonStyle:{}}>Driving License</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <div className=\"numFields\">\r\n                                <Grid container spacing={1} direction={\"row\"}>\r\n                                    <Grid item xs={8} sm={5} md={5}>\r\n                                        <CssTextField  id=\"number\" onChange={this.handleFormChange}   variant=\"outlined\" placeholder=\"34202-8850535-1\" autoFocus='true' label=\"Number\" />\r\n                                    </Grid>\r\n                                    <Grid item xs={8} sm={5} md={5}>\r\n                                        <CssTextField id=\"expiry\" onChange={this.handleFormChange}  variant=\"outlined\" placeholder=\"MM/YY\" label=\"Expiry Date\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                            <div className=\"hrDivder\"></div>\r\n                            <div className=\"uploadDoc\">\r\n                                <h3>{this.state.docDesc}</h3>\r\n                                <p className=\"subHeading\">We require both side of document</p>\r\n                                <Grid container spacing={1} direction={\"row\"}>\r\n                                    <Grid item xs={8} sm={10} md={10}>\r\n                                        <div className=\"uploadDocBtn\">\r\n                                            <input\r\n                                                accept=\"image/*\"\r\n                                                className=\"inputDoc\"\r\n                                                id=\"contained-doc-file\"\r\n                                                multiple\r\n                                                style={{display:'none'}}\r\n                                                type=\"file\"\r\n                                                onChange={this.handleUploadClick}\r\n                                            />\r\n                                            <label htmlFor=\"contained-doc-file\">\r\n                                                <Fab component=\"span\" className=\"buttonDoc\">\r\n                                                    <FontAwesomeIcon icon={faFileImage} size=\"lg\"  color=\"#0EAAA6\" />\r\n                                                </Fab>\r\n                                            </label>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <div className=\"uploadDoc\">\r\n                            <h2>Proof of address</h2>\r\n                            <h4>Upload documents</h4>\r\n                            <p className=\"subHeading\">Proof of address can be one of the following:</p>\r\n                            <p className=\"subHeading\">bank/credit card statement or utitlity bill.<a href=\"\" style={{color:'#f46b48'}}>More</a></p>\r\n                            <Grid container spacing={1} direction={\"row\"}>\r\n                                <Grid item xs={8} sm={10} md={10}>\r\n                                    <div className=\"uploadDocBtn\">\r\n                                        <input\r\n                                            accept=\"image/*\"\r\n                                            className=\"inputDoc\"\r\n                                            id=\"contained-address-file\"\r\n                                            multiple\r\n                                            style={{display:'none'}}\r\n                                            type=\"file\"\r\n                                            onChange={this.handleUploadClick}\r\n                                        />\r\n                                        <label htmlFor=\"contained-address-file\">\r\n                                            <Fab component=\"span\" className=\"buttonDoc\">\r\n                                                <FontAwesomeIcon icon={faFileImage} size=\"lg\"  color=\"#0EAAA6\" />\r\n                                            </Fab>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"submit\">\r\n                                        <Button\r\n                                            className=\"submit_btn\"\r\n                                            onClick={this.handleSubmit}\r\n                                            disabled={(this.props.user.kycStatus !== \"\")?true:false}\r\n                                        >Submit</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { processKyc}\r\n)(KYC)","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\ListProperty\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\index.js",["992"],"import * as React from 'react';\nimport './style.css';\n\n\nclass SelectComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showList: false,\n      itemSelected: 0\n    };\n  }\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n  handleClickOutside = (e) => {\n    if (\n      this.wrapperRef &&\n      !this.wrapperRef.contains(e.target) &&\n      this.state.showList\n    ) {\n      this.showToggle();\n    }\n  }\n  showToggle = () => {\n    if (this.state.showList) {\n      document.removeEventListener('mousedown', this.handleClickOutside);\n    } else {\n      document.addEventListener('mousedown', this.handleClickOutside);\n    }\n    this.setState({\n      showList: !this.state.showList\n    });\n  }\n\n  doSelect = (index) => {\n    this.setState({\n      itemSelected: index\n    });\n    this.props.setValue(index)\n    this.showToggle();\n  }\n\n  render() {\n    return (\n      <div\n        ref={(div) => { this.wrapperRef = div; }}\n        className={'selectComponent' + (this.state.showList ? ' active' : '')}\n      >\n        <div className=\"form-control dropdown-toggle\" onClick={this.showToggle}>\n          <span className=\"dropdown-label\">{this.props.listItem[this.state.itemSelected]}</span>\n          <span className=\"caret\" />\n        </div>\n        <ul className={`dropdown-menu dropdown-select${this.props.switchTop ? ' switchTop' : ''}`}>\n          {this.props.listItem.map((item, index) => {\n            return (\n              <li key={index} onClick={e => { this.doSelect(index); }}>\n                <a>{item}</a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default SelectComponent;","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\Common\\Alert\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\CryptoOrder\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\Common\\PlaceHolder\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Wallet\\index.js",["993"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\InvestmentPortfolio\\InvestmentPortfolioService.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\AdminDetail\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\Gallery.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\SearchPage\\Components\\SearchMap\\Components\\MiniHouse\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Wallet\\WalletService.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services_chain\\Wallet\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\NewWallet\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\Caption\\index.js",["994"],"import * as React from 'react';\r\nimport './style.css';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getTranslation, SupportedLanguage } from 'Services/Geo';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lang: state.setting.lang,\r\n});\r\n\r\nclass Caption extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"homeCaption\">\r\n        <div className=\"homeTitle\">{getTranslation(this.props.lang, 'Now it\\'s easy to invest in Real Estate more than ever')}</div>\r\n        <div className=\"homeSubtitle\">\r\n          {getTranslation(this.props.lang, 'With CrowdZap backed by Blockchain')}\r\n        </div>\r\n        <Link className=\"btn btn-black\" to=\"/search\">{getTranslation(this.props.lang, 'Learn More')}</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Caption);","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\Components\\SlideShow\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\LeftSide\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\UserMenu\\index.js",["995","996","997","998","999"],"import * as React from 'react';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from 'react-fa';\r\nimport LocalStore from \"../../Config/localStore\";\r\nimport {connect} from \"react-redux\";\r\nimport {processKyc} from \"../../Services/Setting\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAddressBook} from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass UserMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: false\r\n    };\r\n    this.wrapperRef = null\r\n  }\r\n  showToggle = () => {\r\n    if (this.state.showMenu) {\r\n      document.removeEventListener('click', this.handleClickOutside);\r\n    } else {\r\n      document.addEventListener('click', this.handleClickOutside);\r\n    }\r\n    this.setState({\r\n      showMenu: !this.state.showMenu\r\n    });\r\n    \r\n  }\r\n  handleClickOutside = (e) => {\r\n    if (\r\n      this.wrapperRef &&\r\n      !this.wrapperRef.contains(e.target) &&\r\n      this.state.showMenu\r\n    ) {\r\n      this.showToggle();\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  }\r\n  logout = () => {\r\n    /* Index code */\r\n    let localStore = new LocalStore()\r\n    localStore.clearToken()\r\n    localStore.clearClientId()\r\n    window.location.href = '/';\r\n    /* End test code */\r\n  }\r\n  render() {\r\n    return (\r\n      <div \r\n        className={`userMenuContainer${this.state.showMenu ? ' open' : ''}`} \r\n        onClick={this.showToggle}\r\n        ref={(div) => {this.wrapperRef = div; }}\r\n      >\r\n        <a href=\"#\" className=\"userHandler dropdown-toggle\" data-toggle=\"dropdown\">\r\n          <Icon name=\"user-o\" /><span className=\"counter\">5</span></a>\r\n        <a href=\"#\" className=\"headerUser dropdown-toggle\" data-toggle=\"dropdown\">\r\n          <img className=\"avatar headerAvatar pull-left\" src=\"http://mariusn.com/themes/reales/images/avatar-1.png\" />\r\n          <div className=\"userTop pull-left\">\r\n            <span className=\"headerUserName\">{(this.props.user)?this.props.user.name:\"Welcome\"}</span>\r\n            <Icon name=\"angle-down\" />\r\n          </div>\r\n          <div className=\"clearfix\" />\r\n        </a>\r\n        <div className=\"dropdown-menu pull-right userMenu\" role=\"menu\">\r\n          <div className=\"mobAvatar\">\r\n            <img\r\n              className=\"avatar mobAvatarImg\"\r\n              src=\"http://mariusn.com/themes/reales/images/avatar-1.png\"\r\n              alt=\"avatar\"\r\n            />\r\n            <div className=\"mobAvatarName\">{(this.props.user)?this.props.user.name:\"Welcome\"}</div>\r\n          </div>\r\n          <ul>\r\n            <li><Link to=\"/wallet\"><span className=\"walletIcon fa\" />Wallet</Link></li>\r\n            <li><Link to=\"/profiling/kyc\"><Icon name=\"cog\" />Kyc</Link></li>\r\n            <li><Link to=\"/profiling\"><Icon name=\"user\" />Profile</Link></li>\r\n            <li><Link to=\"/profiling/contacts\"><FontAwesomeIcon icon={faAddressBook} size={\"1x\"}  />  Contacts</Link></li>\r\n            <li><a href=\"#\">\r\n              <Icon name=\"bell-o\" />\r\n              Notifications\r\n              <span className=\"badge pull-right bg-red\">5</span>\r\n            </a></li>\r\n            <li className=\"divider\" />\r\n            <li><a href=\"#\" onClick={this.logout}><Icon name=\"power-off\" />Logout</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { processKyc}\r\n)(UserMenu)","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\RegisterLoginForm\\Components\\LoginForm\\index.js",["1000","1001","1002"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SingleHouse\\index.js",["1003","1004","1005"],"import * as React from 'react';\r\nimport './style.css';\r\nimport HouseDetailModel from \"../SelectComponent/Detail\";\r\nimport AdminHouseDetail from \"Components/SelectComponent/AdminDetail\"\r\nimport {useState} from \"react\";\r\nimport AdminSelectedItemDetailDialog from 'Components/SelectComponent/AdminDetail';\r\n\r\n\r\nfunction SingleHouse (props){\r\n  const [modalStatus, setModalStatus] = useState(false)\r\n\r\n    return (\r\n      <div className=\"singleHouse\">\r\n        <a className=\"card\" onClick={()=>setModalStatus(true)}>\r\n          <div className=\"figure\">\r\n            <img src={props.data.mainImg} alt=\"image\" />\r\n            <div className=\"figCaption\">\r\n              <div>$1,550,000</div>\r\n              <span className=\"icon-eye\"> 200</span>\r\n              <span className=\"icon-heart\"> 54</span>\r\n              <span className=\"icon-bubble\"> 13</span>\r\n            </div>\r\n            <div className=\"figView\"><span className=\"icon-eye\" /></div>\r\n            <div className=\"figType\">FOR SALE</div>\r\n          </div>\r\n          <h2>{props.data.title}</h2>\r\n          <div className=\"cardAddress\"><span className=\"icon-pointer\" />\r\n            {props.data.location.city}, {props.data.location.country},\r\n            </div>\r\n          <ul className=\"cardFeat\">\r\n            <li><span className=\"fa fa-moon-o\" /> {props.data.contractType}</li>\r\n            <li><span className=\"icon-drop\" /> {props.data.nodeName}</li>\r\n            <li><span className=\"icon-frame\" /> {new Date(props.data.endDate).toDateString()} Sq Ft</li>\r\n          </ul>\r\n        </a>\r\n        {\r\n          props.adminPage ? \r\n            <AdminSelectedItemDetailDialog status={modalStatus} changeStatus={setModalStatus} data={props.data}/>\r\n            :\r\n            <HouseDetailModel status={modalStatus} changeStatus={setModalStatus} data={props.data}/> \r\n        }               \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default SingleHouse;","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\AdminDetail\\Components\\description.js",["1006"],"import React from \"react\"\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCoins} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Paper} from \"@material-ui/core\";\r\nimport Divider from '@material-ui/core/Divider';\r\nexport default function Description(props){\r\n    return (\r\n        <div\r\n        role=\"tabpanel\"\r\n        hidden={props.value !== 0}\r\n        id={'simple-tabpanel-1'}\r\n        aria-labelledby={`simple-tab-1`}\r\n        className=\"listedPropDetail\"\r\n    >\r\n        <Grid container spacing={1} direction={\"row\"}>\r\n            <Grid item xs={12} sm={12} md={5} lg={5}>\r\n                <Paper elevation={10}>\r\n                <div>\r\n                    <img src={props.data.mainImg} style={{width:450, height:400}} className=\"img\"/>\r\n                </div>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={1} sm={1} md={1} lg={1}></Grid>\r\n            <Grid item xs={12} sm={12} md={5} lg={5}>\r\n                <div className=\"desc\">\r\n                    <Typography gutterBottom variant=\"h4\" className=\"totalInvest\">\r\n                        {props.data.title}\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"body1\" >\r\n                        TOTAL INVESTMENT :<FontAwesomeIcon size=\"small\" color='primary' icon={faCoins}/> 1222234\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"body1\">\r\n                        TOKEN PRICE :<FontAwesomeIcon size=\"small\" color='primary' icon={faCoins}/> 1222234 rel\r\n                    </Typography>\r\n                    <Divider variant='middle'/>\r\n                    <Typography variant=\"body2\">\r\n                        START DATE : {new Date(props.data.createdAt).toDateString()}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                        END AT : {new Date(props.data.endDate).toDateString()}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                        CREATOR : {props.data.nodeName}\r\n                    </Typography>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n                    \r\n    </div>\r\n    )\r\n}","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\AdminDetail\\Components\\investments.js",["1007"],"import React, {useEffect, useState} from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {getContracDetailFromChain} from \"Services/ListProperty\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from 'Components/Common/Alert'\r\nimport Loader from 'react-loader-spinner'\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCaretDown} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nexport default function Investments(props){\r\n    const classes = useStyles();\r\n\r\n    const [contractChainDetail, setContractChainDetail] = useState(null)\r\n    const [loading, setLoadingState] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        setLoadingState(true)\r\n        getContracDetailFromChain(props.data.contractAddress, responseHandler)\r\n    },[])\r\n\r\n    const responseHandler = (msg, data)=>{\r\n        setLoadingState(false)\r\n        if(msg === \"\"){\r\n            setContractChainDetail(data)\r\n        }else{\r\n            setErrorMessage(msg)\r\n        }\r\n    }\r\n\r\n    const createInvestDetails = ()=>(\r\n        contractChainDetail.basic_contract.registry.map((value, index)=>(\r\n            <>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                expandIcon={<FontAwesomeIcon icon={faCaretDown} color=\"#0eaaa6\"/> }\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                <div className={classes.column}>\r\n                    <Typography className={classes.heading}>Investor Address </Typography>\r\n                </div>\r\n                <div className={classes.column}>\r\n                    <Typography className={classes.secondaryHeading}>{value.investor_address}</Typography>\r\n                </div>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography variant=\"h6\">\r\n                        Amount {value.owned_token}\r\n                    </Typography>\r\n                </AccordionDetails>\r\n                <AccordionDetails>\r\n                    <Typography variant=\"h6\">\r\n                        Invested On {new Date(value.invested_date).toDateString()}\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <br/>\r\n            </>\r\n        )) \r\n    )\r\n\r\n\r\n    const createAccord = ()=>{\r\n        return(\r\n        <Accordion>\r\n            <AccordionSummary\r\n            expandIcon={<FontAwesomeIcon icon={faCaretDown} color=\"#0eaaa6\"/> }\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n            >\r\n            <div className={classes.column}>\r\n                <Typography className={classes.heading}>Address</Typography>\r\n            </div>\r\n            <div className={classes.column}>\r\n                <Typography className={classes.secondaryHeading}>---------------------</Typography>\r\n            </div>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n            <Typography>\r\n                -------------------------------------\r\n            </Typography>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n        )\r\n    }\r\n    return (\r\n        <div\r\n        role=\"tabpanel\"\r\n        hidden={props.value !== 1}\r\n        id={'simple-tabpanel-0'}\r\n        aria-labelledby={`simple-tab-0`}\r\n        className=\"listedPropDetail\"\r\n    >\r\n        <Typography gutterBottom variant=\"h4\" className=\"totalInvest\">\r\n            Investment Details\r\n        </Typography>\r\n        <Loader type=\"ThreeDots\" color=\"rgb(14, 170, 166)\" height={40} width={50} visible={loading}/>\r\n        <Alert show={errorMessage? true: false} class='danger' clearer={()=> setErrorMessage(null)} message={errorMessage}/>\r\n        {contractChainDetail &&\r\n            <div>\r\n                <Typography gutterBottom variant=\"h6\" className=\"totalInvest\">\r\n                    Total Sold Tokens {contractChainDetail.basic_contract.basic_detail.sold_token}\r\n                </Typography>\r\n                <br/>\r\n                <Typography gutterBottom variant=\"body1\" className=\"totalInvest\">\r\n                    Investment Details\r\n                </Typography>\r\n                <br/>\r\n                <div>\r\n                    {createInvestDetails()}\r\n                </div>\r\n            </div>\r\n        }\r\n        { !contractChainDetail && createAccord()}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor:blue\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(18),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    column: {\r\n        flexBasis: '33.33%',\r\n      },\r\n  }));","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\TO\\errorReducer.js",["1008"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\AuthorithyContractPage\\index.js",["1009","1010"],"import * as React from 'react';\nimport './style.css';\nimport {Icon} from \"react-fa\";\nimport Polls from \"./Components/Polls\";\nimport CreateNewPoll from \"./Components/CreatePoll\";\nimport Dashboard from \"Components/DashboardLayout\";\n\nclass AuthorityContract extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resultTab: 'polls'\n    };\n  }\n  changeResultTab = (tab) => {\n    if (tab !== this.state.resultTab) {\n      this.setState({\n        resultTab: tab\n      });\n    }\n  }\n  render() {\n    return (\n        <div className=\"AgentPage\">\n          <Dashboard>\n            <div className=\"agentWrapper\">\n              <div className=\"dashboardTitle\">\n                <h3>Authority Contract</h3>\n                <h5>Handle all minting and distribution process</h5>\n              </div>\n              <div className=\"searchAgentForm\">\n                <div className=\"resultTab\">\n                  <ul>\n                    <li\n                        className={this.state.resultTab === 'polls' ? 'active' : ''}\n                        onClick={(e) => this.changeResultTab('polls')}\n                    >\n                      <a><Icon name=\"map-o\" /> Polls</a>\n                    </li>\n                    <li\n                        className={this.state.resultTab === 'new_poll' ? 'active' : ''}\n                        onClick={(e) => this.changeResultTab('new_poll')}\n                    >\n                      <a><Icon name=\"th-list\" /> Create New Poll</a>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"resultBody\">\n                  {this.state.resultTab === 'polls' ? <Polls/> : <CreateNewPoll/>}\n                </div>\n              </div>\n            </div>\n          </Dashboard>\n        </div>\n    );\n  }\n}\n\nexport default AuthorityContract;","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Profiling\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Header\\index.js",["1011"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Profiling\\Components\\User\\index.js",["1012","1013","1014"],"import React,{useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUpload, faSave} from '@fortawesome/free-solid-svg-icons'\r\nimport { Fab, Tooltip } from '@material-ui/core';\r\nimport {useSelector} from \"react-redux\";\r\nimport {Button,TextField} from '@material-ui/core';\r\nimport image from \"assests/profile.svg\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(5),\r\n            width: theme.spacing(80),\r\n            height: theme.spacing(65),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function UserProfile() {\r\n    const [open, setOpen] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n    const user = useSelector(state => state.auth.user)\r\n    \r\n    const save = () => {\r\n        alert(\"Saved\")\r\n      }\r\n\r\n    const handleChange = function loadFile(event) {\r\n        if (event.target.files.length > 0) {\r\n            const file = URL.createObjectURL(event.target.files[0]);\r\n            setFile(file);\r\n        }\r\n    };\r\n\r\n    const toggleNavigation = () => {\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"dashboardTitle\">\r\n            <h2>User Profile</h2>\r\n        </div>\r\n        <div style={{display:\"flex\"}}>\r\n            <Paper elevation={3}  style={{backgroundColor:\"#e7e7e7\", borderRadius:10, marginLeft:\"24%\", marginTop:\"3%\", height:\"auto\", width:\"20%\"}}>\r\n                    <div style={{marginLeft:\"24%\", marginTop:\"5%\", width: \"60%\"}}>\r\n                        <br />\r\n                        <input type=\"file\" onChange={handleChange} id=\"upload\" accept=\"image/*\" style={{display: \"none\"}}/>\r\n                        <Avatar id=\"avatar\" src={file}\r\n                                style={{\r\n                                    marginTop:\"25px\",\r\n                                    height:\"170px\",\r\n                                    width:\"170px\",\r\n                                    \r\n                                }}\r\n                                >\r\n                                    <img src={image} alt=\"Profile Pic\" width=\"100%\" />\r\n                        </Avatar>\r\n                        <label htmlFor=\"upload\">\r\n                        <Tooltip title=\"Upload\" aria-label=\"Upload\" style={{marginRight:40}}>\r\n                            <IconButton style={{color:\"#b20000\", marginLeft:10}} aria-label=\"upload picture\" component=\"span\">\r\n                             <FontAwesomeIcon style={{margin:\"5px\"}} icon={faUpload} color=\"#0eaaa6\"/>\r\n                            </IconButton>\r\n                        </Tooltip> \r\n                        </label>\r\n                        <span style={{display:\"inline-block\"}}>\r\n\r\n                            <Tooltip title=\"Save\" aria-label=\"Save\">\r\n                                <IconButton style={{color:\"#458728\", marginLeft:26}}>\r\n                                <FontAwesomeIcon style={{margin:\"5px\"}} icon={faSave} color=\"#0eaaa6\"/>\r\n                                </IconButton>\r\n                            </Tooltip>  \r\n                        </span>\r\n                        <br />\r\n                    </div>\r\n                    <h3 style={{color:\"#575050\", textAlign:\"center\"}}>{(user)?user.name:\"\"}</h3>\r\n                </Paper>\r\n\r\n            <Paper elevation={3}  style={{backgroundColor:\"#0eaaa6\",marginTop:\"3%\", height:\"auto\", width:6}}></Paper>\r\n            \r\n            <Paper elevation={3}  style={{backgroundColor:\"#e7e7e7\", borderRadius:10, marginTop:\"3%\", height:\"auto\", width:\"34%\"}}>\r\n                <p style={{color: \"#575050\", fontSize:16, fontWeight:\"bolder\", margin:20, marginTop:60}}>Profile</p>\r\n                <form>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Name\"\r\n                    name=\"Name\"\r\n                    style={{backgroundColor:\"white\", borderRadius:5, width:\"58%\", marginLeft:\"4%\"}}\r\n                    // onChange={handleChange}\r\n                    required\r\n                    value={user.name}\r\n                    variant=\"outlined\"\r\n                />\r\n                <Button onClick={save} variant=\"contained\" color=\"primary\" style={{float:\"right\", marginRight:18, fontSize: 12, color: \"#575050\", padding: 10, borderRadius: 5, backgroundColor: \"#0eaaa6\" }}>\r\n                    Update Name\r\n                </Button>\r\n                </form>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Email\"\r\n                    name=\"Email\"\r\n                    style={{backgroundColor:\"white\", borderRadius:5, width:\"58%\", marginLeft:\"4%\", marginTop:\"2%\"}}\r\n                    // onChange={handleChange}\r\n                    required\r\n                    value={user.email}\r\n                    variant=\"outlined\"\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Role\"\r\n                    name=\"Role\"\r\n                    style={{backgroundColor:\"white\", borderRadius:5, width:\"58%\", marginLeft:\"4%\", marginTop:\"2%\"}}\r\n                    // onChange={handleChange}\r\n                    required\r\n                    value={user.role}\r\n                    variant=\"outlined\"\r\n                    disabled\r\n                />\r\n                <p style={{color: \"#575050\", fontSize:16, fontWeight:\"bolder\", margin:20}}> Change Password</p>\r\n                <form>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Enter New Password\"\r\n                    name=\"Enter New Password\"\r\n                    style={{backgroundColor:\"white\", borderRadius:5, width:\"58%\", marginLeft:\"4%\"}}\r\n                    // onChange={handleChange}\r\n                    required\r\n                    // value={user.name}\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Confirm New Password\"\r\n                    name=\"Confirm New Password\"\r\n                    style={{backgroundColor:\"white\", borderRadius:5, width:\"58%\", marginLeft:\"4%\", marginTop:\"2%\"}}\r\n                    // onChange={handleChange}\r\n                    required\r\n                    // value={user.name}\r\n                    variant=\"outlined\"\r\n                />\r\n                <Button onClick={save} variant=\"contained\" color=\"primary\" style={{marginTop:\"2%\", float:\"right\", marginRight:18, fontSize: 12, color: \"#575050\", padding: 10, borderRadius: 5, backgroundColor: \"#0eaaa6\" }}>\r\n                    Update Password\r\n                </Button>\r\n                </form>\r\n                <br/>\r\n                <br/>\r\n            </Paper>\r\n        </div>\r\n        </>        \r\n    );\r\n}","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Config\\HTTPService.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Config\\envConfig.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\GetInTouch\\index.js",["1015","1016","1017","1018"],"import * as React from 'react';\r\nimport './style.css';\r\n\r\nclass GetInTouch extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"getInTouch col-xs-12 col-sm-6 col-md-3 col-lg-3\">\r\n        <div className=\"touchTitle osLight\">\r\n          {this.props.children}\r\n        </div>\r\n        <ul className=\"mainList\">\r\n          <li className=\"footer-phone\"><span className=\"fa fa-phone\"/> 0349 9577345</li>\r\n          <li className=\"footer-address osLight\">\r\n            <p>Comsats University,</p>\r\n            <p>Islamabad\r\n            </p>\r\n          </li>\r\n          <li>\r\n          <a href=\"#\" className=\"btn btn-sm btn-icon btn-round btn-o btn-white\">\r\n            <span className=\"fa fa-facebook\"/>\r\n          </a> \r\n          <a href=\"#\" className=\"btn btn-sm btn-icon btn-round btn-o btn-white\">\r\n            <span className=\"fa fa-twitter\"/>\r\n          </a> \r\n          <a href=\"#\" className=\"btn btn-sm btn-icon btn-round btn-o btn-white\">\r\n            <span className=\"fa fa-google-plus\"/>\r\n          </a> \r\n          <a href=\"#\" className=\"btn btn-sm btn-icon btn-round btn-o btn-white\">\r\n            <span className=\"fa fa-linkedin\"/>\r\n          </a> \r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetInTouch;","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\BalanceHeader\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services_chain\\TransferCrypto\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\CryptoOrders\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\Key\\index.js",["1019"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\Overview.js",["1020"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Config\\constants.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\CryptoOrder\\index.js",["1021"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\SearchPage\\Components\\SearchForm\\index.js",["1022","1023","1024"],"import * as React from 'react';\r\nimport SelectComponent from 'Components/SelectComponent';\r\nimport SingleHouse from 'Components/SingleHouse';\r\nimport SearchMap from '../SearchMap';\r\nimport './style.css'\r\nimport { Icon } from 'react-fa';\r\nimport Loader from 'react-loader-spinner'\r\nimport {connect} from \"react-redux\";\r\nimport {getListedProps, getQueryListedProps} from \"Services/ListProperty\";\r\nimport SearchBar from \"Components/DashboardLayout/Components/Header/Components/SearchForm\"\r\nimport PlaceHolder from \"Components/Common/PlaceHolder\";\r\n\r\n\r\nclass SearchForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resultTab: 'list',\r\n      searching: false,\r\n      searchData: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //if there is no data and tried is false\r\n    if(!this.props.tried && !this.props.listedProps){\r\n      this.props.getListedProps()\r\n    }\r\n  }\r\n\r\n  changeResultTab = (tab) => {\r\n    if (tab !== this.state.resultTab) {\r\n      this.setState({\r\n        resultTab: tab\r\n      });\r\n    }\r\n  }\r\n  resultList = () => {\r\n    return (\r\n      <div className=\"resultsList\">\r\n        <div className=\"row\">\r\n          {this.props.listedProps.map((data, index) => {\r\n            return (\r\n              <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\" key={index}>\r\n                <SingleHouse data={data} admin={false}/>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  resultMap = () => {\r\n    return (\r\n      <div className=\"resultsMap\">\r\n        <SearchMap />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  searchResultList = () => {\r\n    return (\r\n      <div className=\"resultsList\">\r\n        <div className=\"row\">\r\n          {this.state.searchData.map((data, index) => {\r\n            return (\r\n              <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\" key={index}>\r\n                <SingleHouse data={data} admin={false}/>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  searchData = (queryValue)=>{\r\n    if(queryValue !== \"\"){\r\n      this.setState({\r\n        searching:true,\r\n        searchData:null\r\n      })\r\n      this.props.getQueryListedProps(queryValue, this.searchDataCB)\r\n    }else{\r\n      this.setState({\r\n        searching : false\r\n      })\r\n    }\r\n  }\r\n\r\n  searchDataCB = (data)=>{\r\n    if(data.length>0){\r\n        this.setState({\r\n          searchData: data\r\n      })\r\n    }    \r\n  }\r\n\r\n  render() {\r\n    let resultBody=null\r\n    if(this.state.searching){\r\n      //if user is searching and founded some data\r\n      if(this.state.searchData){\r\n        resultBody = this.searchResultList()\r\n      }\r\n    }else{\r\n      if(this.props.listedProps){\r\n        resultBody = this.state.resultTab === 'list' ? this.resultList() : this.resultMap()\r\n      }\r\n        //if listedProps null and also not in loading state\r\n      if(!this.props.listedProps && !this.props.loading){\r\n        resultBody = <PlaceHolder type=\"listedProperties\"/>\r\n      }\r\n    }\r\n    \r\n    \r\n    return (\r\n      <div className=\"searchForm\">\r\n        <div className=\"filterBox\">\r\n          <div className=\"row form-group\">\r\n            <div className=\"col-xs-12 col-sm-8 col-md-6 yearOfBirth\">\r\n              <h4>Ongoing Projects</h4>\r\n              <SearchBar search={this.searchData}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"resultTable\">\r\n          <div className=\"resultTab\">\r\n            <ul>\r\n              <li \r\n                className={this.state.resultTab === 'list' ? 'active' : ''}\r\n                onClick={(e) => this.changeResultTab('list')}\r\n              >\r\n                <a><Icon name=\"th-list\" /> Listing view</a>\r\n              </li>\r\n              <li\r\n                className={this.state.resultTab === 'map' ? 'active' : ''}\r\n                onClick={(e) => this.changeResultTab('map')}\r\n              >\r\n                <a><Icon name=\"map-o\" /> Map view</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"resultBody\">\r\n            <Loader\r\n                type=\"Grid\" color=\"#00A9A4\" height={80} width={80} visible={this.props.loading}\r\n            />\r\n            {resultBody}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.listedProps.loading,\r\n  listedProps: state.listedProps.listedProperties,\r\n  tried: state.listedProps.tried,\r\n  filterBy: state.listedProps.filterBy\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getListedProps, getQueryListedProps}\r\n)(SearchForm);","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\Common\\CustomInput\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\SelectComponent\\Detail\\Components\\Map.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\Components\\Details\\Components\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\SearchPage\\Components\\SearchMap\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\RegisterLoginForm\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\CryptoTransfer\\index.js",["1025"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\TokenizingPropertyPage\\index.js",["1026","1027","1028","1029","1030","1031","1032","1033"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\MyWallet\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\DashboardLayout\\Components\\Header\\index.js",["1034","1035"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\InvestmentPortfolio\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Setting\\SettingService.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\Wallet\\HDWallet.js",["1036","1037"],"import {makeCosmoshubPath, Secp256k1HdWallet} from \"@cosmjs/launchpad\";\r\nimport Wallet from \"./Wallet\";\r\nimport LocalStore from \"../../Config/localStore\";\r\n\r\nclass HDWallet extends Wallet{\r\n    constructor(mnemonic, accounts, index) {\r\n        super(mnemonic, accounts, index);\r\n    }\r\n\r\n    static async  build(mnemonic, password, tag, index) {\r\n        let newWallet;\r\n        if(mnemonic){\r\n            newWallet = await Secp256k1HdWallet.fromMnemonic(mnemonic)\r\n        }else{\r\n            newWallet = await  Secp256k1HdWallet.generate()\r\n        }\r\n        let account = await Wallet.init(newWallet.mnemonic ,tag, index)\r\n        //serialize and store wallet in localStore\r\n        HDWallet.setToStore(await HDWallet.serializeWallet(newWallet, password))\r\n        //create instance of class\r\n        return new HDWallet(newWallet.mnemonic, account, index)\r\n    }\r\n\r\n    static async  serializeWallet(wallet, password){\r\n        return await wallet.serialize(password)\r\n    }\r\n\r\n    static setToStore(serialized){\r\n        let localStore = new LocalStore()\r\n        localStore.setSerializedWallet(serialized)\r\n    }\r\n}\r\n\r\nexport default HDWallet","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Investments\\index.js",["1038","1039"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Investments\\Components\\index.js",["1040","1041","1042"],"import React, {useState} from 'react';\r\nimport './style.css';\r\nimport { useSelector} from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Icon} from \"react-fa\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoins, faCaretDown} from '@fortawesome/free-solid-svg-icons'\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SelectComponent from \"Components/SelectComponent\";\r\nimport Alert from \"Components/Common/Alert\";\r\nimport Loader from 'react-loader-spinner';\r\nimport {transferBasicTokens} from \"Services_chain/Contracts\"\r\n\r\nexport default function InvestmentRecord (props){\r\n    const classes = useStyles();\r\n\r\n    const locked = useSelector((state)=> state.wallet.walletLocked)\r\n    const user = useSelector(state => state.auth.user)\r\n\r\n    const [transfered, setTransfered] = useState(false)\r\n    const [processing, setTried] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    const [selectedAccount, setSelectedAccount] = useState(0)\r\n\r\n    const transferToken = (e)=>{\r\n      e.preventDefault()\r\n      let transfer = {\r\n        investmentId: props.data._id,\r\n        to : props.contacts[selectedAccount].address,\r\n        toId: props.contacts[selectedAccount].contactId,\r\n        senderName: user.name,\r\n        contractAddress: props.data.contractAddress,\r\n        amount: props.data.amount\r\n      }\r\n      transferBasicTokens(transfer, responsehandler)\r\n    }\r\n\r\n    const responsehandler = (msg, data)=>{\r\n      if(msg === \"\"){\r\n        setTransfered(true)\r\n      }else{\r\n        setError(true)\r\n      }\r\n    }\r\n\r\n    const getContactsUI = ()=>{\r\n      let contacts = []\r\n      props.contacts.forEach((value, index)=>{\r\n        contacts.push(value.name +\" (\"+ value.email+\")\")\r\n      })\r\n      return(\r\n        <>\r\n        <div className=\"input-group form-group\">\r\n          <span className=\"input-group-addon\">Account</span>\r\n          <SelectComponent listItem={contacts} setValue={setSelectedAccount}/>          \r\n        </div>\r\n        <div className=\"button-group form-group\">\r\n          <button className=\"btn btn-green\" onClick={(e)=>transferToken(e)} disabled={locked} >Send Token</button>\r\n        </div> \r\n       </>\r\n      )\r\n    }\r\n\r\n    return(\r\n      <>\r\n      <Accordion className=\"investRecord\">          \r\n          <AccordionSummary\r\n          expandIcon={<FontAwesomeIcon icon={faCaretDown} color=\"#0eaaa6\"/> }\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n          >\r\n          <div className={classes.column}>\r\n              <Typography className={classes.heading}>Contract Address</Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n              <Typography className={classes.secondaryHeading}>{props.data.contractAddress}</Typography>\r\n          </div>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n              <FontAwesomeIcon style={{margin:\"5px\"}} icon={faCoins} color=\"#0eaaa6\"/>\r\n              <Typography variant=\"h6\">\r\n                  Amount {props.data.amount}\r\n              </Typography>\r\n          </AccordionDetails>\r\n          <AccordionDetails>\r\n              <Typography variant=\"body1\">\r\n                  Invested On {new Date(props.data.createdAt).toDateString()}\r\n              </Typography>            \r\n          </AccordionDetails>\r\n          <AccordionDetails style={{paddingBottom:\"3%\"}}>            \r\n            <div className={classes.column, classes.helper}>\r\n              <Loader type=\"ThreeDots\" color=\"#00A9A4\" height={40} width={60} visible={processing}/>\r\n              <Alert show={(error)?true: false} class=\"danger\" message=\"Token transfered failed\"  clearer={()=> setError(false)}/> \r\n              <Alert show={(transfered)?true: false} class=\"success\" message=\"Token transfered successfully\" clearer={()=> setTransfered(false)} /> \r\n              <Typography variant=\"body1\">\r\n                Select your contact to  send all tokens to:\r\n                <br/>\r\n                <br />\r\n                {\r\n                  getContactsUI()\r\n                }\r\n              </Typography>\r\n            </div>\r\n          </AccordionDetails>        \r\n      </Accordion>\r\n      <br/>\r\n      </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor:'#0eaaa6'\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n  },\r\n  column: {\r\n      flexBasis: '33.33%',\r\n    },\r\n  helper: {\r\n      borderLeft: `2px solid ${theme.palette.divider}`,\r\n      padding: theme.spacing(1, 2),\r\n    },\r\n}));","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Profiling\\Components\\Contacts\\index.js",["1043","1044","1045","1046"],"import React, {useState, useEffect} from \"react\";\r\nimport Contact from \"./Components\"\r\nimport {useSelector} from \"react-redux\"\r\nimport './style.css'\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Loader from 'react-loader-spinner';\r\nimport Alert from \"Components/Common/Alert\";\r\nimport {getUserContacts, addNewUserContacts} from \"Services/User\"\r\n\r\nfunction UserContacts(props) {\r\n    const [contacts, setContacts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n\r\n    const [addReqStatus, setAddReqStatus] = useState(null)\r\n    const [addLoading, setAddLoading] = useState(false)\r\n    const [addError, setAddError] = useState(null)\r\n    \r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        getUserContacts(responseHandler)\r\n    }, [])\r\n\r\n    const refresh = (e)=>{\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        getUserContacts(responseHandler)\r\n    }\r\n    const responseHandler = (msg, data)=>{\r\n        setLoading(false)\r\n        if(msg == \"\"){\r\n            setContacts(data)\r\n        }else{\r\n            setError(msg)\r\n        }\r\n    }\r\n    \r\n    const getContactsUI =()=>{\r\n        return(contacts.map((value, index)=>(\r\n            <Contact index={1} data={value}/>\r\n        )))               \r\n    }\r\n\r\n    const addNewContact = (e)=>{\r\n        e.preventDefault()\r\n        let contact = {\r\n            name: name,\r\n            email: email,\r\n            address, address,\r\n        }\r\n        setAddLoading(true)\r\n        addNewUserContacts(contact, responseAddContactHandler)\r\n    }\r\n\r\n    const responseAddContactHandler = (msg)=>{\r\n        console.log(msg)\r\n        setAddLoading(false)\r\n        if(msg == \"\"){\r\n            setAddReqStatus(true)\r\n        }else{\r\n            setAddError(msg)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n           <div className=\"dashboardTitle\">\r\n              <h3>Contacts</h3>\r\n           </div>\r\n           <div className=\"details mainContacts\">\r\n               <Paper style={{padding:\"3%\", paddingRight:\"10%\", paddingLeft:\"10%\", marginRight:\"15%\", marginLeft:\"15%\"}} elevation=\"3\">\r\n                <form>\r\n                    <Loader type=\"Dots\" color=\"#00A9A4\" height={60} width={60} visible={addLoading}/>      \r\n                    <Alert show={(addReqStatus)?true:false} class=\"success\" message=\"Contact Added successfully\" clearer={()=>setAddReqStatus(null)} />                                   \r\n                    <Alert show={(addError)?true:false} class=\"danger\" message={setAddError} clearer={()=>setAddError(null)} /> \r\n                    <div className=\"input-group form-group\">\r\n                        <span className=\"input-group-addon\">Name</span>\r\n                        <input type=\"text\" onChange={(e)=>setName(e.target.value)} className=\"form-control\" placeholder=\"Name\" />\r\n                    </div>\r\n                    <div className=\"input-group form-group\">\r\n                        <span className=\"input-group-addon\">Email</span>\r\n                        <input type=\"text\" onChange={(e)=>setEmail(e.target.value)} className=\"form-control\" placeholder=\"Email\" />\r\n                    </div>\r\n                    <div className=\"input-group form-group\">\r\n                        <span className=\"input-group-addon\">Address</span>\r\n                        <input type=\"text\" onChange={(e)=>setAddress(e.target.value)} className=\"form-control\" placeholder=\"Address\" />\r\n                    </div>\r\n                    <button className=\"btn btn-green btn-lg\"\r\n                            style={{marginBottom:\"2%\", marginLeft:'10px'}}\r\n                            onClick={(e)=>addNewContact(e)}\r\n                        >\r\n                        Add New Contact\r\n                        </button>\r\n                </form>\r\n                </Paper>\r\n                <br/>\r\n                <br/>\r\n                <Loader type=\"Dots\" color=\"#00A9A4\" height={60} width={60} visible={loading}/>                                        \r\n                <Alert show={(error)?true:false} class=\"danger\" message={error} />   \r\n                        <button className=\"btn btn-green btn-lg\"\r\n                            style={{marginBottom:\"2%\", marginLeft:'10px'}}\r\n                            onClick={(e)=>(refresh(e))}\r\n                        >\r\n                        Refresh\r\n                        </button>   \r\n                {getContactsUI()}\r\n           </div>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default UserContacts","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Services\\User\\UserService.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\AdminKYC\\index.js",["1047"],"import React, {useEffect} from 'react';\r\nimport './style.css';\r\nimport Dashboard from 'Components/DashboardLayout';\r\nimport KYCRequest from './Components';\r\n\r\nclass AdminKYCPage extends React.Component{    \r\n  render() {\r\n    return (\r\n      <div className=\"searchPage\">\r\n        <Dashboard>\r\n          <div className=\"dashboardTitle\">\r\n            <h3>KYC REQUESTS</h3>\r\n          </div>\r\n          <div className=\"details\">\r\n            <KYCRequest />\r\n          </div>\r\n        </Dashboard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminKYCPage;","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\AdminKYC\\Components\\index.js",["1048","1049","1050","1051","1052","1053","1054","1055"],"import React,{useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {useSelector} from \"react-redux\";\r\nimport {Button,TextField} from '@material-ui/core';\r\nimport pic from \"assests/profile.svg\"\r\nimport {getAllKYCRequests, processKYCRequest} from \"Services/Setting\"\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport Alert from \"Components/Common/Alert\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faTimes, faSpinner} from '@fortawesome/free-solid-svg-icons'\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor:\"white\", \r\n        borderRadius:10, \r\n        height:350,\r\n    },\r\n    textField: {\r\n        backgroundColor:\"white\", \r\n        borderRadius:5, \r\n        width:\"80%\", \r\n        marginLeft:\"4%\", \r\n        marginTop:\"4%\"\r\n    },\r\n    btn: {\r\n        float:\"right\",\r\n        fontSize: 12, \r\n        color: \"primary\", \r\n        padding: 10, \r\n        borderRadius: 5,  \r\n        marginTop:\"5%\", \r\n        marginRight:\"4%\"\r\n    } \r\n}));\r\n\r\nexport default function KYCRequest() {\r\n    const classes = useStyles();\r\n\r\n    const [kycRequest, setKYCRequests] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const [kycProcessRequestSucceed, setKycProcessRequestSucceed] = useState(false)\r\n    const [processing, setProcessing] = useState(false)\r\n    const [processError, setProcessError] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        getAllKYCRequests(responseHandler)\r\n    },[])\r\n\r\n    const refresh = (e)=>{\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        getAllKYCRequests(responseHandler)\r\n    }\r\n    const responseHandler = (msg, data)=>{\r\n        setLoading(false)\r\n        if(msg == \"\"){\r\n            setKYCRequests(data)\r\n        }else{\r\n            setError(msg)\r\n        }\r\n    }\r\n\r\n    const processRequest = (request, status)=>{\r\n        let data ={\r\n            requestId: request._id,\r\n            status: status\r\n        }\r\n        processKYCRequest(responseProcessKYCHandler, data)\r\n    }\r\n\r\n    const responseProcessKYCHandler = (msg)=>{\r\n        setProcessing(false)\r\n        if(msg == \"\"){\r\n            setKycProcessRequestSucceed(true)\r\n        }else{\r\n            setProcessError(true)\r\n        }\r\n    }\r\n\r\n    const getKycRequestsUI =()=>{\r\n        console.log(\"called\")\r\n        return(\r\n            kycRequest.map((value, key)=>(\r\n                <div style={{display:\"flex\"}}>\r\n                    <Paper className={classes.paper} elevation={3}  style={{marginLeft:\"20%\", marginTop:\"3%\", width:\"20%\"}}>\r\n                        <br />\r\n                        <Paper className={classes.paper} elevation={3} style={{width:\"70%\", height:\"40%\", margin:\"auto\"}}>\r\n                            <img style={{borderRadius:10}} width=\"100%\" height=\"100%\" src={value.doc}/>\r\n                        </Paper>\r\n                        <br />\r\n                        <Paper className={classes.paper} elevation={3} style={{width:\"70%\", height:\"40%\", margin:\"auto\"}}>\r\n                            <img style={{borderRadius:10}} width=\"100%\" height=\"100%\" src={value.addressProof}/>\r\n                        </Paper>\r\n                        <br />\r\n                    </Paper>\r\n\r\n                    <Paper elevation={3}  style={{backgroundColor:\"#0EAAA6\",marginTop:\"3%\", width:6}}></Paper>\r\n                    \r\n                    <Paper className={classes.paper} elevation={3}  style={{marginTop:\"3%\", width:\"40%\"}}>\r\n                     \r\n                        \r\n                        <div style={{margin:\"4%\"}}>\r\n                            {\r\n                                value.status === \"rejected\"?\r\n                                    <Chip\r\n                                    icon={<FontAwesomeIcon icon={faTimes}  color=\"#0eaaa6\"/>}\r\n                                    label=\"Rejected\"                                \r\n                                    color=\"rgb(220 20 60)\"\r\n                                    />\r\n                                :\r\n                                 value.status === \"pending\"?\r\n                                    <Chip\r\n                                    icon={<FontAwesomeIcon icon={faSpinner}  color=\"#0eaaa6\"/>}\r\n                                    label=\"Pending\"                                \r\n                                    color=\"rgb(173 152 7)\"\r\n                                    />\r\n                                    : \r\n                                    <Chip\r\n                                    icon={<FontAwesomeIcon icon={faCheck}  color=\"#0eaaa6\"/>}\r\n                                    label=\"Accepted\"                                \r\n                                    color=\"#0eaa28\"\r\n                                    backgroundColor=\"#0eaa28\"\r\n                                    />\r\n                        }\r\n                            \r\n                        </div>\r\n                        <div style={{margin:\"7%\"}}>\r\n                            <Typography gutterBottom variant=\"h5\" className=\"totalInvest\">\r\n                               Name : {value.name}\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"body1\" >\r\n                                Identity Card Number : {value.number}  \r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"body1\">\r\n                                Card Expiry Date : {value.expiry} \r\n                            </Typography>\r\n                        </div>\r\n                        <br />                       \r\n                        <Button \r\n                            className={classes.btn} \r\n                            onClick={()=> processRequest(value, \"accepted\")} \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            style={{ backgroundColor: \"#0EAAA6\"}}\r\n                            >\r\n                            Accept\r\n                        </Button>\r\n                        <Button \r\n                            className={classes.btn} \r\n                            onClick={()=> processRequest(value, \"rejected\")} \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            style={{ backgroundColor: \"crimson\"}}\r\n                            >\r\n                            Reject\r\n                        </Button>\r\n                    </Paper>\r\n                </div>\r\n            ))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{marginTop:\"2%\"}}>                                                \r\n            <Alert show={(error)?true:false} class=\"danger\" message={error} clearer={()=>setError(null)} /> \r\n            <Loader type=\"Dots\" color=\"#00A9A4\" height={60} width={60} visible={loading}/>\r\n\r\n            <Alert show={(processError)?true:false} class=\"danger\" message={\"Failed to proccess kyc request\"} clearer={()=>setProcessError(false)} /> \r\n            <Alert show={(kycProcessRequestSucceed)?true:false} class=\"success\" message={\"Successfully proccess kyc request\"} clearer={()=>setKycProcessRequestSucceed(false)} /> \r\n            <Loader type=\"Dots\" color=\"#00A9A4\" height={60} width={60} visible={processing}/>\r\n\r\n            <button className=\"btn btn-green btn-lg\"\r\n                style={{marginBottom:\"2%\", marginLeft:'10px'}}\r\n                onClick={(e)=>(refresh(e))}\r\n            >\r\n            Refresh\r\n            </button>   \r\n            {getKycRequestsUI()}\r\n            <br/>\r\n            <br/>\r\n       </div>\r\n    );\r\n}","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Profiling\\Components\\Contacts\\Components\\index.js",["1056","1057","1058"],"import * as React from 'react';\r\nimport './style.css';\r\nimport { useSelector} from \"react-redux\";\r\nimport {Icon} from \"react-fa\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoins, faCaretDown} from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Contact (props){\r\n    const walletInstance = useSelector((state)=> state.wallet.walletObj)\r\n\r\n    return (\r\n      <div className=\"contactsUs\" id={props.index}>\r\n        <div className=\"avatar headerAvatar\">\r\n            <FontAwesomeIcon icon={faCoins} size={\"2x\"}  color=\"#0eaaa6\"/>  \r\n        </div>\r\n        <div className=\"info\">\r\n          <div className=\"name\">Name {props.data.name}</div>\r\n          <div className=\"title\">Email {props.data.email}</div>\r\n          <div className=\"title\">Address {props.data.address}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n}","D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Redux\\User\\index.js",["1059"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\WalletPage\\Components\\SendForm\\index.js",["1060"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\HomePage\\Components\\Footer\\Components\\Subscribe\\index.js",["1061","1062"],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\LanguageSelector\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Components\\InputMap\\Components\\Marker\\index.js",[],"D:\\CrowdZap_Final_Development\\crowdzapadmin\\src\\Scenes\\Complain\\index.js",["1063","1064","1065","1066","1067","1068","1069","1070","1071","1072"],{"ruleId":"1073","replacedBy":"1074"},{"ruleId":"1075","replacedBy":"1076"},{"ruleId":"1077","severity":1,"message":"1078","line":1,"column":17,"nodeType":"1079","messageId":"1080","endLine":1,"endColumn":26},{"ruleId":"1073","replacedBy":"1081"},{"ruleId":"1075","replacedBy":"1082"},{"ruleId":"1083","severity":1,"message":"1084","line":27,"column":1,"nodeType":"1085","endLine":42,"endColumn":2},{"ruleId":"1083","severity":1,"message":"1084","line":66,"column":1,"nodeType":"1085","endLine":133,"endColumn":2},{"ruleId":"1073","replacedBy":"1086"},{"ruleId":"1075","replacedBy":"1087"},{"ruleId":"1083","severity":1,"message":"1084","line":37,"column":1,"nodeType":"1085","endLine":60,"endColumn":2},{"ruleId":"1083","severity":1,"message":"1084","line":120,"column":1,"nodeType":"1085","endLine":205,"endColumn":2},{"ruleId":"1073","replacedBy":"1088"},{"ruleId":"1075","replacedBy":"1089"},{"ruleId":"1077","severity":1,"message":"1090","line":5,"column":8,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":17},{"ruleId":"1091","severity":1,"message":"1092","line":33,"column":73,"nodeType":"1093","messageId":"1094","endLine":33,"endColumn":75},{"ruleId":"1095","severity":1,"message":"1096","line":15,"column":83,"nodeType":"1097","endLine":15,"endColumn":87},{"ruleId":"1095","severity":1,"message":"1096","line":16,"column":83,"nodeType":"1097","endLine":16,"endColumn":87},{"ruleId":"1077","severity":1,"message":"1098","line":8,"column":26,"nodeType":"1079","messageId":"1080","endLine":8,"endColumn":43},{"ruleId":"1077","severity":1,"message":"1099","line":9,"column":8,"nodeType":"1079","messageId":"1080","endLine":9,"endColumn":24},{"ruleId":"1095","severity":1,"message":"1100","line":47,"column":21,"nodeType":"1097","endLine":47,"endColumn":83},{"ruleId":"1095","severity":1,"message":"1100","line":52,"column":21,"nodeType":"1097","endLine":52,"endColumn":80},{"ruleId":"1095","severity":1,"message":"1100","line":67,"column":9,"nodeType":"1097","endLine":71,"endColumn":10},{"ruleId":"1077","severity":1,"message":"1101","line":1,"column":69,"nodeType":"1079","messageId":"1080","endLine":1,"endColumn":79},{"ruleId":"1095","severity":1,"message":"1100","line":21,"column":31,"nodeType":"1097","endLine":21,"endColumn":43},{"ruleId":"1073","replacedBy":"1102"},{"ruleId":"1075","replacedBy":"1103"},{"ruleId":"1104","severity":1,"message":"1105","line":23,"column":33,"nodeType":"1097","endLine":23,"endColumn":117},{"ruleId":"1095","severity":1,"message":"1100","line":55,"column":9,"nodeType":"1097","endLine":55,"endColumn":84},{"ruleId":"1095","severity":1,"message":"1100","line":57,"column":9,"nodeType":"1097","endLine":57,"endColumn":83},{"ruleId":"1104","severity":1,"message":"1105","line":58,"column":11,"nodeType":"1097","endLine":58,"endColumn":119},{"ruleId":"1095","severity":1,"message":"1100","line":78,"column":17,"nodeType":"1097","endLine":78,"endColumn":29},{"ruleId":"1095","severity":1,"message":"1100","line":84,"column":17,"nodeType":"1097","endLine":84,"endColumn":51},{"ruleId":"1095","severity":1,"message":"1100","line":42,"column":11,"nodeType":"1097","endLine":42,"endColumn":164},{"ruleId":"1106","severity":1,"message":"1107","line":71,"column":21,"nodeType":"1108","endLine":71,"endColumn":42},{"ruleId":"1095","severity":1,"message":"1100","line":121,"column":25,"nodeType":"1097","endLine":121,"endColumn":81},{"ruleId":"1095","severity":1,"message":"1096","line":137,"column":19,"nodeType":"1097","endLine":140,"endColumn":20},{"ruleId":"1077","severity":1,"message":"1109","line":2,"column":8,"nodeType":"1079","messageId":"1080","endLine":2,"endColumn":23},{"ruleId":"1095","severity":1,"message":"1096","line":134,"column":17,"nodeType":"1097","endLine":134,"endColumn":20},{"ruleId":"1095","severity":1,"message":"1096","line":140,"column":17,"nodeType":"1097","endLine":140,"endColumn":20},{"ruleId":"1095","severity":1,"message":"1096","line":57,"column":17,"nodeType":"1097","endLine":57,"endColumn":20},{"ruleId":"1077","severity":1,"message":"1110","line":8,"column":8,"nodeType":"1079","messageId":"1080","endLine":8,"endColumn":18},{"ruleId":"1095","severity":1,"message":"1100","line":29,"column":9,"nodeType":"1097","endLine":29,"endColumn":86},{"ruleId":"1083","severity":1,"message":"1084","line":83,"column":1,"nodeType":"1085","endLine":158,"endColumn":2},{"ruleId":"1077","severity":1,"message":"1109","line":7,"column":8,"nodeType":"1079","messageId":"1080","endLine":7,"endColumn":23},{"ruleId":"1077","severity":1,"message":"1111","line":9,"column":9,"nodeType":"1079","messageId":"1080","endLine":9,"endColumn":28},{"ruleId":"1077","severity":1,"message":"1112","line":14,"column":7,"nodeType":"1079","messageId":"1080","endLine":14,"endColumn":12},{"ruleId":"1077","severity":1,"message":"1113","line":23,"column":11,"nodeType":"1079","messageId":"1080","endLine":23,"endColumn":20},{"ruleId":"1077","severity":1,"message":"1114","line":31,"column":12,"nodeType":"1079","messageId":"1080","endLine":31,"endColumn":20},{"ruleId":"1077","severity":1,"message":"1115","line":31,"column":22,"nodeType":"1079","messageId":"1080","endLine":31,"endColumn":33},{"ruleId":"1077","severity":1,"message":"1116","line":32,"column":12,"nodeType":"1079","messageId":"1080","endLine":32,"endColumn":19},{"ruleId":"1095","severity":1,"message":"1100","line":158,"column":85,"nodeType":"1097","endLine":158,"endColumn":122},{"ruleId":"1095","severity":1,"message":"1100","line":155,"column":99,"nodeType":"1097","endLine":155,"endColumn":136},{"ruleId":"1077","severity":1,"message":"1117","line":4,"column":5,"nodeType":"1079","messageId":"1080","endLine":4,"endColumn":23},{"ruleId":"1077","severity":1,"message":"1118","line":4,"column":25,"nodeType":"1079","messageId":"1080","endLine":4,"endColumn":40},{"ruleId":"1077","severity":1,"message":"1119","line":4,"column":42,"nodeType":"1079","messageId":"1080","endLine":4,"endColumn":55},{"ruleId":"1077","severity":1,"message":"1120","line":5,"column":5,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":26},{"ruleId":"1077","severity":1,"message":"1121","line":5,"column":28,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":46},{"ruleId":"1077","severity":1,"message":"1122","line":5,"column":47,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":63},{"ruleId":"1077","severity":1,"message":"1123","line":1,"column":9,"nodeType":"1079","messageId":"1080","endLine":1,"endColumn":26},{"ruleId":"1124","severity":1,"message":"1125","line":5,"column":5,"nodeType":"1126","messageId":"1127","endLine":7,"endColumn":6},{"ruleId":"1095","severity":1,"message":"1100","line":62,"column":11,"nodeType":"1097","endLine":62,"endColumn":87},{"ruleId":"1095","severity":1,"message":"1100","line":69,"column":15,"nodeType":"1097","endLine":69,"endColumn":54},{"ruleId":"1095","severity":1,"message":"1100","line":74,"column":17,"nodeType":"1097","endLine":74,"endColumn":29},{"ruleId":"1104","severity":1,"message":"1105","line":75,"column":19,"nodeType":"1097","endLine":75,"endColumn":114},{"ruleId":"1095","severity":1,"message":"1100","line":85,"column":17,"nodeType":"1097","endLine":85,"endColumn":29},{"ruleId":"1095","severity":1,"message":"1100","line":98,"column":17,"nodeType":"1097","endLine":98,"endColumn":29},{"ruleId":"1095","severity":1,"message":"1100","line":109,"column":17,"nodeType":"1097","endLine":109,"endColumn":29},{"ruleId":"1095","severity":1,"message":"1100","line":120,"column":13,"nodeType":"1097","endLine":120,"endColumn":47},{"ruleId":"1128","severity":1,"message":"1129","line":45,"column":7,"nodeType":"1097","endLine":45,"endColumn":56},{"ruleId":"1095","severity":1,"message":"1100","line":109,"column":11,"nodeType":"1097","endLine":113,"endColumn":12},{"ruleId":"1128","severity":1,"message":"1129","line":122,"column":7,"nodeType":"1097","endLine":122,"endColumn":54},{"ruleId":"1077","severity":1,"message":"1130","line":5,"column":9,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":15},{"ruleId":"1083","severity":1,"message":"1084","line":36,"column":1,"nodeType":"1085","endLine":58,"endColumn":2},{"ruleId":"1095","severity":1,"message":"1096","line":39,"column":23,"nodeType":"1097","endLine":39,"endColumn":26},{"ruleId":"1095","severity":1,"message":"1096","line":45,"column":23,"nodeType":"1097","endLine":45,"endColumn":26},{"ruleId":"1077","severity":1,"message":"1123","line":1,"column":9,"nodeType":"1079","messageId":"1080","endLine":1,"endColumn":26},{"ruleId":"1124","severity":1,"message":"1125","line":6,"column":5,"nodeType":"1126","messageId":"1127","endLine":8,"endColumn":6},{"ruleId":"1128","severity":1,"message":"1129","line":10,"column":9,"nodeType":"1097","endLine":10,"endColumn":27},{"ruleId":"1095","severity":1,"message":"1100","line":15,"column":13,"nodeType":"1097","endLine":15,"endColumn":72},{"ruleId":"1077","severity":1,"message":"1131","line":2,"column":9,"nodeType":"1079","messageId":"1080","endLine":2,"endColumn":26},{"ruleId":"1083","severity":1,"message":"1084","line":139,"column":1,"nodeType":"1085","endLine":241,"endColumn":2},{"ruleId":"1077","severity":1,"message":"1132","line":8,"column":24,"nodeType":"1079","messageId":"1080","endLine":8,"endColumn":48},{"ruleId":"1077","severity":1,"message":"1111","line":9,"column":9,"nodeType":"1079","messageId":"1080","endLine":9,"endColumn":28},{"ruleId":"1077","severity":1,"message":"1133","line":5,"column":9,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":20},{"ruleId":"1077","severity":1,"message":"1098","line":5,"column":26,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":43},{"ruleId":"1083","severity":1,"message":"1084","line":5,"column":1,"nodeType":"1085","endLine":13,"endColumn":2},{"ruleId":"1077","severity":1,"message":"1098","line":7,"column":26,"nodeType":"1079","messageId":"1080","endLine":7,"endColumn":43},{"ruleId":"1128","severity":1,"message":"1129","line":46,"column":9,"nodeType":"1097","endLine":46,"endColumn":51},{"ruleId":"1095","severity":1,"message":"1100","line":95,"column":13,"nodeType":"1097","endLine":99,"endColumn":14},{"ruleId":"1095","severity":1,"message":"1100","line":20,"column":11,"nodeType":"1097","endLine":20,"endColumn":81},{"ruleId":"1095","severity":1,"message":"1100","line":23,"column":11,"nodeType":"1097","endLine":23,"endColumn":81},{"ruleId":"1095","severity":1,"message":"1100","line":26,"column":11,"nodeType":"1097","endLine":26,"endColumn":81},{"ruleId":"1095","severity":1,"message":"1100","line":29,"column":11,"nodeType":"1097","endLine":29,"endColumn":81},{"ruleId":"1073","replacedBy":"1134"},{"ruleId":"1075","replacedBy":"1135"},{"ruleId":"1077","severity":1,"message":"1078","line":1,"column":17,"nodeType":"1079","messageId":"1080","endLine":1,"endColumn":26},{"ruleId":"1073","replacedBy":"1136"},{"ruleId":"1075","replacedBy":"1137"},{"ruleId":"1083","severity":1,"message":"1084","line":36,"column":1,"nodeType":"1085","endLine":58,"endColumn":2},{"ruleId":"1083","severity":1,"message":"1084","line":120,"column":1,"nodeType":"1085","endLine":205,"endColumn":2},{"ruleId":"1073","replacedBy":"1138"},{"ruleId":"1075","replacedBy":"1139"},{"ruleId":"1140","severity":1,"message":"1141","line":15,"column":6,"nodeType":"1142","endLine":15,"endColumn":8,"suggestions":"1143"},{"ruleId":"1091","severity":1,"message":"1092","line":92,"column":48,"nodeType":"1093","messageId":"1094","endLine":92,"endColumn":50},{"ruleId":"1073","replacedBy":"1144"},{"ruleId":"1075","replacedBy":"1145"},{"ruleId":"1073","replacedBy":"1146"},{"ruleId":"1075","replacedBy":"1147"},{"ruleId":"1077","severity":1,"message":"1130","line":5,"column":9,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":15},{"ruleId":"1077","severity":1,"message":"1131","line":2,"column":9,"nodeType":"1079","messageId":"1080","endLine":2,"endColumn":26},{"ruleId":"1091","severity":1,"message":"1092","line":63,"column":73,"nodeType":"1093","messageId":"1094","endLine":63,"endColumn":75},{"ruleId":"1077","severity":1,"message":"1098","line":8,"column":26,"nodeType":"1079","messageId":"1080","endLine":8,"endColumn":43},{"ruleId":"1077","severity":1,"message":"1099","line":9,"column":8,"nodeType":"1079","messageId":"1080","endLine":9,"endColumn":24},{"ruleId":"1095","severity":1,"message":"1100","line":47,"column":21,"nodeType":"1097","endLine":47,"endColumn":83},{"ruleId":"1095","severity":1,"message":"1100","line":52,"column":21,"nodeType":"1097","endLine":52,"endColumn":80},{"ruleId":"1095","severity":1,"message":"1100","line":67,"column":9,"nodeType":"1097","endLine":71,"endColumn":10},{"ruleId":"1095","severity":1,"message":"1096","line":15,"column":83,"nodeType":"1097","endLine":15,"endColumn":87},{"ruleId":"1095","severity":1,"message":"1096","line":16,"column":83,"nodeType":"1097","endLine":16,"endColumn":87},{"ruleId":"1095","severity":1,"message":"1100","line":62,"column":11,"nodeType":"1097","endLine":62,"endColumn":87},{"ruleId":"1095","severity":1,"message":"1100","line":69,"column":15,"nodeType":"1097","endLine":69,"endColumn":54},{"ruleId":"1095","severity":1,"message":"1100","line":74,"column":17,"nodeType":"1097","endLine":74,"endColumn":29},{"ruleId":"1104","severity":1,"message":"1105","line":75,"column":19,"nodeType":"1097","endLine":75,"endColumn":114},{"ruleId":"1095","severity":1,"message":"1100","line":85,"column":17,"nodeType":"1097","endLine":85,"endColumn":29},{"ruleId":"1095","severity":1,"message":"1100","line":98,"column":17,"nodeType":"1097","endLine":98,"endColumn":29},{"ruleId":"1095","severity":1,"message":"1100","line":109,"column":17,"nodeType":"1097","endLine":109,"endColumn":29},{"ruleId":"1095","severity":1,"message":"1100","line":120,"column":13,"nodeType":"1097","endLine":120,"endColumn":47},{"ruleId":"1077","severity":1,"message":"1123","line":1,"column":9,"nodeType":"1079","messageId":"1080","endLine":1,"endColumn":26},{"ruleId":"1124","severity":1,"message":"1125","line":5,"column":5,"nodeType":"1126","messageId":"1127","endLine":7,"endColumn":6},{"ruleId":"1073","replacedBy":"1148"},{"ruleId":"1075","replacedBy":"1149"},{"ruleId":"1128","severity":1,"message":"1129","line":45,"column":7,"nodeType":"1097","endLine":45,"endColumn":56},{"ruleId":"1095","severity":1,"message":"1100","line":109,"column":11,"nodeType":"1097","endLine":113,"endColumn":12},{"ruleId":"1128","severity":1,"message":"1129","line":122,"column":7,"nodeType":"1097","endLine":122,"endColumn":54},{"ruleId":"1095","severity":1,"message":"1100","line":21,"column":31,"nodeType":"1097","endLine":21,"endColumn":43},{"ruleId":"1077","severity":1,"message":"1117","line":4,"column":5,"nodeType":"1079","messageId":"1080","endLine":4,"endColumn":23},{"ruleId":"1077","severity":1,"message":"1118","line":4,"column":25,"nodeType":"1079","messageId":"1080","endLine":4,"endColumn":40},{"ruleId":"1077","severity":1,"message":"1119","line":4,"column":42,"nodeType":"1079","messageId":"1080","endLine":4,"endColumn":55},{"ruleId":"1077","severity":1,"message":"1120","line":5,"column":5,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":26},{"ruleId":"1077","severity":1,"message":"1121","line":5,"column":28,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":46},{"ruleId":"1077","severity":1,"message":"1122","line":5,"column":47,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":63},{"ruleId":"1077","severity":1,"message":"1132","line":8,"column":24,"nodeType":"1079","messageId":"1080","endLine":8,"endColumn":48},{"ruleId":"1077","severity":1,"message":"1111","line":9,"column":9,"nodeType":"1079","messageId":"1080","endLine":9,"endColumn":28},{"ruleId":"1091","severity":1,"message":"1150","line":50,"column":77,"nodeType":"1093","messageId":"1094","endLine":50,"endColumn":79},{"ruleId":"1083","severity":1,"message":"1084","line":139,"column":1,"nodeType":"1085","endLine":241,"endColumn":2},{"ruleId":"1083","severity":1,"message":"1084","line":27,"column":1,"nodeType":"1085","endLine":42,"endColumn":2},{"ruleId":"1095","severity":1,"message":"1100","line":156,"column":99,"nodeType":"1097","endLine":156,"endColumn":136},{"ruleId":"1095","severity":1,"message":"1096","line":58,"column":17,"nodeType":"1097","endLine":58,"endColumn":20},{"ruleId":"1077","severity":1,"message":"1101","line":1,"column":69,"nodeType":"1079","messageId":"1080","endLine":1,"endColumn":79},{"ruleId":"1077","severity":1,"message":"1098","line":5,"column":26,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":43},{"ruleId":"1095","severity":1,"message":"1100","line":57,"column":9,"nodeType":"1097","endLine":57,"endColumn":84},{"ruleId":"1095","severity":1,"message":"1100","line":59,"column":9,"nodeType":"1097","endLine":59,"endColumn":83},{"ruleId":"1104","severity":1,"message":"1105","line":60,"column":11,"nodeType":"1097","endLine":60,"endColumn":119},{"ruleId":"1095","severity":1,"message":"1100","line":81,"column":17,"nodeType":"1097","endLine":81,"endColumn":29},{"ruleId":"1095","severity":1,"message":"1100","line":87,"column":17,"nodeType":"1097","endLine":87,"endColumn":51},{"ruleId":"1106","severity":1,"message":"1107","line":71,"column":21,"nodeType":"1108","endLine":71,"endColumn":42},{"ruleId":"1095","severity":1,"message":"1100","line":121,"column":25,"nodeType":"1097","endLine":121,"endColumn":81},{"ruleId":"1095","severity":1,"message":"1096","line":137,"column":19,"nodeType":"1097","endLine":140,"endColumn":20},{"ruleId":"1077","severity":1,"message":"1151","line":4,"column":8,"nodeType":"1079","messageId":"1080","endLine":4,"endColumn":24},{"ruleId":"1095","severity":1,"message":"1096","line":14,"column":9,"nodeType":"1097","endLine":14,"endColumn":64},{"ruleId":"1152","severity":1,"message":"1153","line":16,"column":13,"nodeType":"1097","endLine":16,"endColumn":57},{"ruleId":"1104","severity":1,"message":"1105","line":21,"column":21,"nodeType":"1097","endLine":21,"endColumn":100},{"ruleId":"1140","severity":1,"message":"1154","line":24,"column":7,"nodeType":"1142","endLine":24,"endColumn":9,"suggestions":"1155"},{"ruleId":"1083","severity":1,"message":"1084","line":5,"column":1,"nodeType":"1085","endLine":13,"endColumn":2},{"ruleId":"1095","severity":1,"message":"1096","line":38,"column":23,"nodeType":"1097","endLine":38,"endColumn":26},{"ruleId":"1095","severity":1,"message":"1096","line":44,"column":23,"nodeType":"1097","endLine":44,"endColumn":26},{"ruleId":"1077","severity":1,"message":"1090","line":5,"column":8,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":17},{"ruleId":"1077","severity":1,"message":"1156","line":8,"column":10,"nodeType":"1079","messageId":"1080","endLine":8,"endColumn":13},{"ruleId":"1077","severity":1,"message":"1157","line":13,"column":7,"nodeType":"1079","messageId":"1080","endLine":13,"endColumn":16},{"ruleId":"1077","severity":1,"message":"1158","line":41,"column":11,"nodeType":"1079","messageId":"1080","endLine":41,"endColumn":27},{"ruleId":"1095","severity":1,"message":"1100","line":20,"column":11,"nodeType":"1097","endLine":20,"endColumn":81},{"ruleId":"1095","severity":1,"message":"1100","line":23,"column":11,"nodeType":"1097","endLine":23,"endColumn":81},{"ruleId":"1095","severity":1,"message":"1100","line":26,"column":11,"nodeType":"1097","endLine":26,"endColumn":81},{"ruleId":"1095","severity":1,"message":"1100","line":29,"column":11,"nodeType":"1097","endLine":29,"endColumn":81},{"ruleId":"1095","severity":1,"message":"1100","line":42,"column":11,"nodeType":"1097","endLine":42,"endColumn":164},{"ruleId":"1104","severity":1,"message":"1105","line":23,"column":33,"nodeType":"1097","endLine":23,"endColumn":117},{"ruleId":"1083","severity":1,"message":"1084","line":67,"column":1,"nodeType":"1085","endLine":139,"endColumn":2},{"ruleId":"1077","severity":1,"message":"1109","line":2,"column":8,"nodeType":"1079","messageId":"1080","endLine":2,"endColumn":23},{"ruleId":"1095","severity":1,"message":"1096","line":134,"column":17,"nodeType":"1097","endLine":134,"endColumn":20},{"ruleId":"1095","severity":1,"message":"1096","line":140,"column":17,"nodeType":"1097","endLine":140,"endColumn":20},{"ruleId":"1083","severity":1,"message":"1084","line":37,"column":1,"nodeType":"1085","endLine":60,"endColumn":2},{"ruleId":"1077","severity":1,"message":"1109","line":7,"column":8,"nodeType":"1079","messageId":"1080","endLine":7,"endColumn":23},{"ruleId":"1077","severity":1,"message":"1111","line":9,"column":9,"nodeType":"1079","messageId":"1080","endLine":9,"endColumn":28},{"ruleId":"1077","severity":1,"message":"1112","line":14,"column":7,"nodeType":"1079","messageId":"1080","endLine":14,"endColumn":12},{"ruleId":"1077","severity":1,"message":"1113","line":23,"column":11,"nodeType":"1079","messageId":"1080","endLine":23,"endColumn":20},{"ruleId":"1077","severity":1,"message":"1114","line":31,"column":12,"nodeType":"1079","messageId":"1080","endLine":31,"endColumn":20},{"ruleId":"1077","severity":1,"message":"1115","line":31,"column":22,"nodeType":"1079","messageId":"1080","endLine":31,"endColumn":33},{"ruleId":"1077","severity":1,"message":"1116","line":32,"column":12,"nodeType":"1079","messageId":"1080","endLine":32,"endColumn":19},{"ruleId":"1095","severity":1,"message":"1100","line":156,"column":85,"nodeType":"1097","endLine":156,"endColumn":122},{"ruleId":"1077","severity":1,"message":"1110","line":8,"column":8,"nodeType":"1079","messageId":"1080","endLine":8,"endColumn":18},{"ruleId":"1095","severity":1,"message":"1100","line":29,"column":9,"nodeType":"1097","endLine":29,"endColumn":86},{"ruleId":"1077","severity":1,"message":"1123","line":1,"column":9,"nodeType":"1079","messageId":"1080","endLine":1,"endColumn":26},{"ruleId":"1124","severity":1,"message":"1125","line":6,"column":5,"nodeType":"1126","messageId":"1127","endLine":8,"endColumn":6},{"ruleId":"1091","severity":1,"message":"1092","line":38,"column":16,"nodeType":"1093","messageId":"1094","endLine":38,"endColumn":18},{"ruleId":"1091","severity":1,"message":"1092","line":46,"column":16,"nodeType":"1093","messageId":"1094","endLine":46,"endColumn":18},{"ruleId":"1077","severity":1,"message":"1159","line":5,"column":9,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":13},{"ruleId":"1077","severity":1,"message":"1160","line":24,"column":24,"nodeType":"1079","messageId":"1080","endLine":24,"endColumn":32},{"ruleId":"1161","severity":1,"message":"1162","line":95,"column":43,"nodeType":"1163","messageId":"1164","endLine":95,"endColumn":44},{"ruleId":"1077","severity":1,"message":"1165","line":3,"column":9,"nodeType":"1079","messageId":"1080","endLine":3,"endColumn":20},{"ruleId":"1091","severity":1,"message":"1092","line":35,"column":16,"nodeType":"1093","messageId":"1094","endLine":35,"endColumn":18},{"ruleId":"1166","severity":1,"message":"1167","line":53,"column":22,"nodeType":"1168","messageId":"1094","endLine":53,"endColumn":29},{"ruleId":"1091","severity":1,"message":"1092","line":62,"column":16,"nodeType":"1093","messageId":"1094","endLine":62,"endColumn":18},{"ruleId":"1077","severity":1,"message":"1169","line":1,"column":16,"nodeType":"1079","messageId":"1080","endLine":1,"endColumn":25},{"ruleId":"1077","severity":1,"message":"1170","line":4,"column":8,"nodeType":"1079","messageId":"1080","endLine":4,"endColumn":14},{"ruleId":"1077","severity":1,"message":"1165","line":5,"column":9,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":20},{"ruleId":"1077","severity":1,"message":"1171","line":6,"column":16,"nodeType":"1079","messageId":"1080","endLine":6,"endColumn":25},{"ruleId":"1077","severity":1,"message":"1172","line":7,"column":8,"nodeType":"1079","messageId":"1080","endLine":7,"endColumn":11},{"ruleId":"1091","severity":1,"message":"1092","line":64,"column":16,"nodeType":"1093","messageId":"1094","endLine":64,"endColumn":18},{"ruleId":"1091","severity":1,"message":"1092","line":81,"column":16,"nodeType":"1093","messageId":"1094","endLine":81,"endColumn":18},{"ruleId":"1104","severity":1,"message":"1105","line":96,"column":29,"nodeType":"1097","endLine":96,"endColumn":104},{"ruleId":"1104","severity":1,"message":"1105","line":100,"column":29,"nodeType":"1097","endLine":100,"endColumn":113},{"ruleId":"1077","severity":1,"message":"1159","line":4,"column":9,"nodeType":"1079","messageId":"1080","endLine":4,"endColumn":13},{"ruleId":"1077","severity":1,"message":"1173","line":6,"column":19,"nodeType":"1079","messageId":"1080","endLine":6,"endColumn":30},{"ruleId":"1077","severity":1,"message":"1174","line":9,"column":11,"nodeType":"1079","messageId":"1080","endLine":9,"endColumn":25},{"ruleId":"1083","severity":1,"message":"1084","line":83,"column":1,"nodeType":"1085","endLine":158,"endColumn":2},{"ruleId":"1077","severity":1,"message":"1133","line":5,"column":9,"nodeType":"1079","messageId":"1080","endLine":5,"endColumn":20},{"ruleId":"1128","severity":1,"message":"1129","line":10,"column":9,"nodeType":"1097","endLine":10,"endColumn":27},{"ruleId":"1095","severity":1,"message":"1100","line":15,"column":13,"nodeType":"1097","endLine":15,"endColumn":72},{"ruleId":"1077","severity":1,"message":"1078","line":1,"column":17,"nodeType":"1079","messageId":"1080","endLine":1,"endColumn":26},{"ruleId":"1077","severity":1,"message":"1175","line":1,"column":38,"nodeType":"1079","messageId":"1080","endLine":1,"endColumn":47},{"ruleId":"1077","severity":1,"message":"1176","line":8,"column":9,"nodeType":"1079","messageId":"1080","endLine":8,"endColumn":13},{"ruleId":"1077","severity":1,"message":"1177","line":9,"column":8,"nodeType":"1079","messageId":"1080","endLine":9,"endColumn":16},{"ruleId":"1077","severity":1,"message":"1172","line":10,"column":8,"nodeType":"1079","messageId":"1080","endLine":10,"endColumn":11},{"ruleId":"1077","severity":1,"message":"1170","line":13,"column":8,"nodeType":"1079","messageId":"1080","endLine":13,"endColumn":14},{"ruleId":"1077","severity":1,"message":"1178","line":21,"column":10,"nodeType":"1079","messageId":"1080","endLine":21,"endColumn":25},{"ruleId":"1077","severity":1,"message":"1179","line":26,"column":9,"nodeType":"1079","messageId":"1080","endLine":26,"endColumn":17},{"ruleId":"1077","severity":1,"message":"1180","line":38,"column":9,"nodeType":"1079","messageId":"1080","endLine":38,"endColumn":24},{"ruleId":"1181","severity":1,"message":"1182","line":40,"column":5,"nodeType":"1183","messageId":"1184","endLine":40,"endColumn":31},"no-native-reassign",["1185"],"no-negated-in-lhs",["1186"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["1185"],["1186"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["1185"],["1186"],["1185"],["1186"],"'SearchBar' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'SupportedLanguage' is defined but never used.","'LanguageSelector' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'clearError' is defined but never used.",["1185"],["1186"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","'SelectComponent' is defined but never used.","'SearchForm' is defined but never used.","'createBasicContract' is defined but never used.","'nodes' is assigned a value but never used.","'fileArray' is assigned a value but never used.","'location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'endDate' is assigned a value but never used.","'processingVotePoll' is defined but never used.","'votePollSucceed' is defined but never used.","'votePollError' is defined but never used.","'processingPollProcess' is defined but never used.","'pollProcessSucceed' is defined but never used.","'pollProcessError' is defined but never used.","'makeCosmoshubPath' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","'Wallet' is defined but never used.","'Secp256k1HdWallet' is defined but never used.","'updateRelContractAddress' is defined but never used.","'useDispatch' is defined but never used.",["1185"],["1186"],["1185"],["1186"],["1185"],["1186"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1187"],["1185"],["1186"],["1185"],["1186"],["1185"],["1186"],"Expected '!==' and instead saw '!='.","'AdminHouseDetail' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'props.data.contractAddress'. Either include it or remove the dependency array.",["1188"],"'Fab' is defined but never used.","'useStyles' is assigned a value but never used.","'toggleNavigation' is assigned a value but never used.","'Icon' is defined but never used.","'setTried' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useSelector' is defined but never used.","no-dupe-keys","Duplicate key 'address'.","ObjectExpression","'useEffect' is defined but never used.","'Avatar' is defined but never used.","'TextField' is defined but never used.","'pic' is defined but never used.","'faCaretDown' is defined but never used.","'walletInstance' is assigned a value but never used.","'useStyles' is defined but never used.","'Link' is defined but never used.","'MainCard' is defined but never used.","'requestResponse' is assigned a value but never used.","'complain' is assigned a value but never used.","'responseHandler' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"1189","fix":"1190"},{"desc":"1191","fix":"1192"},"Update the dependencies array to be: [dispatch]",{"range":"1193","text":"1194"},"Update the dependencies array to be: [props.data.contractAddress]",{"range":"1195","text":"1196"},[471,473],"[dispatch]",[1097,1099],"[props.data.contractAddress]"]